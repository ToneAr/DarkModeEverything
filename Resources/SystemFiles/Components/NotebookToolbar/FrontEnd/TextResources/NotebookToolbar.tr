@@resource NotebookToolbarStrings
{
    "Evaluate" -> "Evaluate:",
    "EvaluateAddToQueue" -> "Add to Queue",
    "EvaluateInPlace" -> "In Place",
    "EvaluateInitializationCells" -> "Initialization Cells",
    "EvaluateSelectedCells" -> "Selected Cells",
    "EvaluateShiftEnter" -> "Evaluate",
    "EvaluateOptions" -> "Evaluation Controls",
    "EvaluateTooltip" -> "Evaluate",
    "EvaluatePackage"-> "Run Package",
    "EvaluatePackageTooltip" -> "Evaluate initialization cells",
    "Abort" -> "Abort",
    "AbortMenuHeader" -> "Abort Evaluation",
    "AbortEvaluation" -> "Abort All Cells in Queue",
    "AbortRemoveFromQueue" -> "Remove Selected Cells from Queue",
    "AbortTooltip" -> "Abort",
    "Find" -> "Find in notebook",
    "LocalizeSymbols" -> "Localize Symbols to Notebook",
    "Global" -> "Global",
    "Notebook" -> "Notebook",
    "ChatControlHeader" -> "Chat Notebook Settings",
    "ChatControlTooltip" -> "Chat notebook settings",
    "ChatControlLinkLabel" -> "Read the announcement",
    "ChatControlInstall" -> "Chat Notebook features are not yet installed.",
    "ChatControlConnect" -> "Connect to the internet to install.",
    "NavNoResults" -> "No results found",
    "NavHelp1" -> "Search for sections and definitions.",
    "NavHelp2" -> "Begin with : to search by line number.",
    "NavGoToLine" -> "Line",
    "OpenDocumentation" -> "Open documentation",
    "ParallelKernelStatus" -> "Parallel Kernel Status\[Ellipsis]",
    "SaveOrPublishToCloud" -> "Save or publish notebook to Wolfram Cloud",
    "SaveToCloud" -> "Save to Cloud\[Ellipsis]",
    "PublishToCloud" -> "Publish to Cloud\[Ellipsis]",
    "OutlineDisplay" -> "Go To\[Ellipsis]",
    "OutlineTooltip" -> "Navigate the package notebook",
    "CellStyle" -> "Cell Style",
    "CellStyleTooltip" -> "Cell style",
    "CellStyleAll" -> "All Styles",
    "InsertCell" -> "Insert Cell\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] Multiple \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "Cancel",
    "Inherited" -> "Inherited",
    "CellDecorations" -> "Change the cell background, etc.",
    "CellGrouping" -> "Group, divide and merge cells",
    "CellMerge" -> "Merge Cells",
    "CellDivide" -> "Divide Cells",
    "CellGroup" -> "Group Cells",
    "CellUngroup" -> "Ungroup Cells",
    "CellAppearance" -> "Cell Appearance",
    "CellAppearanceNoCell" -> "No cell selected",
    "CellAppearanceBackground" -> "Background",
    "CellColorPalette" -> "Palette\[Ellipsis]",
    "CellColorNone"  -> "None",
    "CellColorBlack"  -> "Black",
    "CellColorGray"  -> "Gray",
    "CellColorLightGray"  -> "Light Gray",
    "CellColorWhite"  -> "White",
    "CellColorLightBlue"  -> "Light Blue",
    "CellColorLightBrown"  -> "Light Brown",
    "CellColorLightCyan"  -> "Light Cyan",
    "CellColorLightGreen"  -> "Light Green",
    "CellColorLightMagenta"  -> "Light Magenta",
    "CellColorLightOrange"  -> "Light Orange",
    "CellColorLightPink"  -> "Light Pink",
    "CellColorLightPurple"  -> "Light Purple",
    "CellColorLightRed"  -> "Light Red",
    "CellColorLightYellow"  -> "Light Yellow",
    "CellColorBlue" -> "Blue",
    "CellColorBrown" -> "Brown",
    "CellColorCyan" -> "Cyan",
    "CellColorGreen" -> "Green",
    "CellColorMagenta" -> "Magenta",
    "CellColorOrange"  -> "Orange",
    "CellColorPink"  -> "Pink",
    "CellColorPurple"  -> "Purple",
    "CellColorRed"  -> "Red",
    "CellColorYellow"  -> "Yellow",
    "CellAppearanceFrameStyle" -> "Frame Style",
    "CellFrameColor" -> "Cell Frame Color",
    "CellFrameEditAll" -> "Edit all edges together",
    "CellAppearanceDingbat" -> "Dingbat",
    "DingbatNone" -> "Default",
    "DingbatFilledSquare" -> "\\[FilledSquare]",
    "DingbatGraySquare" -> "\\[GraySquare]",
    "DingbatEmptySquare" -> "\\[EmptySquare]",
    "DingbatDottedSquare" -> "\\[DottedSquare]",
    "DingbatFilledSmallSquare" -> "\\[FilledSmallSquare]",
    "DingbatEmptySmallSquare" -> "\\[EmptySmallSquare]",
    "DingbatFilledCircle" -> "\\[FilledCircle]",
    "DingbatGrayCircle" -> "\\[GrayCircle]",
    "DingbatEmptyCircle" -> "\\[EmptyCircle]",
    "DingbatFilledSmallCircle" -> "\\[FilledSmallCircle]",
    "DingbatEmptySmallCircle" -> "\\[EmptySmallCircle]",
    "DingbatFilledDiamond" -> "\\[FilledDiamond]",
    "DingbatEmptyDiamond" -> "\\[EmptyDiamond]",
    "DingbatFilledUpTriangle" -> "\\[FilledUpTriangle]",
    "DingbatEmptyUpTriangle" -> "\\[EmptyUpTriangle]",
    "DingbatFilledDownTriangle" -> "\\[FilledDownTriangle]",
    "DingbatEmptyDownTriangle" -> "\\[EmptyDownTriangle]",
    "DingbatWatch" -> "\\[WatchIcon]",
    "DingbatFilledStar" -> "\\[FilledStar]",
    "DingbatHappySmiley" -> "\\[HappySmiley]",
    "DingbatNeutralSmiley" -> "\\[NeutralSmiley]",
    "DingbatSadSmiley" -> "\\[SadSmiley]",
    "DingbatLightBulb" -> "\\[LightBulb]",
    "DingbatWolf" -> "\\[Wolf]",
    "DingbatClubSuit" -> "\\[ClubSuit]",
    "DingbatDiamondSuit" -> "\\[DiamondSuit]",
    "DingbatHeartSuit" -> "\\[HeartSuit]",
    "DingbatSpadeSuit" -> "\\[SpadeSuit]",
    "InsertFromAboveInput" -> "Insert the contents of the input cell above",
    "InsertFromAboveOutput" -> "Insert the contents of the output cell above",
    "TextBold" -> "Bold",
    "TextItalic" -> "Italic",
    "TextUnderline" -> "Underline",
    "TextColor" -> "Color",
    "TextBackground" -> "Background",
    "TextFormatting" -> "Text Formatting",
    "TextFormattingTooltip" -> "Text formatting",
    "TextAlignLeft" -> "Align left",
    "TextAlignCenter" -> "Align center",
    "TextAlignRight" -> "Align right",
    "TextJustify" -> "Full text justification",
    "FontSize" -> "Font Size",
    "FontSize9" -> "9 pt",
    "FontSize10" -> "10 pt",
    "FontSize12" -> "12 pt",
    "FontSize14" -> "14 pt",
    "FontSize16" -> "16 pt",
    "FontSize18" -> "18 pt",
    "FontSize24" -> "24 pt",
    "FontSize36" -> "36 pt",
    "FontSize72" -> "72 pt",
    "FontSizeOther" -> "Other",
    "ToggleComment" -> "Un/Comment the selected code or cells",
    "ToggleIconize" -> "Collapse the selected code into an icon",
    "ExtendSelection" -> "Extend the selection",
    "ControlEqual" -> "Interpret natural language into Wolfram Language code",
    "InsertCode" -> "Insert code text",
    "Typesetting" -> "Insert math",
    "InsertMath" -> "Insert \!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)",
    "InsertCanvas" -> "Insert drawing canvas",
    "Hyperlink" -> "Hyperlink",
    "HyperlinkAdd" -> "Make Hyperlink\[Ellipsis]",
    "HyperlinkRemove" -> "Remove Hyperlink",
    "HyperlinkCopy" -> "Copy Hyperlink",
    "HyperlinkCopyAddress" -> "Copy Address",
    "OverflowTooltip" -> "More",
    "MinimizeToolbarTooltip" -> "Minimize toolbar",
    "ExpandToolbarTooltip" -> "Expand toolbar",
    "SectionTitleEvaluation" -> "Evaluation",
    "SectionTitleNotebook" -> "Notebook",
    "SectionTitleCellStyle" -> "Cell Style",
    "SectionTitleCells" -> "Cells",
    "SectionTitleText" -> "Text",
    "SectionTitleCode" -> "Code",
    "SectionTitleInsert" -> "Insert",
    "NBToolbarMenuShow" -> "Show Toolbar in this Notebook",
    "NBToolbarMenuShowAll" -> "Show Toolbar in All Notebooks by Default",
    "NBToolbarMenuMinimize" -> "Minimize Toolbar in All Notebooks by Default",
    "NBToolbarMenuLabels" -> "Show Toolbar Labels",

    (* PacletExpressionPane *)
    "pepLoading" -> "Getting information about ",
    "pepUnknown" -> " was not found on the Wolfram paclet server.",
    "pepUnknownOffline" -> "Could not reach the Wolfram paclet server to find ",
    "pepCheckButton" -> "Try Again",
    "pepAbsent" -> " is available, but not yet installed on this system.",
    "pepInstallButton" -> "Install",
    "pepInstallOffline" -> "An internet connection is needed to install this paclet.",
    "pepUpdates" -> " updates are available.",
    "pepUpdateButton" -> "Update",
    "pepUpdateSkipButton" -> "Skip For Now",
    "pepUpdateOffline" -> "An internet connection is needed to update this paclet.",
    "pepInvalid" -> " returned something unexpected.",
    "pepRetryButton" -> "Try Again"
}
@|
@@resource NotebookToolbarStrings ChineseSimplified
{
    "Evaluate" -> "\:8BA1\:7B97\:ff1a",
    "EvaluateAddToQueue" -> "\:6DFB\:52A0\:5230\:961F\:5217\:4E2D",
    "EvaluateInPlace" -> "\:5728\:5F53\:524D\:4F4D\:7F6E\:4E0A\:8BA1\:7B97",
    "EvaluateInitializationCells" -> "\:521D\:59CB\:5316\:5355\:5143",
    "EvaluateSelectedCells" -> "\:9009\:4E2D\:7684\:5355\:5143",
    "EvaluateShiftEnter" -> "\:8BA1\:7B97",
    "EvaluateOptions" -> "\:63A7\:5236\:8BA1\:7B97",
    "EvaluateTooltip" -> "\:8BA1\:7B97",
    "EvaluatePackage"-> "\:8FD0\:884C\:7A0B\:5E8F\:5305",
    "EvaluatePackageTooltip" -> "\:8ba1\:7b97\:521d\:59cb\:5316\:5355\:5143",
    "Abort" -> "\:4E2D\:6B62",
    "AbortMenuHeader" -> "\:4E2D\:6B62\:8BA1\:7B97",
    "AbortEvaluation" -> "\:4E2D\:6B62\:961F\:5217\:4E2D\:6240\:6709\:5355\:5143\:7684\:8BA1\:7B97",
    "AbortRemoveFromQueue" -> "\:5C06\:6240\:9009\:5355\:5143\:4ECE\:961F\:5217\:4E2D\:79FB\:9664",
    "AbortTooltip" -> "\:4E2D\:6B62",
    "Find" -> "\:5728\:7B14\:8BB0\:672C\:4E2D\:67E5\:627E",
    "LocalizeSymbols" -> "\:672C\:5730\:5316\:7B14\:8BB0\:672C\:4E2D\:7684\:7B26\:53F7",
    "Global" -> "\:5168\:5C40",
    "Notebook" -> "\:7B14\:8BB0\:672C",
    "NavNoResults" -> "\:672A\:627E\:5230\:4EFB\:4F55\:7ED3\:679C",
    "NavHelp1" -> "\:641C\:7D22\:7AE0\:8282\:548C\:5B9A\:4E49\:3002",
    "NavHelp2" -> "\:6309\:884C\:53F7\:641C\:7D22\:3002",
    "NavGoToLine" -> "\:884C\:53F7",
    "ChatControlHeader" -> "\:804A\:5929\:7B14\:8BB0\:672C\:7684\:8BBE\:7F6E",
    "ChatControlTooltip" -> "\:804A\:5929\:7B14\:8BB0\:672C\:7684\:8BBE\:7F6E",
    "ChatControlLinkLabel" -> "\:9605\:8BFB\:516C\:544A",
    "ChatControlInstall" -> "\:5C1A\:672A\:5B89\:88C5\[OpenCurlyDoubleQuote]\:804A\:5929\:7B14\:8BB0\:672C\[CloseCurlyDoubleQuote]\:529F\:80FD\:3002",
    "ChatControlConnect" -> "\:8FDE\:63A5\:5230\:4E92\:8054\:7F51\:8FDB\:884C\:5B89\:88C5\:3002",
    "OpenDocumentation" -> "\:6253\:5F00\:6587\:6863",
    "ParallelKernelStatus" -> "\:5E76\:884C\:5185\:6838\:7684\:72B6\:6001\[Ellipsis]",
    "SaveOrPublishToCloud" -> "\:5C06\:7B14\:8BB0\:672C\:4FDD\:5B58\:6216\:53D1\:5E03\:5230 Wolfram Cloud",
    "SaveToCloud" -> "\:4FDD\:5B58\:5230\:4E91\:7AEF\[Ellipsis]",
    "PublishToCloud" -> "\:53D1\:5E03\:5230\:4E91\:7AEF\[Ellipsis]",
    "OutlineDisplay" -> "\:524D\:5F80\[Ellipsis]",
    "OutlineTooltip" -> "\:6D4F\:89C8\:7A0B\:5E8F\:5305\:7B14\:8BB0\:672C",
    "CellStyle" -> "\:5355\:5143\:7684\:6837\:5F0F",
    "CellStyleTooltip" -> "\:5355\:5143\:7684\:6837\:5F0F",
    "CellStyleAll" -> "\:6240\:6709\:6837\:5F0F",
    "InsertCell" -> "\:63D2\:5165\:5355\:5143\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] \:591A\:4E2A\:5355\:5143 \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "\:53D6\:6D88",
    "Inherited" -> "\:7EE7\:627F",
    "CellDecorations" -> "\:6539\:53D8\:5355\:5143\:7684\:80CC\:666F\:989C\:8272\:7B49",
    "CellGrouping" -> "\:5206\:7EC4\:3001\:5212\:5206\:4E0E\:5408\:5E76\:5355\:5143",
    "CellMerge" -> "\:5408\:5E76\:5355\:5143",
    "CellDivide" -> "\:5212\:5206\:5355\:5143",
    "CellGroup" -> "\:5355\:5143\:7F16\:7EC4",
    "CellUngroup" -> "\:53D6\:6D88\:5355\:5143\:7F16\:7EC4",
    "CellAppearanceNoCell" -> "\:6CA1\:6709\:9009\:4E2D\:4EFB\:4F55\:5355\:5143",
    "CellAppearance" -> "\:5355\:5143\:7684\:5916\:89C2",
    "CellAppearanceBackground" -> "\:80CC\:666F\:989C\:8272",
    "CellColorPalette" -> "\:9762\:677F\[Ellipsis]",
    "CellColorNone"  -> "\:65E0",
    "CellColorBlack"  -> "\:9ED1\:8272",
    "CellColorGray"  -> "\:7070\:8272",
    "CellColorLightGray"  -> "\:6D45\:7070\:8272",
    "CellColorWhite"  -> "\:767D\:8272",
    "CellColorLightBlue"  -> "\:6D45\:84DD\:8272",
    "CellColorLightBrown"  -> "\:6D45\:8910\:8272",
    "CellColorLightCyan"  -> "\:6D45\:9752\:8272",
    "CellColorLightGreen"  -> "\:6D45\:7EFF\:8272",
    "CellColorLightMagenta"  -> "\:6D45\:6D0B\:7EA2\:8272",
    "CellColorLightOrange"  -> "\:6D45\:6A58\:9EC4\:8272",
    "CellColorLightPink"  -> "\:6D45\:7C89\:8272",
    "CellColorLightPurple"  -> "\:6D45\:7D2B\:8272",
    "CellColorLightRed"  -> "\:6D45\:7EA2\:8272",
    "CellColorLightYellow"  -> "\:6D45\:9EC4\:8272",
    "CellColorBlue" -> "\:84DD\:8272",
    "CellColorBrown" -> "\:8910\:8272",
    "CellColorCyan" -> "\:9752\:8272",
    "CellColorGreen" -> "\:7EFF\:8272",
    "CellColorMagenta" -> "\:6D0B\:7EA2\:8272",
    "CellColorOrange"  -> "\:6A58\:9EC4\:8272",
    "CellColorPink"  -> "\:7C89\:8272",
    "CellColorPurple"  -> "\:7D2B\:8272",
    "CellColorRed"  -> "\:7EA2\:8272",
    "CellColorYellow"  -> "\:9EC4\:8272",
    "CellAppearanceFrameStyle" -> "\:8FB9\:6846\:7684\:6837\:5F0F",
    "CellFrameColor" -> "\:5355\:5143\:8FB9\:6846\:7684\:989C\:8272",
    "CellFrameEditAll" -> "\:540C\:65F6\:7F16\:8F91\:6240\:6709\:7684\:8FB9",
    "CellAppearanceDingbat" -> "\:5355\:5143\:6807\:5FD7\:7B26",
    "DingbatNone" -> "\:65E0",
    "DingbatFilledSquare" -> "\:5B9E\:5FC3\:65B9\:5757",
    "DingbatGraySquare" -> "\:7070\:8272\:65B9\:5757",
    "DingbatEmptySquare" -> "\:7A7A\:5FC3\:65B9\:5757",
    "DingbatDottedSquare" -> "\:865A\:7EBF\:65B9\:5757",
    "DingbatFilledSmallSquare" -> "\:5B9E\:5FC3\:5C0F\:65B9\:5757",
    "DingbatEmptySmallSquare" -> "\:7A7A\:5FC3\:5C0F\:65B9\:5757",
    "DingbatFilledCircle" -> "\:5B9E\:5FC3\:5706\:5708",
    "DingbatGrayCircle" -> "\:7070\:8272\:5706\:5708",
    "DingbatEmptyCircle" -> "\:7A7A\:5FC3\:5706\:5708",
    "DingbatFilledSmallCircle" -> "\:5B9E\:5FC3\:5C0F\:5706\:5708",
    "DingbatEmptySmallCircle" -> "\:7A7A\:5FC3\:5C0F\:5706\:5708",
    "DingbatFilledDiamond" -> "\:5B9E\:5FC3\:83F1\:5F62",
    "DingbatEmptyDiamond" -> "\:7A7A\:5FC3\:83F1\:5F62",
    "DingbatFilledUpTriangle" -> "\:5B9E\:5FC3\:6B63\:4E09\:89D2\:5F62",
    "DingbatEmptyUpTriangle" -> "\:7A7A\:5FC3\:6B63\:4E09\:89D2\:5F62",
    "DingbatFilledDownTriangle" -> "\:5B9E\:5FC3\:5012\:4E09\:89D2\:5F62",
    "DingbatEmptyDownTriangle" -> "\:7A7A\:5FC3\:5012\:4E09\:89D2\:5F62",
    "DingbatWatch" -> "\:65F6\:949F",
    "DingbatFilledStar" -> "\:5B9E\:5FC3\:661F\:5F62",
    "DingbatHappySmiley" -> "\:7B11\:8138\:8868\:60C5\:7B26",
    "DingbatNeutralSmiley" -> "\:4E2D\:6027\:8868\:60C5\:7B26",
    "DingbatSadSmiley" -> "\:60B2\:4F24\:8868\:60C5\:7B26",
    "DingbatLightBulb" -> "\:706F\:6CE1",
    "DingbatWolf" -> "\:72FC\:5934",
    "DingbatClubSuit" -> "\:6885\:82B1",
    "DingbatDiamondSuit" -> "\:65B9\:7247",
    "DingbatHeartSuit" -> "\:7EA2\:6843",
    "DingbatSpadeSuit" -> "\:9ED1\:6843",
    "InsertFromAboveInput" -> "\:63D2\:5165\:4E0A\:4E00\:4E2A\:5355\:5143\:7684\:8F93\:5165",
    "InsertFromAboveOutput" -> "\:63D2\:5165\:4E0A\:4E00\:4E2A\:5355\:5143\:7684\:8F93\:51FA",
    "TextBold" -> "\:7C97\:4F53",
    "TextItalic" -> "\:659C\:4F53",
    "TextUnderline" -> "\:4E0B\:5212\:7EBF",
    "TextColor" -> "\:989C\:8272",
    "TextBackground" -> "\:80CC\:666F\:989C\:8272",
    "TextFormatting" -> "\:6587\:5B57\:683C\:5F0F",
    "TextFormattingTooltip" -> "\:6587\:5B57\:683C\:5F0F",
    "TextAlignLeft" -> "\:5DE6\:5BF9\:9F50",
    "TextAlignCenter" -> "\:4E2D\:5FC3\:5BF9\:9F50",
    "TextAlignRight" -> "\:53F3\:5BF9\:9F50",
    "TextJustify" -> "\:5168\:6587\:5BF9\:9F50",
    "FontSize" -> "\:5B57\:4F53\:5927\:5C0F",
    "FontSize9" -> "9 \:53F7",
    "FontSize10" -> "10 \:53F7",
    "FontSize12" -> "12 \:53F7",
    "FontSize14" -> "14 \:53F7",
    "FontSize16" -> "16 \:53F7",
    "FontSize18" -> "18 \:53F7",
    "FontSize24" -> "24 \:53F7",
    "FontSize36" -> "36 \:53F7",
    "FontSize72" -> "72 \:53F7",
    "FontSizeOther" -> "\:5176\:4ED6",
    "ToggleComment" -> "\:53D6\:6D88\:002f\:8BBE\:5B9A\:6240\:9009\:4EE3\:7801\:6216\:5355\:5143\:4E3A\:6CE8\:91CA",
    "ToggleIconize" -> "\:5C06\:6240\:9009\:4EE3\:7801\:7F29\:51CF\:6210\:4E00\:4E2A\:56FE\:6807",
    "ExtendSelection" -> "\:6269\:5C55\:9009\:4E2D\:7684\:5185\:5BB9",
    "ControlEqual" -> "\:5C06\:81EA\:7136\:8BED\:8A00\:8F6C\:91CA\:4E3A Wolfram \:8BED\:8A00\:4EE3\:7801",
    "InsertCode" -> "\:63D2\:5165\:4EE3\:7801\:6587\:672C",
    "Typesetting" -> "\:63D2\:5165\:6570\:5B66\:5185\:5BB9",
    "InsertMath" -> "\:63D2\:5165 \!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)",
    "InsertCanvas" -> "\:63D2\:5165\:753B\:5E03",
    "Hyperlink" -> "\:8D85\:94FE\:63A5",
    "HyperlinkAdd" -> "\:8D85\:94FE\:63A5\[Ellipsis]",
    "HyperlinkRemove" -> "\:5220\:9664\:8D85\:94FE\:63A5",
    "HyperlinkCopy" -> "\:590D\:5236\:8D85\:94FE\:63A5",
    "HyperlinkCopyAddress" -> "\:590D\:5236\:5730\:5740",
    "OverflowTooltip" -> "\:66F4\:591A",
    "MinimizeToolbarTooltip" -> "\:6700\:5C0F\:5316\:5DE5\:5177\:6761",
    "ExpandToolbarTooltip" -> "\:6269\:5C55\:5DE5\:5177\:6761",
    "SectionTitleEvaluation" -> "\:8BA1\:7B97",
    "SectionTitleNotebook" -> "\:7B14\:8BB0\:672C",
    "SectionTitleCellStyle" -> "\:5355\:5143\:7684\:6837\:5F0F",
    "SectionTitleCells" -> "\:5355\:5143",
    "SectionTitleText" -> "\:6587\:672C",
    "SectionTitleCode" -> "\:4EE3\:7801",
    "SectionTitleInsert" -> "\:63D2\:5165",
    "NBToolbarMenuShow" -> "\:5728\:6B64\:7B14\:8BB0\:672C\:4E2D\:663E\:793A\:5DE5\:5177\:680F",
    "NBToolbarMenuShowAll" -> "\:9ED8\:8BA4\:5728\:6240\:6709\:7B14\:8BB0\:672C\:4E2D\:663E\:793A\:5DE5\:5177\:680F",
    "NBToolbarMenuMinimize" -> "\:9ED8\:8BA4\:6700\:5C0F\:5316\:6240\:6709\:7B14\:8BB0\:672C\:4E2D\:7684\:5DE5\:5177\:680F",
    "NBToolbarMenuLabels" -> "\:663E\:793A\:5DE5\:5177\:680F\:7684\:6807\:7B7E",

    (* PacletExpressionPane *)
    "pepLoading" -> "\:6B63\:5728\:83B7\:53D6\:4E0E\:4EE5\:4E0B\:5185\:5BB9\:76F8\:5173\:7684\:4FE1\:606F\:ff1a",
    "pepUnknown" -> " \:4E0D\:5728 Wolfram \:7A0B\:5E8F\:5305\:670D\:52A1\:5668\:4E0A.",
    "pepUnknownOffline" -> "\:65E0\:6CD5\:8BBF\:95EE Wolfram \:7A0B\:5E8F\:5305\:670D\:52A1\:5668\:4EE5\:67E5\:627E ",
    "pepCheckButton" -> "\:518D\:8BD5\:4E00\:6B21",
    "pepAbsent" -> " \:53EF\:7528\:ff0c\:4F46\:5C1A\:672A\:5B89\:88C5\:5728\:6B64\:7CFB\:7EDF\:4E0A.",
    "pepInstallButton" -> "\:5B89\:88C5",
    "pepInstallOffline" -> "\:9700\:8981\:6709\:7F51\:7EDC\:8FDE\:63A5\:624D\:80FD\:5B89\:88C5\:8BE5\:7A0B\:5E8F\:5305.",
    "pepUpdates" -> " \:5DF2\:66F4\:65B0.",
    "pepUpdateButton" -> "\:66F4\:65B0",
    "pepUpdateSkipButton" -> "\:6682\:65F6\:8DF3\:8FC7",
    "pepUpdateOffline" -> "\:9700\:8981\:6709\:7F51\:7EDC\:8FDE\:63A5\:624D\:80FD\:66F4\:65B0\:8BE5\:7A0B\:5E8F\:5305.",
    "pepInvalid" -> " \:8FD4\:56DE\:4E86\:4E00\:4E9B\:610F\:5916\:7684\:5185\:5BB9.",
    "pepRetryButton" -> "\:518D\:8BD5\:4E00\:6B21"
}
@|
@@resource NotebookToolbarStrings Korean
{
    "Evaluate" -> "\:d3c9\:ac00:",
    "EvaluateAddToQueue" -> "\:d050\:c5d0 \:cd94\:ac00",
    "EvaluateInPlace" -> "\:d604\:c7ac \:c704\:ce58",
    "EvaluateInitializationCells" -> "\:cd08\:ae30\:d654 \:c140",
    "EvaluateSelectedCells" -> "\:c120\:d0dd\:b41c \:c140",
    "EvaluateShiftEnter" -> "\:d3c9\:ac00",
    "EvaluateOptions" -> "\:d3c9\:ac00 \:c81c\:c5b4",
    "EvaluateTooltip" -> "\:d3c9\:ac00",    
    "EvaluatePackage"-> "Run Package",
    "EvaluatePackageTooltip" -> "\:cd08\:ae30\:d654 \:c140\:c744 \:d3c9\:ac00",
    "Abort" -> "\:c911\:b2e8", 
    "AbortMenuHeader" -> "\:d3c9\:ac00 \:c911\:b2e8",
    "AbortEvaluation" -> "\:d050\:c758 \:baa8\:b4e0 \:c140\:c744 \:c911\:b2e8",
    "AbortRemoveFromQueue" -> "\:d050\:c5d0\:c11c \:c120\:d0dd\:b41c \:c140\:c744 \:c0ad\:c81c",
    "AbortTooltip" -> "\:c911\:b2e8", 
    "Find" -> "\:b178\:d2b8\:bd81\:c744 \:ac80\:c0c9",
    "LocalizeSymbols" -> "\:ae30\:d638\:b97c \:b178\:d2b8\:bd81\:c5d0 \:d604\:c9c0\:d654",
    "Global" -> "\:AE00\:B85C\:BC8C",
    "Notebook" -> "\:b178\:d2b8\:bd81",
    "NavNoResults" -> "No results found",
    "NavHelp1" -> "Search for sections and definitions.",
    "NavHelp2" -> "Begin with : to search by line number.",
    "NavGoToLine" -> "Line",
    "ChatControlHeader" -> "\:CC44\:D305 \:B178\:D2B8\:BD81 \:C124\:C815",
    "ChatControlTooltip" -> "\:CC44\:D305 \:B178\:D2B8\:BD81 \:C124\:C815",
    "ChatControlLinkLabel" -> "\:ACF5\:C9C0\:C0AC\:D56D \:C77D\:AE30",
    "ChatControlInstall" -> "\:CC44\:D305 \:B178\:D2B8\:BD81 \:AE30\:B2A5\:C774 \:C544\:C9C1 \:C124\:CE58\:B418\:C9C0 \:C54A\:C558\:C2B5\:B2C8\:B2E4.",
    "ChatControlConnect" -> "\:C778\:D130\:B137\:C5D0 \:C5F0\:ACB0\:D558\:C5EC \:AE30\:B2A5\:C744 \:C124\:CE58\:D569\:B2C8\:B2E4.",
    "OpenDocumentation" -> "\:bb38\:c11c \:c5f4\:ae30",
    "ParallelKernelStatus" -> "\:bcd1\:b82c \:cee4\:b110 \:c0c1\:d0dc\[Ellipsis]",
    "SaveOrPublishToCloud" -> "\:b178\:d2b8\:bd81\:c744 Wolfram Cloud\:c5d0 \:c800\:c7a5 \:b610\:b294 \:acf5\:ac1c",
    "SaveToCloud" -> "Cloud\:c5d0 \:c800\:c7a5\[Ellipsis]",
    "PublishToCloud" -> "Cloud\:c5d0 \:acf5\:ac1c\[Ellipsis]",
    "OutlineDisplay" -> "Go To\[Ellipsis]",
    "OutlineTooltip" -> "Navigate the package notebook",
    "CellStyle" -> "\:c140 \:c2a4\:d0c0\:c77c",
    "CellStyleTooltip" -> "\:c140 \:c2a4\:d0c0\:c77c",
    "CellStyleAll" -> "All Styles",
    "InsertCell" -> "\:c140 \:c0bd\:c785\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] \:b2e4\:c218 \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "\:CDE8\:C18C",
    "Inherited" -> "\:C0C1\:C18D",
    "CellDecorations" -> "\:c140\:c758 \:bc30\:acbd\:c0c9, \:d14c\:b450\:b9ac \:b4f1\:c758 \:bcc0\:acbd",
    "CellGrouping" -> "\:c140\:c758 \:adf8\:b8f9\:d654, \:bd84\:d560 \:bc0f \:acb0\:d569",
    "CellMerge" -> "\:c140\:c758 \:acb0\:d569",
    "CellDivide" -> "\:c140\:c758 \:bd84\:d560",
    "CellGroup" -> "\:c140\:c758 \:adf8\:b8f9\:d654",
    "CellUngroup" -> "\:c140\:c758 \:adf8\:b8f9\:d654 \:d574\:c81c",
    "CellAppearanceNoCell" -> "\:C120\:D0DD\:B41C \:C140\:C774 \:C5C6\:C74C",
    "CellAppearance" -> "\:c140\:c758 \:baa8\:c591",
    "CellAppearanceBackground" -> "\:bc30\:acbd\:c0c9",
    "CellColorPalette" -> "\:D314\:B808\:D2B8\[Ellipsis]",
    "CellColorNone"  -> "\:c5c6\:c74c",
    "CellColorBlack"  -> "\:ac80\:c815\:c0c9",
    "CellColorGray"  -> "\:d68c\:c0c9",
    "CellColorLightGray"  -> "\:c5f0\:d55c \:d68c\:c0c9",
    "CellColorWhite"  -> "\:d770\:c0c9",
    "CellColorLightBlue"  -> "\:d558\:b298\:c0c9",
    "CellColorLightBrown"  -> "\:c5f0\:d55c \:ac08\:c0c9",
    "CellColorLightCyan"  -> "\:c5f0\:d55c \:ccad\:b85d\:c0c9",
    "CellColorLightGreen"  -> "\:c5f0\:d55c \:cd08\:b85d\:c0c9",
    "CellColorLightMagenta"  -> "\:c5f0\:d55c \:b9c8\:c820\:d0c0",
    "CellColorLightOrange"  -> "\:c5f0\:d55c \:c8fc\:d669\:c0c9",
    "CellColorLightPink"  -> "\:c5f0\:d55c \:bd84\:d64d\:c0c9",
    "CellColorLightPurple"  -> "\:c5f0\:d55c \:bcf4\:b77c\:c0c9",
    "CellColorLightRed"  -> "\:c5f0\:d55c \:be68\:ac04\:c0c9",
    "CellColorLightYellow"  -> "\:c5f0\:d55c \:b178\:b780\:c0c9",
    "CellColorBlue" -> "\:D30C\:B780\:C0C9",
    "CellColorBrown" -> "\:AC08\:C0C9",
    "CellColorCyan" -> "\:CCAD\:B85D\:C0C9",
    "CellColorGreen" -> "\:CD08\:B85D\:C0C9",
    "CellColorMagenta" -> "\:b9c8\:c820\:d0c0",
    "CellColorOrange"  -> "\:c8fc\:d669\:c0c9",
    "CellColorPink"  -> "\:bd84\:d64d\:c0c9",
    "CellColorPurple"  -> "\:bcf4\:b77c\:c0c9",
    "CellColorRed"  -> "\:BE68\:AC04\:C0C9",
    "CellColorYellow"  -> "\:b178\:b780\:c0c9",
    "CellAppearanceFrameStyle" -> "\:D504\:B808\:C784 \:C2A4\:D0C0\:C77C",
    "CellFrameColor" -> "\:C140 \:D504\:B808\:C784 \:C0C9",
    "CellFrameEditAll" -> "\:BAA8\:B4E0 \:BAA8\:C11C\:B9AC\:B97C \:D568\:AED8 \:D3B8\:C9D1",
    "CellAppearanceDingbat" -> "\:c81c\:baa9 \:ae30\:d638",
    "DingbatNone" -> "\:b514\:d3f4\:d2b8",
    "DingbatFilledSquare" -> "\\[FilledSquare]",
    "DingbatGraySquare" -> "\\[GraySquare]",
    "DingbatEmptySquare" -> "\\[EmptySquare]",
    "DingbatDottedSquare" -> "\\[DottedSquare]",
    "DingbatFilledSmallSquare" -> "\\[FilledSmallSquare]",
    "DingbatEmptySmallSquare" -> "\\[EmptySmallSquare]",
    "DingbatFilledCircle" -> "\\[FilledCircle]",
    "DingbatGrayCircle" -> "\\[GrayCircle]",
    "DingbatEmptyCircle" -> "\\[EmptyCircle]",
    "DingbatFilledSmallCircle" -> "\\[FilledSmallCircle]",
    "DingbatEmptySmallCircle" -> "\\[EmptySmallCircle]",
    "DingbatFilledDiamond" -> "\\[FilledDiamond]",
    "DingbatEmptyDiamond" -> "\\[EmptyDiamond]",
    "DingbatFilledUpTriangle" -> "\\[FilledUpTriangle]",
    "DingbatEmptyUpTriangle" -> "\\[EmptyUpTriangle]",
    "DingbatFilledDownTriangle" -> "\\[FilledDownTriangle]",
    "DingbatEmptyDownTriangle" -> "\\[EmptyDownTriangle]",
    "DingbatWatch" -> "\\[WatchIcon]",
    "DingbatFilledStar" -> "\\[FilledStar]",
    "DingbatHappySmiley" -> "\\[HappySmiley]",
    "DingbatNeutralSmiley" -> "\\[NeutralSmiley]",
    "DingbatSadSmiley" -> "\\[SadSmiley]",
    "DingbatLightBulb" -> "\\[LightBulb]",
    "DingbatWolf" -> "\\[Wolf]",
    "DingbatClubSuit" -> "\\[ClubSuit]",
    "DingbatDiamondSuit" -> "\\[DiamondSuit]",
    "DingbatHeartSuit" -> "\\[HeartSuit]",
    "DingbatSpadeSuit" -> "\\[SpadeSuit]",
    "InsertFromAboveInput" -> "\:c704 \:c785\:b825 \:c140\:c758 \:b0b4\:c6a9\:c744 \:c0bd\:c785",
    "InsertFromAboveOutput" -> "\:c704 \:cd9c\:b825 \:c140\:c758 \:b0b4\:c6a9\:c744 \:c0bd\:c785",
    "TextBold" -> "\:ad75\:c740 \:ae00\:c528",
    "TextItalic" -> "\:c774\:d0e4\:b9ad\:ccb4",
    "TextUnderline" -> "\:bc11\:c904",
    "TextColor" -> "\:c0c9",
    "TextBackground" -> "\:bc30\:acbd\:c0c9",
    "TextFormatting" -> "\:d14d\:c2a4\:d2b8\:c758 \:c11c\:c2dd",
    "TextFormattingTooltip" -> "\:d14d\:c2a4\:d2b8\:c758 \:c11c\:c2dd",    
    "TextAlignLeft" -> "\:c67c\:cabd \:c815\:b82c",
    "TextAlignCenter" -> "\:c911\:c559 \:c815\:b82c",
    "TextAlignRight" -> "\:c624\:b978\:cabd \:c815\:b82c",
    "TextJustify" -> "\:c804\:ccb4 \:d14d\:c2a4\:d2b8\:c758 \:c591\:cabd \:c815\:b82c",
    "FontSize" -> "\:ae00\:af34 \:d06c\:ae30",
    "FontSize9" -> "9 \:d3ec\:c778\:d2b8",
    "FontSize10" -> "10 \:d3ec\:c778\:d2b8",
    "FontSize12" -> "12 \:d3ec\:c778\:d2b8",
    "FontSize14" -> "14 \:d3ec\:c778\:d2b8",
    "FontSize16" -> "16 \:d3ec\:c778\:d2b8",
    "FontSize18" -> "18 \:d3ec\:c778\:d2b8",
    "FontSize24" -> "24 \:d3ec\:c778\:d2b8",
    "FontSize36" -> "36 \:d3ec\:c778\:d2b8",
    "FontSize72" -> "72 \:d3ec\:c778\:d2b8",
    "FontSizeOther" -> "\:ae30\:d0c0",
    "ToggleComment" -> "\:c120\:d0dd\:b41c \:cf54\:b4dc \:b610\:b294 \:c140\:c758 \:c8fc\:c11d \:cc98\:b9ac/\:be44\:c8fc\:c11d \:cc98\:b9ac",
    "ToggleIconize" -> "\:c120\:d0dd\:b41c \:cf54\:b4dc\:b97c \:c811\:c5b4 \:c544\:c774\:cf58\:d654",
    "ExtendSelection" -> "\:c120\:d0dd\:b41c \:bd80\:bd84\:c744 \:d655\:c7a5",
    "ControlEqual" -> "\:c790\:c5f0\:c5b4\:b97c \:d574\:c11d\:d558\:c5ec Wolfram \:c5b8\:c5b4 \:cf54\:b4dc\:b85c \:bcc0\:d658",
    "InsertCode" -> "\:cf54\:b4dc \:d14d\:c2a4\:d2b8 \:c0bd\:c785",
    "Typesetting" -> "\:c218\:c2dd \:c0bd\:c785",
    "InsertMath" -> "\!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)\:B97C \:C0BD\:C785",
    "InsertCanvas" -> "\:adf8\:b9ac\:ae30 \:ce94\:bc84\:c2a4 \:c0bd\:c785",
    "Hyperlink" -> "\:d558\:c774\:d37c\:b9c1\:d06c",
    "HyperlinkAdd" -> "\:d558\:c774\:d37c\:b9c1\:d06c",
    "HyperlinkRemove" -> "\:d558\:c774\:d37c\:b9c1\:d06c \:c0ad\:c81c",
    "HyperlinkCopy" -> "\:d558\:c774\:d37c\:b9c1\:d06c \:bcf5\:c0ac",
    "HyperlinkCopyAddress" -> "\:c8fc\:c18c \:bcf5\:c0ac",
    "OverflowTooltip" -> "\:b354\:bcf4\:ae30",
    "MinimizeToolbarTooltip" -> "\:D234\:BC14 \:CD5C\:C18C\:D654",
    "ExpandToolbarTooltip" -> "\:D234\:BC14 \:D655\:C7A5",
    "SectionTitleEvaluation" -> "\:D3C9\:AC00",
    "SectionTitleNotebook" -> "\:B178\:D2B8\:BD81",
    "SectionTitleCellStyle" -> "\:C140 \:C2A4\:D0C0\:C77C",
    "SectionTitleCells" -> "\:C140",
    "SectionTitleText" -> "\:D14D\:C2A4\:D2B8",
    "SectionTitleCode" -> "\:CF54\:B4DC",
    "SectionTitleInsert" -> "\:C0BD\:C785",
    "NBToolbarMenuShow" -> "\:C774 \:B178\:D2B8\:BD81\:C5D0 \:D234\:BC14 \:D45C\:C2DC",
    "NBToolbarMenuShowAll" -> "\:AE30\:BCF8 \:C124\:C815\:C73C\:B85C \:BAA8\:B4E0 \:B178\:D2B8\:BD81\:C5D0 \:D234\:BC14 \:D45C\:C2DC",
    "NBToolbarMenuMinimize" -> "\:AE30\:BCF8 \:C124\:C815\:C73C\:B85C \:BAA8\:B4E0 \:B178\:D2B8\:BD81\:C5D0\:C11C \:D234\:BC14 \:CD5C\:C18C\:D654",
    "NBToolbarMenuLabels" -> "\:D234\:BC14 \:B77C\:BCA8 \:D45C\:C2DC",

    (* PacletExpressionPane *)
    "pepLoading" -> "\:C815\:BCF4 \:C5BB\:AE30 ",
    "pepUnknown" -> " Wolfram \:D328\:D074\:B81B \:C11C\:BC84\:C5D0\:C11C \:CC3E\:C744 \:C218 \:C5C6\:C2B5\:B2C8\:B2E4.",
    "pepUnknownOffline" -> "\:CC3E\:C744 Wolfram \:D328\:D074\:B81B \:C11C\:BC84\:C5D0 \:B3C4\:B2EC\:D560 \:C218 \:C5C6\:C2B5\:B2C8\:B2E4 ",
    "pepCheckButton" -> "\:C7AC\:C2DC\:B3C4",
    "pepAbsent" -> " \:C0AC\:C6A9\:D560 \:C218 \:C788\:C9C0\:B9CC \:C544\:C9C1 \:C124\:CE58\:B418\:C9C0 \:C54A\:C558\:C2B5\:B2C8\:B2E4.",
    "pepInstallButton" -> "\:C124\:CE58",
    "pepInstallOffline" -> "\:C774 \:D328\:D074\:B81B\:C744 \:C124\:CE58\:D558\:B824\:BA74 \:C778\:D130\:B137 \:C5F0\:ACB0\:C774 \:D544\:C694\:D569\:B2C8\:B2E4.",
    "pepUpdates" -> " \:C5C5\:B370\:C774\:D2B8\:B97C \:C0AC\:C6A9\:D560 \:C218 \:C788\:C2B5\:B2C8\:B2E4.",
    "pepUpdateButton" -> "\:C5C5\:B370\:C774\:D2B8",
    "pepUpdateSkipButton" -> "\:C9C0\:AE08\:C740 \:C2A4\:D0B5\:D569\:B2C8\:B2E4",
    "pepUpdateOffline" -> "\:C774 \:D328\:D074\:B81B\:C744 \:C5C5\:B370\:C774\:D2B8\:D558\:B824\:BA74 \:C778\:D130\:B137 \:C5F0\:ACB0\:C774 \:D544\:C694\:D569\:B2C8\:B2E4.",
    "pepInvalid" -> " \:C608\:C0C1\:CE58 \:BABB\:D55C \:D45C\:D604\:C744 \:BC18\:D658\:D588\:C2B5\:B2C8\:B2E4.",
    "pepRetryButton" -> "\:C7AC\:C2DC\:B3C4"
}
@|
@@resource NotebookToolbarStrings ChineseTraditional
{
    "Evaluate" -> "\:8A08\:7B97\:FF1A",
    "EvaluateAddToQueue" -> "\:589E\:6DFB\:81F3\:4F47\:5217",
    "EvaluateInPlace" -> "\:5230\:4F4D",
    "EvaluateInitializationCells" -> "\:521D\:59CB\:5316\:5132\:5B58\:683C",
    "EvaluateSelectedCells" -> "\:5DF2\:9078\:53D6\:5132\:5B58\:683C",
    "EvaluateShiftEnter" -> "\:8A08\:7B97", 
    "EvaluateOptions" -> "\:904B\:7B97\:7BA1\:7406",
    "EvaluateTooltip" -> "\:8A08\:7B97",
    "EvaluatePackage"-> "\:904B\:884C\:5C01\:5305",
    "EvaluatePackageTooltip" -> "\:8a08\:7b97\:521d\:59cb\:5316\:5132\:5b58\:683c",
    "Abort" -> "\:4E2D\:6B62", 
    "AbortMenuHeader" -> "\:4E2D\:6B62\:904B\:7B97",
    "AbortEvaluation" -> "\:4E2D\:6B62\:6240\:6709\:4F47\:5217\:4E2D\:7684\:5132\:5B58\:683C",
    "AbortRemoveFromQueue" -> "\:5F9E\:4F47\:5217\:4E2D\:79FB\:9664\:5DF2\:9078\:53D6\:5132\:5B58\:683C",
    "AbortTooltip" -> "\:4E2D\:6B62",
    "Find" -> "\:5728\:7B46\:8A18\:672C\:4E2D\:67E5\:627E",
    "LocalizeSymbols" -> "\:5C40\:90E8\:5316\:7B26\:865F\:81F3\:7B46\:8A18\:672C",
    "Global" -> "\:5168\:57DF",
    "Notebook" -> "\:7B46\:8A18\:672C",
    "NavNoResults" -> "\:627E\:4E0D\:5230\:7D50\:679C",
    "NavHelp1" -> "\:641C\:5C0B\:9078\:53D6\:90E8\:5206\:8207\:5B9A\:7FA9\:3002",
    "NavHelp2" -> "\:958B\:59CB\:FF1A\:4F9D\:5217\:865F\:9032\:884C\:641C\:5C0B\:3002",
    "NavGoToLine" -> "\:5217",
    "ChatControlHeader" -> "\:7DB2\:8DEF\:804A\:5929\:7CFB\:7D71\:7B46\:8A18\:672C\:8A2D\:5B9A",
    "ChatControlTooltip" -> "\:7DB2\:8DEF\:804A\:5929\:7CFB\:7D71\:7B46\:8A18\:672C\:8A2D\:5B9A",
    "ChatControlLinkLabel" -> "\:8B80\:53D6\:516C\:544A",
    "ChatControlInstall" -> "\:5C1A\:672A\:5B89\:88DD\:7DB2\:8DEF\:804A\:5929\:7CFB\:7D71\:7B46\:8A18\:672C\:529F\:80FD\:3002",
    "ChatControlConnect" -> "\:9023\:63A5\:7DB2\:969B\:7DB2\:8DEF\:4EE5\:4FBF\:9032\:884C\:5B89\:88DD\:3002",
    "OpenDocumentation" -> "\:958B\:555F\:6587\:4EF6",
    "ParallelKernelStatus" -> "\:5E73\:884C\:6838\:5FC3\:72C0\:614B\[Ellipsis]",
    "SaveOrPublishToCloud" -> "\:5132\:5B58\:6216\:767C\:4F48\:7B46\:8A18\:672C\:81F3 Wolfram Cloud",
    "SaveToCloud" -> "\:5132\:5B58\:5230 Cloud\[Ellipsis]",
    "PublishToCloud" -> "\:767C\:4F48\:81F3 Cloud\[Ellipsis]",
    "OutlineDisplay" -> "\:8F49\:81F3\[Ellipsis]",
    "OutlineTooltip" -> "\:5C0E\:89BD\:5C01\:5305\:7B46\:8A18\:672C",
    "CellStyle" -> "\:5132\:5B58\:683C\:6A23\:5F0F",
    "CellStyleTooltip" -> "\:5132\:5B58\:683C\:6A23\:5F0F",
    "CellStyleAll" -> "\:6240\:6709\:6A23\:5F0F",
    "InsertCell" -> "\:63D2\:5165\:5132\:5B58\:683C\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] \:591A\:500B \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "\:53D6\:6D88",
    "Inherited" -> "\:7E7C\:627F",
    "CellDecorations" -> "\:66F4\:6539\:5132\:5B58\:683C\:80CC\:666F\:7B49",
    "CellGrouping" -> "\:7FA4\:7D44\:5316\:3001\:5206\:9694\:8207\:5408\:4F75\:5132\:5B58\:683C",
    "CellMerge" -> "\:5408\:4F75\:5132\:5B58\:683C",
    "CellDivide" -> "\:5206\:9694\:5132\:5B58\:683C",
    "CellGroup" -> "\:7FA4\:7D44\:5316\:5132\:5B58\:683C",
    "CellUngroup" -> "\:53BB\:7FA4\:7D44\:5316\:5132\:5B58\:683C",
    "CellAppearanceNoCell" -> "\:672A\:9078\:53D6\:5132\:5B58\:683C",
    "CellAppearance" -> "\:5132\:5B58\:683C\:5916\:89C0",
    "CellAppearanceBackground" -> "\:80CC\:666F",
    "CellColorPalette" -> "\:8ABF\:8272\[Ellipsis]",
    "CellColorNone"  -> "\:7121",
    "CellColorBlack"  -> "\:9ED1\:8272",
    "CellColorGray"  -> "\:7070\:8272",
    "CellColorLightGray"  -> "\:6DE1\:7070\:8272",
    "CellColorWhite"  -> "\:767D\:8272",
    "CellColorLightBlue"  -> "\:6DE1\:85CD\:8272",
    "CellColorLightBrown"  -> "\:6DE1\:8910\:8272",
    "CellColorLightCyan"  -> "\:6DE1\:9752\:8272",
    "CellColorLightGreen"  -> "\:6DE1\:7DA0\:8272",
    "CellColorLightMagenta"  -> "\:6DE1\:6D0B\:7D05\:8272",
    "CellColorLightOrange"  -> "\:6DE1\:6A59\:8272",
    "CellColorLightPink"  -> "\:6DE1\:7C89\:7D05\:8272",
    "CellColorLightPurple"  -> "\:6DE1\:7D2B\:8272",
    "CellColorLightRed"  -> "\:6DE1\:7D05\:8272",
    "CellColorLightYellow"  -> "\:6DE1\:9EC3\:8272",
    "CellColorBlue" -> "\:85CD\:8272",
    "CellColorBrown" -> "\:68D5\:8272",
    "CellColorCyan" -> "\:85CD\:7DA0\:8272",
    "CellColorGreen" -> "\:7DA0\:8272",
    "CellColorMagenta" -> "\:54C1\:7D05\:8272",
    "CellColorOrange"  -> "\:6A59\:8272",
    "CellColorPink"  -> "\:7C89\:7D05\:8272",
    "CellColorPurple"  -> "\:7D2B\:8272",
    "CellColorRed"  -> "\:7D05\:8272",
    "CellColorYellow"  -> "\:9EC3\:8272",
    "CellAppearanceFrameStyle" -> "\:908A\:6846\:6A23\:5F0F",
    "CellFrameColor" -> "\:5132\:5B58\:683C\:908A\:6846\:984F\:8272",
    "CellFrameEditAll" -> "\:540C\:6642\:7DE8\:8F2F\:6240\:6709\:908A",
    "CellAppearanceDingbat" -> "\:96DC\:9326\:5B57\:578B",
    "DingbatNone" -> "\:5167\:5B9A",
    "DingbatFilledSquare" -> "\:6B63\:65B9\:5F62\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatGraySquare" -> "\:6B63\:65B9\:5F62\:FF08\:7070\:8272\:FF09",
    "DingbatEmptySquare" -> "\:6B63\:65B9\:5F62\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatDottedSquare" -> "\:6B63\:65B9\:5F62\:FF08\:865B\:7DDA\:FF09",
    "DingbatFilledSmallSquare" -> "\:5C0F\:6B63\:65B9\:5F62\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatEmptySmallSquare" -> "\:5C0F\:6B63\:65B9\:5F62\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatFilledCircle" -> "\:5713\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatGrayCircle" -> "\:5713\:FF08\:7070\:8272\:FF09",
    "DingbatEmptyCircle" -> "\:5713\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatFilledSmallCircle" -> "\:5C0F\:5713\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatEmptySmallCircle" -> "\:5C0F\:5713\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatFilledDiamond" -> "\:83F1\:5F62\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatEmptyDiamond" -> "\:83F1\:5F62\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatFilledUpTriangle" -> "\:6B63\:4E09\:89D2\:5F62\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatEmptyUpTriangle" -> "\:6B63\:4E09\:89D2\:5F62\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatFilledDownTriangle" -> "\:5012\:4E09\:89D2\:5F62\:FF08\:5BE6\:5FC3\:FF09",
    "DingbatEmptyDownTriangle" -> "\:5012\:4E09\:89D2\:5F62\:FF08\:7A7A\:5FC3\:FF09",
    "DingbatWatch" -> "\:624B\:9336",
    "DingbatFilledStar" -> "\:5BE6\:5FC3\:661F\:5F62",
    "DingbatHappySmiley" -> "\:7B11\:81C9",
    "DingbatNeutralSmiley" -> "\:4EBA\:81C9",
    "DingbatSadSmiley" -> "\:54ED\:81C9",
    "DingbatLightBulb" -> "\:71C8\:6CE1",
    "DingbatWolf" -> "\:91CE\:72FC",
    "DingbatClubSuit" -> "\:6885\:82B1",
    "DingbatDiamondSuit" -> "\:65B9\:584A",
    "DingbatHeartSuit" -> "\:7D05\:5FC3",
    "DingbatSpadeSuit" -> "\:9ED1\:6843",
    "InsertFromAboveInput" -> "\:5728\:8F38\:5165\:5132\:5B58\:683C\:4E0A\:9762\:63D2\:5165\:5167\:5BB9",
    "InsertFromAboveOutput" -> "\:5728\:8F38\:51FA\:5132\:5B58\:683C\:4E0A\:9762\:63D2\:5165\:5167\:5BB9",
    "TextBold" -> "\:7C97\:9AD4",
    "TextItalic" -> "\:659C\:9AD4",
    "TextUnderline" -> "\:4E0B\:5283\:7DDA",
    "TextColor" -> "\:984F\:8272",
    "TextBackground" -> "\:80CC\:666F",
    "TextFormatting" -> "\:6587\:672C\:683C\:5F0F\:5316\:4E2D",
    "TextFormattingTooltip" -> "\:6587\:672C\:683C\:5F0F\:5316\:4E2D",
    "TextAlignLeft" -> "\:9760\:5DE6\:5C0D\:9F4A",
    "TextAlignCenter" -> "\:4E2D\:5FC3\:5C0D\:9F4A",
    "TextAlignRight" -> "\:9760\:53F3\:5C0D\:9F4A",
    "TextJustify" -> "\:5168\:6B63\:6587\:5C0D\:9F4A",
    "FontSize" -> "\:5B57\:578B\:5927\:5C0F",
    "FontSize9" -> "9\:9EDE",
    "FontSize10" -> "10\:9EDE",
    "FontSize12" -> "12\:9EDE",
    "FontSize14" -> "14\:9EDE",
    "FontSize16" -> "16\:9EDE",
    "FontSize18" -> "18\:9EDE",
    "FontSize24" -> "24\:9EDE",
    "FontSize36" -> "36\:9EDE",
    "FontSize72" -> "72\:9EDE",
    "FontSizeOther" -> "\:5176\:4ED6",
    "ToggleComment" -> "\:5C07\:5DF2\:9078\:53D6\:7DE8\:78BC\:6216\:5132\:5B58\:683C\:53D6\:6D88/\:8F49\:6210\:8A3B\:89E3",
    "ToggleIconize" -> "\:5C07\:5DF2\:9078\:53D6\:7DE8\:78BC\:647A\:758A\:5165\:5716\:793A",
    "ExtendSelection" -> "\:5EF6\:4F38\:9078\:53D6\:90E8\:5206",
    "ControlEqual" -> "\:5C07\:81EA\:7136\:8A9E\:8A00\:89E3\:8B6F\:6210 Wolfram \:8A9E\:8A00\:7DE8\:78BC",
    "InsertCode" -> "\:63D2\:5165\:7DE8\:78BC\:6587\:672C",
    "Typesetting" -> "\:63D2\:5165\:6578\:5B78\:5167\:5BB9",
    "InsertMath" -> "\:63D2\:5165 \!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)",
    "InsertCanvas" -> "\:63D2\:5165\:7E6A\:5716\:756B\:5E03",
    "Hyperlink" -> "\:8D85\:9023\:7D50",
    "HyperlinkAdd" -> "\:7522\:751F\:8D85\:9023\:7D50\[Ellipsis]",
    "HyperlinkRemove" -> "\:79FB\:9664\:8D85\:9023\:7D50",
    "HyperlinkCopy" -> "\:8907\:88FD\:8D85\:9023\:7D50",
    "HyperlinkCopyAddress" -> "\:8907\:88FD\:7DB2\:5740",
    "OverflowTooltip" -> "\:66F4\:591A",
    "MinimizeToolbarTooltip" -> "\:5DE5\:5177\:5217\:6975\:5C0F\:5316",
    "ExpandToolbarTooltip" -> "\:64F4\:5145\:5DE5\:5177\:5217",
    "SectionTitleEvaluation" -> "\:904B\:7B97",
    "SectionTitleNotebook" -> "\:7B46\:8A18\:672C",
    "SectionTitleCellStyle" -> "\:5132\:5B58\:683C\:6A23\:5F0F",
    "SectionTitleCells" -> "\:5132\:5B58\:683C",
    "SectionTitleText" -> "\:6587\:672C",
    "SectionTitleCode" ->"\:7DE8\:78BC",
    "SectionTitleInsert" -> "\:63D2\:5165",
    "NBToolbarMenuShow" -> "\:5728\:7B46\:8A18\:672C\:4E2D\:986F\:793A\:5DE5\:5177\:5217",
    "NBToolbarMenuShowAll" -> "\:5167\:5B9A\:5728\:6240\:6709\:7B46\:8A18\:672C\:4E2D\:986F\:793A\:5DE5\:5177\:5217",
    "NBToolbarMenuMinimize" -> "\:5167\:5B9A\:5728\:6240\:6709\:7B46\:8A18\:672C\:4E2D\:6975\:5C0F\:5316\:5DE5\:5177\:5217",
    "NBToolbarMenuLabels" -> "\:986F\:793A\:5DE5\:5177\:5217\:6A19\:7C64",

    (* PacletExpressionPane *)
    "pepLoading" -> "\:7372\:53D6\:8CC7\:8A0A\:4E2D ",
    "pepUnknown" -> " \:5728 Wolfram paclet \:4F3A\:670D\:5668\:4E2D\:7121\:6CD5\:88AB\:627E\:5230\:3002",
    "pepUnknownOffline" -> "\:7121\:6CD5\:89F8\:53CA\:5230 Wolfram paclet \:4F3A\:670D\:5668\:4F86\:9032\:884C\:67E5\:627E ",
    "pepCheckButton" -> "\:518D\:8A66\:4E00\:6B21",
    "pepAbsent" -> "\:53EF\:4F9B\:4F7F\:7528\:FF0C\:53EF\:662F\:5C1A\:672A\:5B89\:88DD\:5728\:6B64\:7CFB\:7D71\:4E2D\:3002",
    "pepInstallButton" -> "\:5B89\:88DD",
    "pepInstallOffline" -> "\:9700\:8981\:900F\:904E\:7DB2\:969B\:7DB2\:8DEF\:9023\:63A5\:624D\:80FD\:5B89\:88DD\:6B64 paclet\:3002",
    "pepUpdates" -> "\:6709\:66F4\:65B0\:53EF\:4F9B\:4F7F\:7528\:3002",
    "pepUpdateButton" ->"\:66F4\:65B0",
    "pepUpdateSkipButton" -> "\:5373\:523B\:8DF3\:904E",
    "pepUpdateOffline" -> "\:9700\:8981\:900F\:904E\:7DB2\:969B\:7DB2\:8DEF\:9023\:63A5\:624D\:80FD\:66F4\:65B0\:6B64 paclet\:3002",
    "pepInvalid" -> " \:8FD4\:56DE\:67D0\:4E9B\:7A81\:5982\:5176\:4F86\:7684\:60C5\:4E8B\:3002",
    "pepRetryButton" -> "\:518D\:8A66\:4E00\:6B21"
}
@|
@@resource NotebookToolbarStrings Japanese
{
    "Evaluate" -> "\:8a55\:4fa1\:ff1a",
    "EvaluateAddToQueue" -> "\:30ad\:30e5\:30fc\:306b\:8ffd\:52a0",
    "EvaluateInPlace" -> "\:73fe\:5728\:4f4d\:7f6e",
    "EvaluateInitializationCells" -> "\:521d\:671f\:5316\:30bb\:30eb",
    "EvaluateSelectedCells" -> "\:9078\:629e\:30bb\:30eb",
    "EvaluateShiftEnter" -> "\:8a55\:4fa1",
    "EvaluateOptions" -> "\:8a55\:4fa1\:306e\:5236\:5fa1",
    "EvaluateTooltip" -> "\:8a55\:4fa1",
    "EvaluatePackage"-> "\:30D1\:30C3\:30B1\:30FC\:30B8\:3092\:5B9F\:884C",
    "EvaluatePackageTooltip" -> "\:521d\:671f\:5316\:30bb\:30eb\:3092\:8a55\:4fa1",
    "Abort" -> "\:653e\:68c4",
    "AbortMenuHeader" -> "\:8a55\:4fa1\:3092\:653e\:68c4",
    "AbortEvaluation" -> "\:30ad\:30e5\:30fc\:306e\:5168\:30bb\:30eb\:3092\:653e\:68c4",
    "AbortRemoveFromQueue" -> "\:30ad\:30e5\:30fc\:304b\:3089\:9078\:629e\:30bb\:30eb\:3092\:524a\:9664",
    "AbortTooltip" -> "\:653e\:68c4",
    "Find" -> "\:30ce\:30fc\:30c8\:30d6\:30c3\:30af\:5185\:3092\:691c\:7d22",
    "LocalizeSymbols" -> "\:30b7\:30f3\:30dc\:30eb\:3092\:30ce\:30fc\:30c8\:30d6\:30c3\:30af\:306b\[InvisibleSpace]\:30ed\:30fc\:30ab\:30e9\:30a4\:30ba",
    "Global" -> "Global",
    "Notebook" -> "\:30ce\:30fc\:30c8\:30d6\:30c3\:30af",
    "NavNoResults" -> "\:7D50\:679C\:304C\:307F\:3064\:304B\:308A\:307E\:305B\:3093\:FF0E",
    "NavHelp1" -> "\:9078\:629E\:90E8\:5206\:3068\:8AAC\:660E\:3092\:691C\:7D22",
    "NavHelp2" -> ":\:3067\:59CB\:3081\:3066\:884C\:756A\:53F7\:3067\:691C\:7D22\:3059\:308B\:FF0E",
    "NavGoToLine" -> "\:884C",
    "ChatControlHeader" -> "\:30C1\:30E3\:30C3\:30C8\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:306E\:8A2D\:5B9A",
    "ChatControlTooltip" -> "\:30C1\:30E3\:30C3\:30C8\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:306E\:8A2D\:5B9A",
    "ChatControlLinkLabel" -> "\:901A\:77E5\:3092\:8AAD\:3080",
    "ChatControlInstall" -> "\:30C1\:30E3\:30C3\:30C8\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:306E\:6A5F\:80FD\:306F\:307E\:3060\:30A4\:30F3\:30B9\:30C8\:30FC\:30EB\:3055\:308C\:3066\:3044\:307E\:305B\:3093\:FF0E",
    "ChatControlConnect" -> "\:30A4\:30F3\:30BF\:30FC\:30CD\:30C3\:30C8\:306B\:63A5\:7D9A\:3057\:3066\:6A5F\:80FD\:3092\:30A4\:30F3\:30B9\:30C8\:30FC\:30EB\:3057\:3066\:304F\:3060\:3055\:3044\:FF0E",
    "OpenDocumentation" -> "\:30c9\:30ad\:30e5\:30e1\:30f3\:30c8\:3092\:958b\:304f",
    "ParallelKernelStatus" -> "\:4e26\:5217\:30ab\:30fc\:30cd\:30eb\:306e\:72b6\:6cc1\[Ellipsis]",
    "SaveOrPublishToCloud" -> "\:30ce\:30fc\:30c8\:30d6\:30c3\:30af\:3092Wolfram Cloud\:306b\:4fdd\:5b58\:307e\:305f\:306f\:516c\:958b",
    "SaveToCloud" -> "Cloud\:306b\:4fdd\:5b58\[Ellipsis]",
    "PublishToCloud" -> "Cloud\:306b\:516c\:958b\[Ellipsis]",
    "OutlineDisplay" -> "Go To\[Ellipsis]",
    "OutlineTooltip" -> "Navigate the package notebook",
    "CellStyle" -> "\:30bb\:30eb\:30b9\:30bf\:30a4\:30eb",
    "CellStyleTooltip" -> "\:30bb\:30eb\:30b9\:30bf\:30a4\:30eb",
    "CellStyleAll" -> "All Styles",
    "InsertCell" -> "\:30bb\:30eb\:3092\:633f\:5165\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] \:8907\:6570 \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "\:30ad\:30e3\:30f3\:30bb\:30eb",
    "Inherited" -> "\:7d99\:627f",
    "CellDecorations" -> "\:30bb\:30eb\:306e\:80cc\:666f\:8272\:7b49\:306e\:5909\:66f4",
    "CellGrouping" -> "\:30bb\:30eb\:306e\:30b0\:30eb\:30fc\:30d7\:5316\:ff0c\:5206\:5272\:ff0c\:7d50\:5408",
    "CellMerge" -> "\:30bb\:30eb\:306e\:7d50\:5408",
    "CellDivide" -> "\:30bb\:30eb\:306e\:5206\:5272",
    "CellGroup" -> "\:30bb\:30eb\:306e\:30b0\:30eb\:30fc\:30d7\:5316",
    "CellUngroup" -> "\:30bb\:30eb\:306e\:30b0\:30eb\:30fc\:30d7\:5316\:89e3\:9664",
    "CellAppearanceNoCell" -> "\:30bb\:30eb\:304c\:9078\:629e\:3055\:308c\:3066\:3044\:307e\:305b\:3093",
    "CellAppearance" -> "\:30bb\:30eb\:306e\:5916\:89b3",
    "CellAppearanceBackground" -> "\:80cc\:666f\:8272",
    "CellColorPalette" -> "\:30d1\:30ec\:30c3\:30c8\[Ellipsis]",
    "CellColorNone"  -> "\:306a\:3057",
    "CellColorBlack"  -> "\:9ed2",
    "CellColorGray"  -> "\:7070",
    "CellColorLightGray"  -> "\:8584\:3044\:7070\:8272",
    "CellColorWhite"  -> "\:767d",
    "CellColorLightBlue"  -> "\:6c34\:8272",
    "CellColorLightBrown"  -> "\:8584\:8336\:8272",
    "CellColorLightCyan"  -> "\:8584\:3044\:30b7\:30a2\:30f3",
    "CellColorLightGreen"  -> "\:8584\:7dd1\:8272",
    "CellColorLightMagenta"  -> "\:8584\:3044\:30de\:30bc\:30f3\:30bf",
    "CellColorLightOrange"  -> "\:8584\:3044\:30aa\:30ec\:30f3\:30b8\:8272",
    "CellColorLightPink"  -> "\:8584\:3044\:30d4\:30f3\:30af",
    "CellColorLightPurple"  -> "\:8584\:3044\:7d2b\:8272",
    "CellColorLightRed"  -> "\:8584\:3044\:8d64",
    "CellColorLightYellow"  -> "\:8584\:3044\:9ec4\:8272",
    "CellColorBlue" -> "\:9752",
    "CellColorBrown" -> "\:8336",
    "CellColorCyan" -> "\:30b7\:30a2\:30f3",
    "CellColorGreen" -> "\:7dd1",
    "CellColorMagenta" -> "\:30de\:30bc\:30f3\:30bf",
    "CellColorOrange"  -> "\:30aa\:30ec\:30f3\:30b8",
    "CellColorPink"  -> "\:30d4\:30f3\:30af",
    "CellColorPurple"  -> "\:7d2b",
    "CellColorRed"  -> "\:8d64",
    "CellColorYellow"  -> "\:9ec4",
    "CellAppearanceFrameStyle" -> "\:30d5\:30ec\:30fc\:30e0\:30b9\:30bf\:30a4\:30eb",
    "CellFrameColor" -> "\:30bb\:30eb\:30d5\:30ec\:30fc\:30e0\:306e\:8272",
    "CellFrameEditAll" -> "\:5168\:30a8\:30c3\:30b8\:3092\:4e00\:7dd2\:306b\:7de8\:96c6",
    "CellAppearanceDingbat" -> "\:898b\:51fa\:3057\:8a18\:53f7",
    "DingbatNone" -> "\:30c7\:30d5\:30a9\:30eb\:30c8",
    "DingbatFilledSquare" -> "\\[FilledSquare]",
    "DingbatGraySquare" -> "\\[GraySquare]",
    "DingbatEmptySquare" -> "\\[EmptySquare]",
    "DingbatDottedSquare" -> "\\[DottedSquare]",
    "DingbatFilledSmallSquare" -> "\\[FilledSmallSquare]",
    "DingbatEmptySmallSquare" -> "\\[EmptySmallSquare]",
    "DingbatFilledCircle" -> "\\[FilledCircle]",
    "DingbatGrayCircle" -> "\\[GrayCircle]",
    "DingbatEmptyCircle" -> "\\[EmptyCircle]",
    "DingbatFilledSmallCircle" -> "\\[FilledSmallCircle]",
    "DingbatEmptySmallCircle" -> "\\[EmptySmallCircle]",
    "DingbatFilledDiamond" -> "\\[FilledDiamond]",
    "DingbatEmptyDiamond" -> "\\[EmptyDiamond]",
    "DingbatFilledUpTriangle" -> "\\[FilledUpTriangle]",
    "DingbatEmptyUpTriangle" -> "\\[EmptyUpTriangle]",
    "DingbatFilledDownTriangle" -> "\\[FilledDownTriangle]",
    "DingbatEmptyDownTriangle" -> "\\[EmptyDownTriangle]",
    "DingbatWatch" -> "\\[WatchIcon]",
    "DingbatFilledStar" -> "\\[FilledStar]",
    "DingbatHappySmiley" -> "\\[HappySmiley]",
    "DingbatNeutralSmiley" -> "\\[NeutralSmiley]",
    "DingbatSadSmiley" -> "\\[SadSmiley]",
    "DingbatLightBulb" -> "\\[LightBulb]",
    "DingbatWolf" -> "\\[Wolf]",
    "DingbatClubSuit" -> "\\[ClubSuit]",
    "DingbatDiamondSuit" -> "\\[DiamondSuit]",
    "DingbatHeartSuit" -> "\\[HeartSuit]",
    "DingbatSpadeSuit" -> "\\[SpadeSuit]",
    "InsertFromAboveInput" -> "\:4e0a\:306e\:5165\:529b\:30bb\:30eb\:306e\:30b3\:30f3\:30c6\:30f3\:30c4\:3092\:633f\:5165",
    "InsertFromAboveOutput" -> "\:4e0a\:306e\:51fa\:529b\:30bb\:30eb\:306e\:30b3\:30f3\:30c6\:30f3\:30c4\:3092\:633f\:5165",
    "TextBold" -> "\:592a\:5b57",
    "TextItalic" -> "\:659c\:4f53",
    "TextUnderline" -> "\:4e0b\:7dda",
    "TextColor" -> "\:8272",
    "TextBackground" -> "\:80cc\:666f\:8272",
    "TextFormatting" -> "\:30c6\:30ad\:30b9\:30c8\:306e\:66f8\:5f0f",
    "TextFormattingTooltip" -> "\:30c6\:30ad\:30b9\:30c8\:306e\:66f8\:5f0f",
    "TextAlignLeft" -> "\:5de6\:63c3\:3048",
    "TextAlignCenter" -> "\:4e2d\:592e\:63c3\:3048",
    "TextAlignRight" -> "\:53f3\:63c3\:3048",
    "TextJustify" -> "\:30c6\:30ad\:30b9\:30c8\:5168\:4f53\:306e\:4e21\:7aef\:63c3\:3048",
    "FontSize" -> "\:30d5\:30a9\:30f3\:30c8\:30b5\:30a4\:30ba",
    "FontSize9" -> "9\:30dd\:30a4\:30f3\:30c8",
    "FontSize10" -> "10\:30dd\:30a4\:30f3\:30c8",
    "FontSize12" -> "12\:30dd\:30a4\:30f3\:30c8",
    "FontSize14" -> "14\:30dd\:30a4\:30f3\:30c8",
    "FontSize16" -> "16\:30dd\:30a4\:30f3\:30c8",
    "FontSize18" -> "18\:30dd\:30a4\:30f3\:30c8",
    "FontSize24" -> "24\:30dd\:30a4\:30f3\:30c8",
    "FontSize36" -> "36\:30dd\:30a4\:30f3\:30c8",
    "FontSize72" -> "72\:30dd\:30a4\:30f3\:30c8",
    "FontSizeOther" -> "\:305d\:306e\:4ed6",
    "ToggleComment" -> "\:9078\:629e\:306e\:30b3\:30fc\:30c9\:307e\:305f\:306f\:30bb\:30eb\:306e\:30b3\:30e1\:30f3\:30c8\:5316\:ff0f\:975e\:30b3\:30e1\:30f3\:30c8\:5316",
    "ToggleIconize" -> "\:9078\:629e\:30b3\:30fc\:30c9\:3092\:6298\:308a\:305f\:305f\:3093\:3067\:30a2\:30a4\:30b3\:30f3\:5316",
    "ExtendSelection" -> "\:9078\:629e\:90e8\:5206\:3092\:62e1\:5f35",
    "ControlEqual" -> "\:81ea\:7136\:8a00\:8a9e\:3092\:89e3\:91c8\:3057\:3066Wolfram\:8a00\:8a9e\:30b3\:30fc\:30c9\:306b\:5909\:63db",
    "InsertCode" -> "\:30b3\:30fc\:30c9\:30c6\:30ad\:30b9\:30c8\:3092\:633f\:5165",
    "Typesetting" -> "\:6570\:5f0f\:3092\:633f\:5165",
    "InsertMath" -> "\!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)\:3092\:633f\:5165",
    "InsertCanvas" -> "\:63cf\:753b\:30ab\:30f3\:30d0\:30b9\:3092\:633f\:5165",
    "Hyperlink" -> "\:30cf\:30a4\:30d1\:30fc\:30ea\:30f3\:30af",
    "HyperlinkAdd" -> "\:30cf\:30a4\:30d1\:30fc\:30ea\:30f3\:30af",
    "HyperlinkRemove" -> "\:30cf\:30a4\:30d1\:30fc\:30ea\:30f3\:30af\:3092\:524a\:9664",
    "HyperlinkCopy" -> "\:30cf\:30a4\:30d1\:30fc\:30ea\:30f3\:30af\:3092\:30b3\:30d4\:30fc",
    "HyperlinkCopyAddress" -> "\:30a2\:30c9\:30ec\:30b9\:3092\:30b3\:30d4\:30fc",
    "OverflowTooltip" -> "\:305d\:306e\:4ed6",
    "MinimizeToolbarTooltip" -> "\:30c4\:30fc\:30eb\:30d0\:30fc\:3092\:6700\:5c0f\:5316",
    "ExpandToolbarTooltip" -> "\:30c4\:30fc\:30eb\:30d0\:30fc\:3092\:62e1\:5f35",
    "SectionTitleEvaluation" -> "\:8A55\:4FA1",
    "SectionTitleNotebook" -> "\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF",
    "SectionTitleCellStyle" -> "\:30BB\:30EB\:30B9\:30BF\:30A4\:30EB",
    "SectionTitleCells" -> "\:30BB\:30EB",
    "SectionTitleText" -> "\:30C6\:30AD\:30B9\:30C8",
    "SectionTitleCode" -> "\:30B3\:30FC\:30C9",
    "SectionTitleInsert" ->"\:633F\:5165",
    "NBToolbarMenuShow" ->  "\:3053\:306E\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:306B\:30C4\:30FC\:30EB\:30D0\:30FC\:3092\:8868\:793A\:3059\:308B",
    "NBToolbarMenuShowAll" -> "\:30C7\:30D5\:30A9\:30EB\:30C8\:3067\:FF0C\:3059\:3079\:3066\:306E\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:3067\:30C4\:30FC\:30EB\:30D0\:30FC\:3092\:8868\:793A\:3059\:308B",
    "NBToolbarMenuMinimize" -> "\:30C7\:30D5\:30A9\:30EB\:30C8\:3067\:FF0C\:3059\:3079\:3066\:306E\:30CE\:30FC\:30C8\:30D6\:30C3\:30AF\:3067\:30C4\:30FC\:30EB\:30D0\:30FC\:3092\:6700\:5C0F\:5316\:3059\:308B",
    "NBToolbarMenuLabels" ->  "\:30C4\:30FC\:30EB\:30D0\:30FC\:30E9\:30D9\:30EB\:3092\:8868\:793A\:3059\:308B",

	(*PacletExpressionPane*)
	"pepLoading" -> "\:95A2\:9023\:3059\:308B\:60C5\:5831\:3092\:5F97\:308B ",
	"pepUnknown" -> " Wolfram \:30D1\:30AF\:30EC\:30C3\:30C8\:30B5\:30FC\:30D0\:306B\:898B\:3064\:304B\:308A\:307E\:305B\:3093\:3067\:3057\:305F\:FF0E",
	"pepUnknownOffline" -> "\:691C\:7D22\:3059\:308B Wolfram \:30D1\:30AF\:30EC\:30C3\:30C8\:30B5\:30FC\:30D0\:306B\:5230\:9054\:3067\:304D\:307E\:305B\:3093\:3067\:3057\:305F\:FF0E",
	"pepCheckButton" -> "\:518D\:5EA6\:8A66\:3059",
	"pepAbsent" -> " \:306F\:5B58\:5728\:3057\:307E\:3059\:304C\:FF0C\:30B7\:30B9\:30C6\:30E0\:306B\:307E\:3060\:30A4\:30F3\:30B9\:30C8\:30FC\:30EB\:3055\:308C\:3066\:3044\:307E\:305B\:3093\:FF0E",
	"pepInstallButton" -> "\:30A4\:30F3\:30B9\:30C8\:30FC\:30EB",
	"pepInstallOffline" -> "\:3053\:306E\:30D1\:30AF\:30EC\:30C3\:30C8\:3092\:30A4\:30F3\:30B9\:30C8\:30FC\:30EB\:3059\:308B\:305F\:3081\:306B\:306F\:30A4\:30F3\:30BF\:30FC\:30CD\:30C3\:30C8\:3078\:306E\:63A5\:7D9A\:304C\:5FC5\:8981\:3067\:3059\:FF0E",
	"pepUpdates" -> " \:30A2\:30C3\:30D7\:30C7\:30FC\:30C8\:304C\:3042\:308A\:307E\:3059\:FF0E",
	"pepUpdateButton" -> "\:30A2\:30C3\:30D7\:30C7\:30FC\:30C8",
	"pepUpdateSkipButton" -> "\:4ECA\:306F\:30B9\:30AD\:30C3\:30D7\:3059\:308B",
	"pepUpdateOffline" -> "\:3053\:306E\:30D1\:30AF\:30EC\:30C3\:30C8\:3092\:30A2\:30C3\:30D7\:30C7\:30FC\:30C8\:3059\:308B\:305F\:3081\:306B\:306F\:30A4\:30F3\:30BF\:30FC\:30CD\:30C3\:30C8\:3078\:306E\:63A5\:7D9A\:304C\:5FC5\:8981\:3067\:3059\:FF0E",
	"pepInvalid" -> " \:4E88\:671F\:305B\:306C\:7D50\:679C\:304C\:8FD4\:3055\:308C\:307E\:3057\:305F\:FF0E",
	"pepRetryButton" -> "\:518D\:5EA6\:8A66\:3059"
}
@|
@@resource NotebookToolbarStrings Spanish
{
    "Evaluate" -> "Evaluar:",
    "EvaluateAddToQueue" -> "Agregar a la cola",
    "EvaluateInPlace" -> "En posici\[OAcute]n",
    "EvaluateInitializationCells" -> "Celdas de inicializaci\[OAcute]n",
    "EvaluateSelectedCells" -> "Celdas seleccionadas",
    "EvaluateShiftEnter" -> "Evaluar",
    "EvaluateOptions" -> "Controles de evaluaci\[OAcute]n",
    "EvaluateTooltip" -> "Evaluar",
    "EvaluatePackage"-> "Ejecutar paquete",
    "EvaluatePackageTooltip" -> "Evaluar celdas de inicializaci\[OAcute]n",
    "Abort" -> "Abortar",
    "AbortMenuHeader" -> "Abortar evaluaci\[OAcute]n",
    "AbortEvaluation" -> "Abortar todas las celdas en la cola",
    "AbortRemoveFromQueue" -> "Eliminar celdas seleccionadas de la cola",
    "AbortTooltip" -> "Abortar",
    "Find" -> "Buscar en cuaderno",
    "LocalizeSymbols" -> "Localizar s\[IAcute]mbolos a cuaderno",
    "Global" -> "Global",
    "Notebook" -> "Cuaderno",
    "NavNoResults" -> "No se encontraron resultados",
    "NavHelp1" -> "Buscar secciones y definiciones.",
    "NavHelp2" -> "Comenzar con : para buscar seg\[UAcute]n n\[UAcute]mero de l\[IAcute]nea.",
    "NavGoToLine" -> "L\[IAcute]nea",
    "ChatControlHeader" -> "Opciones de cuaderno de chat",
    "ChatControlTooltip" -> "Opciones de cuaderno de chat",
    "ChatControlLinkLabel" -> "Leer el anuncio",
    "ChatControlInstall" -> "Las caracter\[IAcute]sticas de cuadernos de chat a\[UAcute]n no han sido instaladas.",
    "ChatControlConnect" -> "Con\[EAcute]ctese a internet para instalar las caracter\[IAcute]sticas.",
    "OpenDocumentation" -> "Abrir documentaci\[OAcute]n",
    "ParallelKernelStatus" -> "Estado de kernel paralelo\[Ellipsis]",
    "SaveOrPublishToCloud" -> "Guardar o publicar cuaderno en Wolfram Cloud",
    "SaveToCloud" -> "Guardar en la nube\[Ellipsis]",
    "PublishToCloud" -> "Publicar en la nube\[Ellipsis]",
    "OutlineDisplay" -> "Ir a\[Ellipsis]",
    "OutlineTooltip" -> "Explorar el paquete del cuaderno",
    "CellStyle" -> "Estilo de celda",
    "CellStyleTooltip" -> "Estilo de celda",
    "CellStyleAll" -> "Todos los estilos",
    "InsertCell" -> "Insertar celda\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] m\[UAcute]ltiples \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "Cancelar",
    "Inherited" -> "Heredado",
    "CellDecorations" -> "Cambiar el fondo, marco, etc. de celda",
    "CellGrouping" -> "Agrupar, dividir y combinar celdas",
    "CellMerge" -> "Combinar celdas",
    "CellDivide" -> "Dividir celdas",
    "CellGroup" -> "Agrupar celdas",
    "CellUngroup" -> "Desagrupar celdas",
    "CellAppearanceNoCell" -> "No se ha seleccionado una celda",
    "CellAppearance" -> "Apariencia de celda",
    "CellAppearanceBackground" -> "Fondo",
    "CellColorPalette" -> "Paleta\[Ellipsis]",
    "CellColorNone"  -> "Ninguno",
    "CellColorBlack"  -> "Negro",
    "CellColorGray"  -> "Gris",
    "CellColorLightGray"  -> "Gris claro",
    "CellColorWhite"  -> "Blanco",
    "CellColorLightBlue"  -> "Azul celeste",
    "CellColorLightBrown"  -> "Marr\[OAcute]n claro",
    "CellColorLightCyan"  -> "Cian claro",
    "CellColorLightGreen"  -> "Verde claro",
    "CellColorLightMagenta"  -> "Magenta claro",
    "CellColorLightOrange"  -> "Naranja claro",
    "CellColorLightPink"  -> "Rosa claro",
    "CellColorLightPurple"  -> "P\[UAcute]rpura claro",
    "CellColorLightRed"  -> "Rojo claro",
    "CellColorLightYellow"  -> "Amarillo claro",
    "CellColorBlue" -> "Azul",
    "CellColorBrown" -> "Marr\[OAcute]n",
    "CellColorCyan" -> "Cian",
    "CellColorGreen" -> "Verde",
    "CellColorMagenta" -> "Magenta",
    "CellColorOrange"  -> "Naranja",
    "CellColorPink"  -> "Rosa",
    "CellColorPurple"  -> "P\[UAcute]rpura",
    "CellColorRed"  -> "Rojo",
    "CellColorYellow"  -> "Amarillo",
    "CellAppearanceFrameStyle" -> "Estilo de marco",
    "CellFrameColor" -> "Color de marco de celda",
    "CellFrameEditAll" -> "Editar todos los bordes a la vez",
    "CellAppearanceDingbat" -> "Dingbat",
    "DingbatNone" -> "Predeterminado",
    "DingbatFilledSquare" -> "\\[FilledSquare]",
    "DingbatGraySquare" -> "\\[GraySquare]",
    "DingbatEmptySquare" -> "\\[EmptySquare]",
    "DingbatDottedSquare" -> "\\[DottedSquare]",
    "DingbatFilledSmallSquare" -> "\\[FilledSmallSquare]",
    "DingbatEmptySmallSquare" -> "\\[EmptySmallSquare]",
    "DingbatFilledCircle" -> "\\[FilledCircle]",
    "DingbatGrayCircle" -> "\\[GrayCircle]",
    "DingbatEmptyCircle" -> "\\[EmptyCircle]",
    "DingbatFilledSmallCircle" -> "\\[FilledSmallCircle]",
    "DingbatEmptySmallCircle" -> "\\[EmptySmallCircle]",
    "DingbatFilledDiamond" -> "\\[FilledDiamond]",
    "DingbatEmptyDiamond" -> "\\[EmptyDiamond]",
    "DingbatFilledUpTriangle" -> "\\[FilledUpTriangle]",
    "DingbatEmptyUpTriangle" -> "\\[EmptyUpTriangle]",
    "DingbatFilledDownTriangle" -> "\\[FilledDownTriangle]",
    "DingbatEmptyDownTriangle" -> "\\[EmptyDownTriangle]",
    "DingbatWatch" -> "\\[WatchIcon]",
    "DingbatFilledStar" -> "\\[FilledStar]",
    "DingbatHappySmiley" -> "\\[HappySmiley]",
    "DingbatNeutralSmiley" -> "\\[NeutralSmiley]",
    "DingbatSadSmiley" -> "\\[SadSmiley]",
    "DingbatLightBulb" -> "\\[LightBulb]",
    "DingbatWolf" -> "\\[Wolf]",
    "DingbatClubSuit" -> "\\[ClubSuit]",
    "DingbatDiamondSuit" -> "\\[DiamondSuit]",
    "DingbatHeartSuit" -> "\\[HeartSuit]",
    "DingbatSpadeSuit" -> "\\[SpadeSuit]",
    "InsertFromAboveInput" -> "Insertar los contenidos de la celda de entrada anterior",
    "InsertFromAboveOutput" -> "Insertar los contenidos de la celda de salida anterior",
    "TextBold" -> "Negrita",
    "TextItalic" -> "Cursiva",
    "TextUnderline" -> "Subrayar",
    "TextColor" -> "Color",
    "TextBackground" -> "Fondo",
    "TextFormatting" -> "Formato de texto",
    "TextFormattingTooltip" -> "Formato de texto",
    "TextAlignLeft" -> "Alinear a la izquierda",
    "TextAlignCenter" -> "Alinear al centro",
    "TextAlignRight" -> "Alinear a la derecha",
    "TextJustify" -> "Justificaci\[OAcute]n completa de texto",
    "FontSize" -> "Tama\[NTilde]o de fuente",
    "FontSize9" -> "9 puntos",
    "FontSize10" -> "10 puntos",
    "FontSize12" -> "12 puntos",
    "FontSize14" -> "14 puntos",
    "FontSize16" -> "16 puntos",
    "FontSize18" -> "18 puntos",
    "FontSize24" -> "24 puntos",
    "FontSize36" -> "36 puntos",
    "FontSize72" -> "72 puntos",
    "FontSizeOther" -> "Otros",
    "ToggleComment" -> "Comentar/descomentar el c\[OAcute]digo o celdas seleccionados",
    "ToggleIconize" -> "Colapsar el c\[OAcute]digo seleccionado en un \[IAcute]cono",
    "ExtendSelection" -> "Extender la selecci\[OAcute]n",
    "ControlEqual" -> "Interpretar lenguaje natural en c\[OAcute]digo de Wolfram Language",
    "InsertCode" -> "Insertar texto de c\[OAcute]digo",
    "Typesetting" -> "Insertar matem\[AAcute]ticas",
    "InsertMath" -> "Insertar \!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)",
    "InsertCanvas" -> "Insertar \[AAcute]rea de trabajo de dibujo",
    "Hyperlink" -> "Hiperenlace",
    "HyperlinkAdd" -> "Hiperenlace",
    "HyperlinkRemove" -> "Eliminar Hiperenlace",
    "HyperlinkCopy" -> "Copiar Hiperenlace",
    "HyperlinkCopyAddress" -> "Copiar direcci\[OAcute]n",
    "OverflowTooltip" -> "M\[AAcute]s",
    "MinimizeToolbarTooltip" -> "Minimizar barra de herramientas",
    "ExpandToolbarTooltip" -> "Expandir barra de herramientas toolbar",
    "SectionTitleEvaluation" -> "Evaluaci\[OAcute]n",
    "SectionTitleNotebook" -> "Cuaderno",
    "SectionTitleCellStyle" -> "Estilo de celda",
    "SectionTitleCells" -> "Celdas",
    "SectionTitleText" -> "Texto",
    "SectionTitleCode" -> "C\[OAcute]digo",
    "SectionTitleInsert" -> "Insertar",
    "NBToolbarMenuShow" -> "Mostrar barra de herramientas en este cuaderno",
    "NBToolbarMenuShowAll" -> "Mostrar barra de herramientas en todos los cuadernos de forma predeterminada",
    "NBToolbarMenuMinimize" -> "Minimizar la barra de herramientas en todos los cuadernos de forma predeterminada",
    "NBToolbarMenuLabels" -> "Mostrar etiquetas de barra de herramientas",

    (* PacletExpressionPane *)
    "pepLoading" -> "Obteniendo informaci\[OAcute]n acerca de ",
    "pepUnknown" -> " no se encontr\[OAcute] en el servidor de paclets de Wolfram.",
    "pepUnknownOffline" -> "No se pudo contactar al servidor de paclets de Wolfram para encontrar ",
    "pepCheckButton" -> "Vuelva a intentarlo",
    "pepAbsent" -> " est\[AAcute] disponible, pero a\[UAcute]n no ha sido instalado en este sistema.",
    "pepInstallButton" -> "Instalar",
    "pepInstallOffline" -> "Se necesita una conexi\[OAcute]n a internet para instalar este paclet.",
    "pepUpdates" -> " actualizaciones est\[AAcute]n disponibles.",
    "pepUpdateButton" -> "Actualizar",
    "pepUpdateSkipButton" -> "Omitir por ahora",
    "pepUpdateOffline" -> "Se necesita una conexi\[OAcute]n a internet para actualizar este paclet.",
    "pepInvalid" -> " devolvi\[OAcute] algo inesperado.",
    "pepRetryButton" -> "Vuelva a intentarlo"
}
@|
@@resource NotebookToolbarStrings French
{
    "Evaluate" -> "\[CapitalEAcute]valuer :",
    "EvaluateAddToQueue" -> "Ajouter \[AGrave] la file d\[CloseCurlyQuote]attente",
    "EvaluateInPlace" -> "Sur place",
    "EvaluateInitializationCells" -> "Cellules d\[CloseCurlyQuote]initialisation",
    "EvaluateSelectedCells" -> "Cellules s\[EAcute]lectionn\[EAcute]es",
    "EvaluateShiftEnter" -> "\[CapitalEAcute]valuer",
    "EvaluateOptions" -> "Contr\[OHat]les d\[CloseCurlyQuote]\[EAcute]valuation",
    "EvaluateTooltip" -> "\[CapitalEAcute]valuer",
    "EvaluatePackage"-> "Ex\[EAcute]cuter le progiciel",
    "EvaluatePackageTooltip" -> "\[CapitalEAcute]valuer les cellules d\[CloseCurlyQuote]initialisation",
    "Abort" -> "Interrompre",
    "AbortMenuHeader" -> "Interrompre l\[CloseCurlyQuote]\[EAcute]valuation",
    "AbortEvaluation" -> "Interrompre toutes les cellules de la file d\[CloseCurlyQuote]attente",
    "AbortRemoveFromQueue" -> "Retirer les cellules s\[EAcute]lectionn\[EAcute]es de la file d\[CloseCurlyQuote]attente",
    "AbortTooltip" -> "Interrompre",
    "Find" -> "Rechercher dans le notebook",
    "LocalizeSymbols" -> "Localiser les symboles dans le notebook",
    "Global" -> "Global",
    "Notebook" -> "Notebook",
    "NavNoResults" -> "Aucun r\[EAcute]sultat trouv\[EAcute]",
    "NavHelp1" -> "Rechercher des sections et des d\[EAcute]finitions.",
    "NavHelp2" -> "Commencer par : pour rechercher par num\[EAcute]ro de ligne.",
    "NavGoToLine" -> "Ligne",
    "ChatControlHeader" -> "Param\[EGrave]tres du Notebook de Chat",
    "ChatControlTooltip" -> "Param\[EGrave]tres du notebook de chat",
    "ChatControlLinkLabel" -> "Lire l\[CloseCurlyQuote]annonce",
    "ChatControlInstall" -> "Les fonctionnalit\[EAcute]s du notebook de chat ne sont pas encore install\[EAcute]es.",
    "ChatControlConnect" -> "Connectez-vous \[AGrave] Internet pour installer les fonctionnalit\[EAcute]s.",
    "OpenDocumentation" -> "Ouvrir la documentation",
    "ParallelKernelStatus" -> "\[CapitalEAcute]tat du noyau parall\[EGrave]le\[Ellipsis]",
    "SaveOrPublishToCloud" -> "Enregistrer ou publier le notebook dans Wolfram Cloud",
    "SaveToCloud" -> "Enregistrer dans le cloud\[Ellipsis]",
    "PublishToCloud" -> "Publier dans le cloud\[Ellipsis]",
    "OutlineDisplay" -> "Aller \[AGrave]\[Ellipsis]",
    "OutlineTooltip" -> "Naviguer dans le notebook du progiciel",
    "CellStyle" -> "Style de la cellule",
    "CellStyleTooltip" -> "Style de la cellule",
    "CellStyleAll" -> "Tous les styles",
    "InsertCell" -> "Ins\[EAcute]rer une cellule\[Ellipsis]",
    "MultipleCellsSelected" -> "\[Dash] Multiple \[Dash]",
    "SelectionNoCellStyle" -> "",
    "Cancel" -> "Annuler",
    "Inherited" -> "H\[EAcute]rit\[EAcute]",
    "CellDecorations" -> "Modifier l\[CloseCurlyQuote]arri\[EGrave]re\[Hyphen]plan de la cellule, le cadre, etc.",
    "CellGrouping" -> "Grouper, diviser et fusionner des cellules",
    "CellMerge" -> "Fusionner des cellules",
    "CellDivide" -> "Diviser des cellules",
    "CellGroup" -> "Grouper des cellules",
    "CellUngroup" -> "D\[EAcute]grouper des cellules",
    "CellAppearanceNoCell" -> "Aucune cellule s\[EAcute]lectionn\[EAcute]e",
    "CellAppearance" -> "Apparence de la cellule",
    "CellAppearanceBackground" -> "Arri\[EGrave]re\[Hyphen]plan",
    "CellColorPalette" -> "Palette\[Ellipsis]",
    "CellColorNone"  -> "Aucun",
    "CellColorBlack"  -> "Noir",
    "CellColorGray"  -> "Gris",
    "CellColorLightGray"  -> "Gris clair",
    "CellColorWhite"  -> "Blanc",
    "CellColorLightBlue"  -> "Bleu clair",
    "CellColorLightBrown"  -> "Marron clair",
    "CellColorLightCyan"  -> "Cyan clair",
    "CellColorLightGreen"  -> "Vert clair",
    "CellColorLightMagenta"  -> "Magenta clair",
    "CellColorLightOrange"  -> "Orange clair",
    "CellColorLightPink"  -> "Rose clair",
    "CellColorLightPurple"  -> "Violet clair",
    "CellColorLightRed"  -> "Rouge Clair",
    "CellColorLightYellow"  -> "Jaune Clair",
    "CellColorBlue" -> "Bleu",
    "CellColorBrown" -> "Marron",
    "CellColorCyan" -> "Cyan",
    "CellColorGreen" -> "Vert",
    "CellColorMagenta" -> "Magenta",
    "CellColorOrange"  -> "Orange",
    "CellColorPink"  -> "Rose",
    "CellColorPurple"  -> "Violet",
    "CellColorRed"  -> "Rouge",
    "CellColorYellow"  -> "Jaune",
    "CellAppearanceFrameStyle" -> "Style du cadre",
    "CellFrameColor" -> "Couleur du cadre de la cellule",
    "CellFrameEditAll" -> "Modifier tous les cadres ensemble",
    "CellAppearanceDingbat" -> "Dingbat",
    "DingbatNone" -> "Aucun",
    "DingbatFilledSquare" -> "Carr\[EAcute] rempli",
    "DingbatGraySquare" -> "Carr\[EAcute] gris",
    "DingbatEmptySquare" -> "Carr\[EAcute] vide",
    "DingbatDottedSquare" -> "Carr\[EAcute] en pointill\[EAcute]s",
    "DingbatFilledSmallSquare" -> "Petit carr\[EAcute] rempli",
    "DingbatEmptySmallSquare" -> "Petit carr\[EAcute] vide",
    "DingbatFilledCircle" -> "Cercle rempli",
    "DingbatGrayCircle" -> "Cercle gris",
    "DingbatEmptyCircle" -> "Cercle vide",
    "DingbatFilledSmallCircle" -> "Petit cercle rempli",
    "DingbatEmptySmallCircle" -> "Petit cercle vide",
    "DingbatFilledDiamond" -> "Diamant rempli",
    "DingbatEmptyDiamond" -> "Diamant vide",
    "DingbatFilledUpTriangle" -> "Triangle haut rempli",
    "DingbatEmptyUpTriangle" -> "Triangle haut vide",
    "DingbatFilledDownTriangle" -> "Triangle haut vide",
    "DingbatEmptyDownTriangle" -> "Triangle bas vide",
    "DingbatWatch" -> "Montre",
    "DingbatFilledStar" -> "\[CapitalEAcute]toile remplie",
    "DingbatHappySmiley" -> "Smiley heureux",
    "DingbatNeutralSmiley" -> "Smiley neutre",
    "DingbatSadSmiley" -> "Smiley triste",
    "DingbatLightBulb" -> "Ampoule",
    "DingbatWolf" -> "Loup",
    "DingbatClubSuit" -> "Tr\[EGrave]fle",
    "DingbatDiamondSuit" -> "Carreau",
    "DingbatHeartSuit" -> "c\[OE]ur",
    "DingbatSpadeSuit" -> "Pique",
    "InsertFromAboveInput" -> "Ins\[EAcute]rer le contenu de la cellule d\[CloseCurlyQuote]entr\[EAcute]e ci\[Hyphen]dessus",
    "InsertFromAboveOutput" -> "Ins\[EAcute]rer le contenu de la cellule de sortie ci\[Hyphen]dessus",
    "TextBold" -> "Gras",
    "TextItalic" -> "Italique",
    "TextUnderline" -> "Soulign\[EAcute]",
    "TextColor" -> "Couleur",
    "TextBackground" -> "Arri\[EGrave]re\[Hyphen]plan",
    "TextFormatting" -> "Mise en forme du texte",
    "TextFormattingTooltip" -> "Mise en forme du texte",
    "TextAlignLeft" -> "Aligner \[AGrave] gauche",
    "TextAlignCenter" -> "Aligner au centre",
    "TextAlignRight" -> "Aligner \[AGrave] droite",
    "TextJustify" -> "Justification int\[EAcute]grale du texte",
    "FontSize" -> "Taille de la police",
    "FontSize9" -> "9 points",
    "FontSize10" -> "10 points",
    "FontSize12" -> "12 points",
    "FontSize14" -> "14 points",
    "FontSize16" -> "16 points",
    "FontSize18" -> "18 points",
    "FontSize24" -> "24 points",
    "FontSize36" -> "36 points",
    "FontSize72" -> "72 points",
    "FontSizeOther" -> "Autre",
    "ToggleComment" -> "Avec/Sans commentaire de code ou de cellules s\[EAcute]lectionn\[EAcute]s",
    "ToggleIconize" -> "R\[EAcute]duire le code s\[EAcute]lectionn\[EAcute] en une ic\[OHat]ne",
    "ExtendSelection" -> "\[CapitalEAcute]tendre la s\[EAcute]lection",
    "ControlEqual" -> "Interpr\[EAcute]ter le langage naturel en code Wolfram Language",
    "InsertCode" -> "Ins\[EAcute]rer du texte de code",
    "Typesetting" -> "Ins\[EAcute]rer des maths",
    "InsertMath" -> "Ins\[EAcute]rer \!\(\*FormBox[StyleBox[RowBox[{\"T\", AdjustmentBox[\"E\", Rule[BoxBaselineShift, 0.5`], Rule[BoxMargins, List[List[-0.3`, 0], List[0, 0]]]], \"X\"}], Rule[SingleLetterItalics, False]], TraditionalForm]\)",
    "InsertCanvas" -> "Ins\[EAcute]rer un canevas de dessin",
    "Hyperlink" -> "Lien hypertexte",
    "HyperlinkAdd" -> "Lien hypertexte",
    "HyperlinkRemove" -> "Supprimer le lien hypertexte",
    "HyperlinkCopy" -> "Copier le lien hypertexte",
    "HyperlinkCopyAddress" -> "Copier l\[CloseCurlyQuote]adresse",
    "OverflowTooltip" -> "Plus",
    "MinimizeToolbarTooltip" -> "R\[EAcute]duire la barre d\[CloseCurlyQuote]outils",
    "ExpandToolbarTooltip" -> "\[CapitalEAcute]tendre la barre d\[CloseCurlyQuote]outils",
    "SectionTitleEvaluation" -> "\[CapitalEAcute]valuation",
    "SectionTitleNotebook" -> "Notebook",
    "SectionTitleCellStyle" -> "Style de cellule",
    "SectionTitleCells" -> "Cellules",
    "SectionTitleText" -> "Texte",
    "SectionTitleCode" -> "Code",
    "SectionTitleInsert" -> "Ins\[EAcute]rer",
    "NBToolbarMenuShow" -> "Afficher la barre d\[CloseCurlyQuote]outils dans ce notebook",
    "NBToolbarMenuShowAll" -> "Afficher la barre d\[CloseCurlyQuote]outils dans tous les notebooks par d\[EAcute]faut",
    "NBToolbarMenuMinimize" -> "R\[EAcute]duire la barre d\[CloseCurlyQuote]outils dans tous les notebooks par d\[EAcute]faut",
    "NBToolbarMenuLabels" -> "Afficher les \[EAcute]tiquettes de la barre d\[CloseCurlyQuote]outils",

    (* PacletExpressionPane *)
    "pepLoading" -> "L'obtention d\[CloseCurlyQuote]informations sur ",
    "pepUnknown" -> " n\[CloseCurlyQuote]a pas \[EAcute]t\[EAcute] trouv\[EAcute]e sur le serveur de paquets Wolfram.",
    "pepUnknownOffline" -> "Impossible d\[CloseCurlyQuote]atteindre le serveur de paquets Wolfram pour trouver ",
    "pepCheckButton" -> "R\[EAcute]essayer",
    "pepAbsent" -> " est disponible, mais n\[CloseCurlyQuote]est pas encore install\[EAcute] sur ce syst\[EGrave]me.",
    "pepInstallButton" -> "Installer",
    "pepInstallOffline" -> "Une connexion internet est n\[EAcute]cessaire pour installer ce paquet.",
    "pepUpdates" -> " les mises \[AGrave] jour sont disponibles.",
    "pepUpdateButton" -> "Mettre \[AGrave] jour",
    "pepUpdateSkipButton" -> "Ignorer pour l\[CloseCurlyQuote]instant",
    "pepUpdateOffline" -> "Une connexion internet est n\[EAcute]cessaire pour mettre \[AGrave] jour ce paquet.",
    "pepInvalid" -> " a renvoy\[EAcute] quelque chose d\[CloseCurlyQuote]inattendu.",
    "pepRetryButton" -> "R\[EAcute]essayer"
}
@|
@@resource NotebookToolbarPlatformStrings
{
  "EvaluateKey" -> "Shift+Enter",
  "EvaluateInPlaceKey" -> "Shift+Ctrl+Enter",
  "AbortKey" -> "Alt+.",
  "DequeueKey" -> "Shift+Alt+.",
  "FindKey" -> "Ctrl+F",
  "HelpKey" -> "F1",
  "MergeKey" -> "Shift+Ctrl+M",
  "DivideKey" -> "Shift+Ctrl+D",
  "GroupKey" -> "Shift+Ctrl+G",
  "UngroupKey" -> "Shift+Ctrl+U",
  "CopyInputKey" -> "Ctrl+L",
  "CopyOutputKey" -> "Shift+Ctrl+L",
  "BoldKey" -> "Ctrl+B",
  "ItalicKey" -> "Ctrl+I",
  "UnderlineKey" -> "Ctrl+U",
  "CommentKey" -> "Alt+/",
  "IconizeKey" -> "Alt+Ctrl+'",
  "ExtendKey" -> "Ctrl+.",
  "CtrlEqualKey" -> "Ctrl+=",
  "TeXKey" -> "Ctrl+4",
  "CanvasKey" -> "Ctrl+1",
  "HyperlinkKey" -> "Shift+Ctrl+H",
  "SystemModifierKey" -> "Ctrl+",
  "CtrlKey" -> "Ctrl+",
  "ShiftKey" -> "Shift+",
  "OptionKey" -> "Alt+",
  "BackspaceKey" -> "Backspace",
  "EnterKey" -> "Enter"
}
@|
@@resource NotebookToolbarPlatformStrings Macintosh
{
  "EvaluateKey" -> "\:21e7 \:23ce",
  "EvaluateInPlaceKey" -> "\[CloverLeaf] \:23ce",
  "AbortKey" -> "\[CloverLeaf] .",
  "DequeueKey" -> "\:21e7 \[CloverLeaf] .",
  "FindKey" -> "\[CloverLeaf] F",
  "HelpKey" -> "\:21e7 \[CloverLeaf] F",
  "MergeKey" -> "\:21e7 \[CloverLeaf] M",
  "DivideKey" -> "\:21e7 \[CloverLeaf] D",
  "GroupKey" -> "\:2303 G",
  "UngroupKey" -> "\:2303 \:21e7 G",
  "CopyInputKey" -> "\[CloverLeaf] L",
  "CopyOutputKey" -> "\:21e7 \[CloverLeaf] L",
  "BoldKey" -> "\[CloverLeaf] B",
  "ItalicKey" -> "\[CloverLeaf] I",
  "UnderlineKey" -> "",
  "CommentKey" -> "\[CloverLeaf] /",
  "IconizeKey" -> "\:2303 \[CloverLeaf] '",
  "ExtendKey" -> "\:2303 .",
  "CtrlEqualKey" -> "\:2303 =",
  "TeXKey" -> "\:2303 4",
  "CanvasKey" -> "\:2303 1",
  "HyperlinkKey" -> "\:21e7 \[CloverLeaf] H",
  "SystemModifierKey" -> "\[CloverLeaf]",
  "CtrlKey" -> "\:2303",
  "ShiftKey" -> "\:21e7",
  "OptionKey" -> "\:2325",
  "BackspaceKey" -> "\:232b",
  "EnterKey" -> "\:23ce"
}
@|
@@resource NotebookToolbarExpressions
{

"PackageToolbar" -> Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[GridBox[{
     {
      RowBox[{
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{3, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        DynamicBox[ToBoxes[
          Style[
           DynamicModule[{}, 
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               PaneSelector[{"Default" -> Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[
                    0.1411764705882353, 0.592156862745098, 
                    0.7176470588235294]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, Background -> 
                   RGBColor[
                    0.1411764705882353, 0.592156862745098, 
                    0.7176470588235294], FrameMargins -> {{2, 4}, {0, 0}}, 
                   FrameStyle -> 
                   RGBColor[
                    0.1411764705882353, 0.592156862745098, 
                    0.7176470588235294], 
                   ImageSize -> {{25, Full}, Automatic}], "Hover" -> Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[
                    0.42745098039215684`, 0.7281045751633987, 
                    0.8117647058823529]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                    Background -> 
                   RGBColor[
                    0.42745098039215684`, 0.7281045751633987, 
                    0.8117647058823529], FrameMargins -> {{2, 4}, {0, 0}}, 
                   FrameStyle -> 
                   RGBColor[
                    0.42745098039215684`, 0.7281045751633987, 
                    0.8117647058823529], 
                   ImageSize -> {{25, Full}, Automatic}], "Pressed" -> 
                 Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[
                    0.09411764705882353, 0.3947712418300654, 
                    0.47843137254901963`]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, Background -> 
                   RGBColor[
                    0.09411764705882353, 0.3947712418300654, 
                    0.47843137254901963`], FrameMargins -> {{2, 4}, {0, 0}}, 
                   FrameStyle -> 
                   RGBColor[
                    0.09411764705882353, 0.3947712418300654, 
                    0.47843137254901963`], 
                   ImageSize -> {{25, Full}, Automatic}]}, 
                Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                ImageSize -> Automatic], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
               PassEventsDown -> True], DynamicModuleValues :> {}], 
             FrontEnd`FrontEndToken[
              FrontEnd`ButtonNotebook[], "EvaluateInitialization"], 
             Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton",
              Evaluator -> None, Method -> "Preemptive"], 
            DynamicModuleValues :> {}], "tickler" -> AbsoluteCurrentValue[
             EvaluationCell[], CellOpen]], StandardForm],
         ImageSizeCache->{75.36500027179717, {3.0087890625, 13.9912109375}}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{4, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             PaneSelectorBox[{"Default"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIcon"],
                ImageSizeCache->{15.75, {5.7440185546875, 10.0059814453125}}],
               
               
               BaseStyle->{
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
               StripOnInput->False], "Hover"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
               StripOnInput->False], "Pressed"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIconActive"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
               StripOnInput->False]}, Dynamic[
               Which[
                And[Toolbar`Private`mouseDownQ$$, 
                 CurrentValue["MouseOver"]], "Pressed", 
                CurrentValue["MouseOver"], "Hover", True, "Default"]],
              ImageSize->Automatic],
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]],
            DynamicModuleValues:>{}],
           
           Appearance->FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
           BaseStyle->"NotebookToolbarButton",
           ButtonFunction:>FrontEnd`FrontEndToken["EvaluatorAbort"],
           Evaluator->None,
           Method->"Preemptive"],
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource["NotebookToolbarStrings", "Abort"], 
              StandardForm]], "\[InvisibleSpace]", "\"   \"", 
            "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "AbortKey"], StandardForm]], 
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
          TooltipDelay->0.25,
          TooltipStyle->"NotebookToolbarTooltip"],
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["NotebookToolbarStrings", "Abort"], 
               StandardForm]], "\[InvisibleSpace]", "\"   \"", 
             "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "AbortKey"], StandardForm]],
               FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
          "Tooltip"]& ],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        PaneSelectorBox[{True->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 44}], False->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 33}]}, Dynamic[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
         BaselinePosition->(Bottom -> Bottom),
         ImageSize->Automatic],
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False]}], 
      PaneBox[
       DynamicBox[StyleBox[
         RowBox[{
           PaneSelectorBox[{True -> GraphicsBox[
               LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
               "NotebookToolbarDelimiter", ImageSize -> {0, 44}], False -> 
             GraphicsBox[
               LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
               "NotebookToolbarDelimiter", ImageSize -> {0, 33}]}, 
            Dynamic[
             TrueQ[
              AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], ImageSize -> 
            Automatic, BaselinePosition -> (Bottom -> Bottom)], 
           "\[InvisibleSpace]", 
           PaneBox[
            TagBox[
             TooltipBox[
              
              DynamicModuleBox[{
               Toolbar`Private`mouseClickListener$$ = False, 
                Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> ToolbarSupport`AttachPopup[
                  Framed[
                   PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStylePackage"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStylePackage"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                   BaseStyle -> "NotebookToolbarOverflow"], {
                  Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> None}, False, "System", 
                  Dynamic[Toolbar`Private`mouseClickListener$$], 
                  Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                  Sequence[], 
                  Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                  True], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], DynamicModuleValues :> {}], 
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]], 
              TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"],
              Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
            ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
            ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
            BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {3, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", "\[InvisibleSpace]", 
           DynamicModuleBox[{}, 
            PaneBox[
             PaneSelectorBox[{True -> GraphicsBox[
                 LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                 "NotebookToolbarDelimiter", ImageSize -> {11, 44}], False -> 
               GraphicsBox[
                 LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                 "NotebookToolbarDelimiter", ImageSize -> {11, 33}]}, 
              Dynamic[
               TrueQ[
                AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
              ImageSize -> Automatic, BaselinePosition -> (Bottom -> Bottom)],
              ContentPadding -> False, 
             BaselinePosition -> (Bottom -> Bottom)], 
            Initialization :> (AttachCell[#, 
              Cell[
               BoxData[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", 
                  "FormattedControlCellStylePackage"], SingleEvaluation -> 
                 True]], Background -> GrayLevel[0.115], Evaluator -> 
               "System", Magnification -> Dynamic[
                 
                 CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "Magnification"}, 
                  FEPrivate`Switch[
                  FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                   1., 
                   Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
              
              Offset[{0, -1 + 3}, Automatic], {Right, Bottom}, 
              RemovalConditions -> {}]& )[
              EvaluationBox[]], DynamicModuleValues :> {}], "\[NoBreak]", 
           PaneBox[
            TagBox[
             TooltipBox[
              
              DynamicModuleBox[{
               Toolbar`Private`mouseClickListener$$ = False, 
                Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> ToolbarSupport`AttachPopup[
                  Framed[
                   PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                   BaseStyle -> "NotebookToolbarOverflow"], {
                  Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> None}, False, "System", 
                  Dynamic[Toolbar`Private`mouseClickListener$$], 
                  Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                  Sequence[], 
                  Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                  True], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], DynamicModuleValues :> {}], 
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]], 
              TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"],
              Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
            ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
            ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
            BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           DynamicModuleBox[{}, 
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> FE`toggleComment[], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], 
               RowBox[{
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarStrings", "ToggleComment"], StandardForm]],
                  "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "CommentKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                  StripOnInput -> False]}], TooltipDelay -> 0.25, 
               TooltipStyle -> "NotebookToolbarTooltip"], Annotation[#, 
               RawBoxes[
                RowBox[{
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "ToggleComment"], 
                    StandardForm]], "\[InvisibleSpace]", "\"   \"", 
                  "\[InvisibleSpace]", 
                  StyleBox[
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "CommentKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                   StripOnInput -> False]}]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], 
            Initialization :> (AttachCell[#, 
              Cell[
               BoxData[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", 
                  "FormattedControlExtendSelection"], SingleEvaluation -> 
                 True]], Background -> GrayLevel[0.115], Evaluator -> 
               "System", Magnification -> Dynamic[
                 
                 CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "Magnification"}, 
                  FEPrivate`Switch[
                  FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                   1., 
                   Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
              
              Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
              RemovalConditions -> {}]& )[
              EvaluationBox[]], DynamicModuleValues :> {}]}], "tickler" -> 
         AbsoluteCurrentValue[
           EvaluationCell[], CellOpen]],
        ImageSizeCache->{165., {6.36474609375, 22.4912109375}}],
       BaseStyle->{
        LinebreakAdjustments -> {10, 1, 1, 10, 10}, LineSpacing -> {5, 0}, 
         LineIndent -> 0, TextAlignment -> Left},
       BaselinePosition->Baseline,
       ContentPadding->False,
       ImageMargins->None,
       ImageSize->Dynamic[
         If[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]], {
          Full, 33 + 11}, {Full, 33}]]], 
      RowBox[{
       PaneBox[
        PaneSelectorBox[{True->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 44}], False->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 33}]}, Dynamic[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
         BaselinePosition->(Bottom -> Bottom),
         ImageSize->Automatic],
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{1, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        DynamicBox[ToBoxes[
          Style[
           DynamicModule[{}, 
            
            DynamicModule[{
             PackageToolbar`Private`search = "", 
              PackageToolbar`Private`sel = {{1}}, 
              PackageToolbar`Private`searchData = {}, 
              PackageToolbar`Private`searchByNumberQ = False, 
              PackageToolbar`Private`popupActiveQ, 
              PackageToolbar`Private`focusQ = False}, 
             EventHandler[
              EventHandler[
               DynamicWrapper[
                Tooltip[
                 Framed[
                  Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "NavigationIcon"][
                    RGBColor[
                    0.1411764705882353, 0.592156862745098, 
                    0.7176470588235294]]]], 
                    InputField[
                    Dynamic[
                    PackageToolbar`Private`search, (
                    PackageToolbar`Private`search = #; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`searchData = Which[
                    StringMatchQ[#, 
                    StringExpression[":", 
                    RepeatedNull[DigitCharacter]]], 
                    PackageToolbar`Private`searchByNumberQ = True; 
                    PackageToolbar`Private`searchAndFormat[
                    "LineNumber", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel], 
                    And[
                    StringMatchQ[#, ""], 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]]], 
                    PackageToolbar`Private`searchAndFormat[
                    "Nested", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel], True, 
                    PackageToolbar`Private`searchByNumberQ = False; 
                    PackageToolbar`Private`searchAndFormat["Flat", #]])& ], 
                    String, Appearance -> "Frameless", BoxID -> "NavSearch", 
                    ContinuousAction -> True, FieldHint -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OutlineDisplay"]], 
                    FieldHintStyle -> {
                    "NotebookToolbarText", FontOpacity -> 1}, ImageSize -> 
                    Full]}}, Alignment -> {Center, Center}], Background -> 
                  Dynamic[
                    If[
                    Or[
                    CurrentValue["MouseOver"], 
                    PackageToolbar`Private`popupActiveQ], 
                    GrayLevel[0], None]], 
                  BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{4, 2}, {0, 0}}, FrameStyle -> 
                  GrayLevel[0.8], ImageSize -> {200, 25}, RoundingRadius -> 
                  2], 
                 Dynamic[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OutlineTooltip"]]], 
                If[
                 And[PackageToolbar`Private`focusQ, 
                  Not[
                   TrueQ[
                    AbsoluteCurrentValue[
                    NotebookSelection[], {
                    TaggingRules, "SelectionWithinToolbarCellQ"}]]]], 
                 PackageToolbar`Private`focusQ = False; 
                 PackageToolbar`Private`sel = {{1}}; 
                 PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                   Cells[
                   AttachedCell -> True, CellTags -> "NavigationPopup"]]]], {
               "MouseDown" :> (CurrentValue[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}], {TaggingRules, "FrozenQ"}] = True; 
                 PackageToolbar`Private`focusQ = True; If[
                   Not[
                    TrueQ[
                    AbsoluteCurrentValue[
                    NotebookSelection[], {
                    TaggingRules, "SelectionWithinToolbarCellQ"}]]], 
                   FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "NavSearch", 
                    EvaluationCell[]]]; 
                 If[Cells[
                    AttachedCell -> True, CellTags -> 
                    "NavigationPopup"] === {}, 
                   PackageToolbar`Private`searchData = If[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}, False]], 
                    PackageToolbar`Private`searchAndFormat[
                    "Flat", PackageToolbar`Private`search], 
                    PackageToolbar`Private`searchAndFormat[
                    "Nested", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel]]; 
                   Module[{
                    PackageToolbar`Private`windowX$, 
                    PackageToolbar`Private`clickX$, 
                    PackageToolbar`Private`toolWidth$, 
                    PackageToolbar`Private`windowWidth$, 
                    PackageToolbar`Private`nbMag$}, 
                    PackageToolbar`Private`windowX$ = First[
                    MousePosition["ViewAbsolute"], 0]; 
                    PackageToolbar`Private`clickX$ = First[
                    MousePosition["EventHandlerAbsolute"], 0]; 
                    PackageToolbar`Private`toolWidth$ = 
                    PackageToolbar`Private`clickX$/First[
                    MousePosition["EventHandlerScaled"], 1]; 
                    PackageToolbar`Private`windowWidth$ = 
                    CurrentValue[{WindowSize, 1}]; 
                    PackageToolbar`Private`nbMag$ = AbsoluteCurrentValue[
                    EvaluationNotebook[], Magnification]; AttachCell[
                    EvaluationNotebook[], 
                    Cell[
                    BoxData[
                    ToBoxes[
                    DynamicModule[{}, 
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    PaneSelector[{"Empty" -> Pane[
                    Column[{
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavNoResults"]], FontSize -> 
                    18, FontSlant -> Italic, FontColor -> GrayLevel[0.702]], 
                    Framed[
                    Column[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavHelp1"]], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavHelp2"]]}, 
                    BaseStyle -> {LinebreakAdjustments -> {1, 10, 1, 0, 1}, 
                    LineIndent -> 0, PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}}, Spacings -> {0, 0.67}],
                     Background -> GrayLevel[0.07], 
                    FrameMargins -> {{20, 20}, {12, 10}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 9}}, RoundingRadius -> 2.5]},
                     Alignment -> {Center, Center}, 
                    BaseStyle -> {"TextStyling", FontColor -> 
                    GrayLevel[0.502], FontFamily -> "Source Sans Pro", 
                    FontSize -> 15}, Spacings -> {0, 0}], 
                    Alignment -> {Center, Center}, 
                    FrameMargins -> {{0, 0}, {18, 16}}, ImageSize -> {
                    Scaled[1], Automatic}], "Flat" -> MouseAppearance[
                    EventHandler[
                    TableView[
                    Dynamic[PackageToolbar`Private`searchData], Boxes, 
                    Alignment -> {Left, Center}, AllowedDimensions -> 
                    Dynamic[{1, 
                    Length[PackageToolbar`Private`searchData]}], 
                    AppearanceElements -> {}, Background -> GrayLevel[0.07], 
                    Dividers -> False, ImageSize -> {
                    Scaled[1], 
                    UpTo[200]}, ItemSize -> {{
                    Scaled[1]}}, PickedElements -> 
                    Dynamic[PackageToolbar`Private`sel], PickMode -> "Row", 
                    Scrollbars -> {False, Automatic}, 
                    ScrollPosition -> {0, 0}], "MouseClicked" :> (If[
                    And[PackageToolbar`Private`searchByNumberQ, 
                    IntegerQ[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                    FrontEndExecute[
                    FrontEnd`NotebookLocate[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                    SelectionMove[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 1, -1], All, Cell]]; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                    Cells[
                    AttachedCell -> True, CellTags -> "NavigationPopup"]]), 
                    Method -> "Queued", PassEventsDown -> True], "Arrow"], 
                    "Nested" -> Pane[
                    Dynamic[
                    Column[PackageToolbar`Private`searchData], 
                    TrackedSymbols :> {PackageToolbar`Private`searchData}], 
                    AppearanceElements -> {}, ImageSize -> {Full, 
                    UpTo[200]}, Scrollbars -> {False, Automatic}]}, 
                    Dynamic[
                    Which[PackageToolbar`Private`searchData === {}, "Empty", 
                    And[PackageToolbar`Private`search === "", 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}, False]]]], "Nested", True,
                     "Flat"]], ImageSize -> Automatic], Background -> 
                    GrayLevel[0.07], BaseStyle -> "NotebookToolbarText", 
                    FrameMargins -> Dynamic[{{
                    Which[PackageToolbar`Private`searchData === {}, 1, 
                    And[PackageToolbar`Private`search === "", 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]]], 5, True, 1], 1}, {1, 
                    1}}], FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.75]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {625, All}, RoundingRadius -> 3], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.026390158215457888`], RoundingRadius -> 4],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.023716381969016834`], RoundingRadius -> 5],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.02096481356314738], RoundingRadius -> 6], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.01811949159194239], RoundingRadius -> 7], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.015157165665103983`], RoundingRadius -> 8],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.012041123426403462`], RoundingRadius -> 9],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.008705505632961241], RoundingRadius -> 10],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.005], RoundingRadius -> 11], InheritScope -> 
                    True, Initialization :> (
                    PackageToolbar`Private`popupActiveQ = True), 
                    Deinitialization :> (
                    PackageToolbar`Private`popupActiveQ = False; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`search = ""; CurrentValue[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}], {TaggingRules, "FrozenQ"}] = 
                    False)]]], CellTags -> "NavigationPopup", Evaluator -> 
                    "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Right, Top}, 
                    
                    Offset[{(PackageToolbar`Private`windowX$ - 
                    PackageToolbar`Private`clickX$ + 
                    PackageToolbar`Private`toolWidth$ - 
                    PackageToolbar`Private`windowWidth$ + 12 + 11)/
                    PackageToolbar`Private`nbMag$, 9/
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]}, Automatic], {Right, Top}]]])}, Method -> 
               "Queued", PassEventsDown -> True], {"DownArrowKeyDown" :> If[
                 Or[PackageToolbar`Private`search != "", 
                  TrueQ[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]], 
                 Switch[PackageToolbar`Private`sel, 
                  Condition[{{
                    Pattern[PackageToolbar`Private`i$, 
                    Blank[Integer]]}}, PackageToolbar`Private`i$ < 
                   Length[PackageToolbar`Private`searchData]], 
                  PackageToolbar`Private`sel = 
                  PackageToolbar`Private`sel + 1, {{
                    Blank[Integer]}}, Null, 
                  Blank[], PackageToolbar`Private`sel = {{1}}]], 
               "UpArrowKeyDown" :> If[
                 And[
                  Or[PackageToolbar`Private`search != "", 
                   TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]], 
                  MatchQ[PackageToolbar`Private`sel, 
                   Condition[{{
                    Pattern[PackageToolbar`Private`i, 
                    Blank[Integer]]}}, PackageToolbar`Private`i > 1]]], 
                 PackageToolbar`Private`sel = PackageToolbar`Private`sel - 1],
                "ReturnKeyDown" :> (
                Which[Length[PackageToolbar`Private`searchData] == 0, 
                  If[PackageToolbar`Private`searchByNumberQ, 
                   NotebookLocate[
                    ToExpression[
                    StringDrop[PackageToolbar`Private`search, 1]]], 
                   SelectionMove[
                    EvaluationNotebook[], Before, Notebook, AutoScroll -> 
                    False]], 
                  MatchQ[PackageToolbar`Private`sel, 
                   Condition[{{
                    Pattern[PackageToolbar`Private`i$, 
                    Blank[Integer]]}}, PackageToolbar`Private`i$ <= 
                    Length[PackageToolbar`Private`searchData]]], 
                  If[
                   And[PackageToolbar`Private`searchByNumberQ, 
                    IntegerQ[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                   FrontEndExecute[
                    FrontEnd`NotebookLocate[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                   SelectionMove[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 1, -1], All, Cell]], True, 
                  SelectionMove[
                   Part[
                    Extract[PackageToolbar`Private`searchData, {{1}}], 1, 
                    1, -1], All, Cell]]; PackageToolbar`Private`sel = {{1}}; 
                PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                  Cells[
                  AttachedCell -> True, CellTags -> "NavigationPopup"]])}, 
              Method -> "Queued", PassEventsDown -> False], 
             DynamicModuleValues :> {}, 
             SaveDefinitions -> {
              PackageToolbar`Private`$searchableGreen, 
               PackageToolbar`Private`$codeGray, 
               PackageToolbar`Private`$codeBlack, 
               PackageToolbar`Private`searchableGreen, 
               PackageToolbar`Private`codeGray, 
               PackageToolbar`Private`codeBlack, 
               PackageToolbar`Private`formatCode, 
               PackageToolbar`Private`formatIconRow, 
               PackageToolbar`Private`formatCodeCell, 
               PackageToolbar`Private`formatFlatSection, 
               PackageToolbar`Private`formatText, 
               PackageToolbar`Private`formatButton, 
               PackageToolbar`Private`formatLevel, 
               PackageToolbar`Private`searchAndFormat, 
               PackageToolbar`Private`searchOnly, 
               PackageToolbar`Private`formatOnly}, 
             UnsavedVariables :> {PackageToolbar`Private`searchData}], 
            DynamicModuleValues :> {}], "tickler" -> AbsoluteCurrentValue[
             EvaluationCell[], CellOpen]], StandardForm],
         ImageSizeCache->{150., {6.36474609375, 12.38525390625}}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{4, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             PaneSelectorBox[{"Default"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIcon"],
                ImageSizeCache->{20.25, {7.9940185546875, 12.2559814453125}}],
               
               
               BaseStyle->{
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
               StripOnInput->False], "Hover"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
               StripOnInput->False], "Pressed"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
               StripOnInput->False]}, Dynamic[
               Which[
                And[Toolbar`Private`mouseDownQ$$, 
                 CurrentValue["MouseOver"]], "Pressed", 
                CurrentValue["MouseOver"], "Hover", True, "Default"]],
              ImageSize->Automatic],
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]],
            DynamicModuleValues:>{}],
           
           Appearance->FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
           BaseStyle->"NotebookToolbarButton",
           ButtonFunction:>FrontEnd`FrontEndToken["SelectionHelpDialog", True],
           Evaluator->None,
           Method->"Preemptive"],
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "OpenDocumentation"], StandardForm]], 
            "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]], 
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
          TooltipDelay->0.25,
          TooltipStyle->"NotebookToolbarTooltip"],
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OpenDocumentation"], StandardForm]],
              "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]], 
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
          "Tooltip"]& ],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{2, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Left, Right}, "Rows" -> {{Top}}},
    GridBoxItemSize->{"Columns" -> {All, Fit, All}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Deinitialization:>(
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = Inherited; NotebookDelete[
     Cells[AttachedCell -> True, CellTags -> "NotebookToolbarMinimized"]]),
  DynamicModuleValues:>{},
  Initialization:>(CurrentValue[
      EvaluationCell[], {TaggingRules, "SelectionWithinToolbarCellQ"}] = True; 
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = EvaluationCell[])]],
 Evaluator->"System",
 CellFrame->{{False, False}, {1, False}},
 CellDingbat->None,
 CellMargins->0,
 Enabled->True,
 CellOpen->True,
 TaggingRules-><|"ShowTitles" -> False, "SelectionWithinToolbarCellQ" -> True|>,
 CellContext->Cell,
 DynamicUpdating->True,
 CellFrameMargins->{{2, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0.4],
 CellFrameLabels->None,
 ShowCellTags->False,
 LineBreakWithin->Automatic,
 FontSize->12,
 Magnification->Dynamic[
   CurrentValue[$FrontEndSession, {
    PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
     "Magnification"}, 
    FEPrivate`Switch[
    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
     Blank[], 0.75]]],
 Background->GrayLevel[0.115],
 CellTags->
  "NotebookToolbar",ExpressionUUID->"83e5c28d-562a-5046-b74b-459b708de70b"],

"ScriptToolbar" -> {
Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[GridBox[{
     {
      RowBox[{
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{3, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        DynamicBox[ToBoxes[
          Style[
           DynamicModule[{}, 
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               PaneSelector[{"Default" -> Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[0.2588, 0.5098, 0.12155]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, Background -> 
                   RGBColor[0.2588, 0.5098, 0.12155], 
                   FrameMargins -> {{2, 4}, {0, 0}}, FrameStyle -> 
                   RGBColor[0.2588, 0.5098, 0.12155], 
                   ImageSize -> {{25, Full}, Automatic}], "Hover" -> Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[
                    0.5058666666666667, 0.6732, 0.4143666666666666]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                    Background -> 
                   RGBColor[0.5058666666666667, 0.6732, 0.4143666666666666], 
                   FrameMargins -> {{2, 4}, {0, 0}}, FrameStyle -> 
                   RGBColor[0.5058666666666667, 0.6732, 0.4143666666666666], 
                   ImageSize -> {{25, Full}, Automatic}], "Pressed" -> 
                 Framed[
                   Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RunPackageIcon"][
                    RGBColor[
                    0.17253333333333332`, 0.3398666666666667, 
                    0.08103333333333335]]]], 
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluatePackage"]], FontColor -> 
                    GrayLevel[1]]}}, Spacings -> {0.6, 0}], 
                   BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, Background -> 
                   RGBColor[
                    0.17253333333333332`, 0.3398666666666667, 
                    0.08103333333333335], FrameMargins -> {{2, 4}, {0, 0}}, 
                   FrameStyle -> 
                   RGBColor[
                    0.17253333333333332`, 0.3398666666666667, 
                    0.08103333333333335], 
                   ImageSize -> {{25, Full}, Automatic}]}, 
                Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                ImageSize -> Automatic], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
               PassEventsDown -> True], DynamicModuleValues :> {}], 
             FrontEnd`FrontEndToken[
              FrontEnd`ButtonNotebook[], "EvaluateInitialization"], 
             Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton",
              Evaluator -> None, Method -> "Preemptive"], 
            DynamicModuleValues :> {}], "tickler" -> AbsoluteCurrentValue[
             EvaluationCell[], CellOpen]], StandardForm],
         ImageSizeCache->{75.36500027179717, {3.0087890625, 13.9912109375}}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{4, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             PaneSelectorBox[{"Default"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIcon"],
                ImageSizeCache->{15.75, {5.7440185546875, 10.0059814453125}}],
               
               
               BaseStyle->{
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
               StripOnInput->False], "Hover"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
               StripOnInput->False], "Pressed"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "AbortIconActive"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
               StripOnInput->False]}, Dynamic[
               Which[
                And[Toolbar`Private`mouseDownQ$$, 
                 CurrentValue["MouseOver"]], "Pressed", 
                CurrentValue["MouseOver"], "Hover", True, "Default"]],
              ImageSize->Automatic],
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]],
            DynamicModuleValues:>{}],
           
           Appearance->FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
           BaseStyle->"NotebookToolbarButton",
           ButtonFunction:>FrontEnd`FrontEndToken["EvaluatorAbort"],
           Evaluator->None,
           Method->"Preemptive"],
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource["NotebookToolbarStrings", "Abort"], 
              StandardForm]], "\[InvisibleSpace]", "\"   \"", 
            "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "AbortKey"], StandardForm]], 
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
          TooltipDelay->0.25,
          TooltipStyle->"NotebookToolbarTooltip"],
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["NotebookToolbarStrings", "Abort"], 
               StandardForm]], "\[InvisibleSpace]", "\"   \"", 
             "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "AbortKey"], StandardForm]],
               FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
          "Tooltip"]& ],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        PaneSelectorBox[{True->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 44}], False->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 33}]}, Dynamic[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
         BaselinePosition->(Bottom -> Bottom),
         ImageSize->Automatic],
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False]}], 
      PaneBox[
       DynamicBox[StyleBox[
         RowBox[{
           PaneSelectorBox[{True -> GraphicsBox[
               LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
               "NotebookToolbarDelimiter", ImageSize -> {0, 44}], False -> 
             GraphicsBox[
               LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
               "NotebookToolbarDelimiter", ImageSize -> {0, 33}]}, 
            Dynamic[
             TrueQ[
              AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], ImageSize -> 
            Automatic, BaselinePosition -> (Bottom -> Bottom)], 
           "\[InvisibleSpace]", 
           PaneBox[
            TagBox[
             TooltipBox[
              
              DynamicModuleBox[{
               Toolbar`Private`mouseClickListener$$ = False, 
                Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> ToolbarSupport`AttachPopup[
                  Framed[
                   PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStylePackage"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStylePackage"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                   BaseStyle -> "NotebookToolbarOverflow"], {
                  Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> None}, False, "System", 
                  Dynamic[Toolbar`Private`mouseClickListener$$], 
                  Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                  Sequence[], 
                  Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                  True], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], DynamicModuleValues :> {}], 
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]], 
              TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"],
              Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
            ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
            ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
            BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {3, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", "\[InvisibleSpace]", 
           DynamicModuleBox[{}, 
            PaneBox[
             PaneSelectorBox[{True -> GraphicsBox[
                 LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                 "NotebookToolbarDelimiter", ImageSize -> {11, 44}], False -> 
               GraphicsBox[
                 LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                 "NotebookToolbarDelimiter", ImageSize -> {11, 33}]}, 
              Dynamic[
               TrueQ[
                AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
              ImageSize -> Automatic, BaselinePosition -> (Bottom -> Bottom)],
              ContentPadding -> False, 
             BaselinePosition -> (Bottom -> Bottom)], 
            Initialization :> (AttachCell[#, 
              Cell[
               BoxData[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", 
                  "FormattedControlCellStylePackage"], SingleEvaluation -> 
                 True]], Background -> GrayLevel[0.115], Evaluator -> 
               "System", Magnification -> Dynamic[
                 
                 CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "Magnification"}, 
                  FEPrivate`Switch[
                  FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                   1., 
                   Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
              
              Offset[{0, -1 + 3}, Automatic], {Right, Bottom}, 
              RemovalConditions -> {}]& )[
              EvaluationBox[]], DynamicModuleValues :> {}], "\[NoBreak]", 
           PaneBox[
            TagBox[
             TooltipBox[
              
              DynamicModuleBox[{
               Toolbar`Private`mouseClickListener$$ = False, 
                Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> ToolbarSupport`AttachPopup[
                  Framed[
                   PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelection"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "FormattedControlComment"]],
                     SingleEvaluation -> True]}, None, StripOnInput -> True], 
                    ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                   BaseStyle -> "NotebookToolbarOverflow"], {
                  Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> None}, False, "System", 
                  Dynamic[Toolbar`Private`mouseClickListener$$], 
                  Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                  Sequence[], 
                  Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                  True], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], DynamicModuleValues :> {}], 
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]], 
              TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"],
              Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
            ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
            ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
            BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
           GraphicsBox[
           ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
           "\[InvisibleSpace]", 
           DynamicModuleBox[{}, 
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                 TagBox[
                  PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CommentIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, StripOnInput -> False]}, 
                   Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], 
                  
                  EventHandlerTag[{
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                ButtonFunction :> FE`toggleComment[], Appearance -> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                Method -> "Preemptive"], 
               RowBox[{
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarStrings", "ToggleComment"], StandardForm]],
                  "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "CommentKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                  StripOnInput -> False]}], TooltipDelay -> 0.25, 
               TooltipStyle -> "NotebookToolbarTooltip"], Annotation[#, 
               RawBoxes[
                RowBox[{
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "ToggleComment"], 
                    StandardForm]], "\[InvisibleSpace]", "\"   \"", 
                  "\[InvisibleSpace]", 
                  StyleBox[
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "CommentKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                   StripOnInput -> False]}]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], 
            Initialization :> (AttachCell[#, 
              Cell[
               BoxData[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", 
                  "FormattedControlExtendSelection"], SingleEvaluation -> 
                 True]], Background -> GrayLevel[0.115], Evaluator -> 
               "System", Magnification -> Dynamic[
                 
                 CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "Magnification"}, 
                  FEPrivate`Switch[
                  FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                   1., 
                   Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
              
              Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
              RemovalConditions -> {}]& )[
              EvaluationBox[]], DynamicModuleValues :> {}]}], "tickler" -> 
         AbsoluteCurrentValue[
           EvaluationCell[], CellOpen]],
        ImageSizeCache->{165., {6.36474609375, 22.4912109375}}],
       BaseStyle->{
        LinebreakAdjustments -> {10, 1, 1, 10, 10}, LineSpacing -> {5, 0}, 
         LineIndent -> 0, TextAlignment -> Left},
       BaselinePosition->Baseline,
       ContentPadding->False,
       ImageMargins->None,
       ImageSize->Dynamic[
         If[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]], {
          Full, 33 + 11}, {Full, 33}]]], 
      RowBox[{
       PaneBox[
        PaneSelectorBox[{True->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 44}], False->
         GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
          BaseStyle->"NotebookToolbarDelimiter",
          ImageSize->{11, 33}]}, Dynamic[
          TrueQ[
           AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
         BaselinePosition->(Bottom -> Bottom),
         ImageSize->Automatic],
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{1, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        DynamicBox[ToBoxes[
          Style[
           DynamicModule[{}, 
            
            DynamicModule[{
             PackageToolbar`Private`search = "", 
              PackageToolbar`Private`sel = {{1}}, 
              PackageToolbar`Private`searchData = {}, 
              PackageToolbar`Private`searchByNumberQ = False, 
              PackageToolbar`Private`popupActiveQ, 
              PackageToolbar`Private`focusQ = False}, 
             EventHandler[
              EventHandler[
               DynamicWrapper[
                Tooltip[
                 Framed[
                  Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "NavigationIcon"][
                    RGBColor[0.2588, 0.5098, 0.12155]]]], 
                    InputField[
                    Dynamic[
                    PackageToolbar`Private`search, (
                    PackageToolbar`Private`search = #; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`searchData = Which[
                    StringMatchQ[#, 
                    StringExpression[":", 
                    RepeatedNull[DigitCharacter]]], 
                    PackageToolbar`Private`searchByNumberQ = True; 
                    PackageToolbar`Private`searchAndFormat[
                    "LineNumber", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel], 
                    And[
                    StringMatchQ[#, ""], 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]]], 
                    PackageToolbar`Private`searchAndFormat[
                    "Nested", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel], True, 
                    PackageToolbar`Private`searchByNumberQ = False; 
                    PackageToolbar`Private`searchAndFormat["Flat", #]])& ], 
                    String, Appearance -> "Frameless", BoxID -> "NavSearch", 
                    ContinuousAction -> True, FieldHint -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OutlineDisplay"]], 
                    FieldHintStyle -> {
                    "NotebookToolbarText", FontOpacity -> 1}, ImageSize -> 
                    Full]}}, Alignment -> {Center, Center}], Background -> 
                  Dynamic[
                    If[
                    Or[
                    CurrentValue["MouseOver"], 
                    PackageToolbar`Private`popupActiveQ], 
                    GrayLevel[0], None]], 
                  BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{4, 2}, {0, 0}}, FrameStyle -> 
                  GrayLevel[0.8], ImageSize -> {200, 25}, RoundingRadius -> 
                  2], 
                 Dynamic[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OutlineTooltip"]]], 
                If[
                 And[PackageToolbar`Private`focusQ, 
                  Not[
                   TrueQ[
                    AbsoluteCurrentValue[
                    NotebookSelection[], {
                    TaggingRules, "SelectionWithinToolbarCellQ"}]]]], 
                 PackageToolbar`Private`focusQ = False; 
                 PackageToolbar`Private`sel = {{1}}; 
                 PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                   Cells[
                   AttachedCell -> True, CellTags -> "NavigationPopup"]]]], {
               "MouseDown" :> (CurrentValue[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}], {TaggingRules, "FrozenQ"}] = True; 
                 PackageToolbar`Private`focusQ = True; If[
                   Not[
                    TrueQ[
                    AbsoluteCurrentValue[
                    NotebookSelection[], {
                    TaggingRules, "SelectionWithinToolbarCellQ"}]]], 
                   FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "NavSearch", 
                    EvaluationCell[]]]; 
                 If[Cells[
                    AttachedCell -> True, CellTags -> 
                    "NavigationPopup"] === {}, 
                   PackageToolbar`Private`searchData = If[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}, False]], 
                    PackageToolbar`Private`searchAndFormat[
                    "Flat", PackageToolbar`Private`search], 
                    PackageToolbar`Private`searchAndFormat[
                    "Nested", PackageToolbar`Private`search, 
                    PackageToolbar`Private`sel]]; 
                   Module[{
                    PackageToolbar`Private`windowX$, 
                    PackageToolbar`Private`clickX$, 
                    PackageToolbar`Private`toolWidth$, 
                    PackageToolbar`Private`windowWidth$, 
                    PackageToolbar`Private`nbMag$}, 
                    PackageToolbar`Private`windowX$ = First[
                    MousePosition["ViewAbsolute"], 0]; 
                    PackageToolbar`Private`clickX$ = First[
                    MousePosition["EventHandlerAbsolute"], 0]; 
                    PackageToolbar`Private`toolWidth$ = 
                    PackageToolbar`Private`clickX$/First[
                    MousePosition["EventHandlerScaled"], 1]; 
                    PackageToolbar`Private`windowWidth$ = 
                    CurrentValue[{WindowSize, 1}]; 
                    PackageToolbar`Private`nbMag$ = AbsoluteCurrentValue[
                    EvaluationNotebook[], Magnification]; AttachCell[
                    EvaluationNotebook[], 
                    Cell[
                    BoxData[
                    ToBoxes[
                    DynamicModule[{}, 
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    Framed[
                    PaneSelector[{"Empty" -> Pane[
                    Column[{
                    Style[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavNoResults"]], FontSize -> 
                    18, FontSlant -> Italic, FontColor -> GrayLevel[0.702]], 
                    Framed[
                    Column[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavHelp1"]], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NavHelp2"]]}, 
                    BaseStyle -> {LinebreakAdjustments -> {1, 10, 1, 0, 1}, 
                    LineIndent -> 0, PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}}, Spacings -> {0, 0.67}],
                     Background -> GrayLevel[0.07], 
                    FrameMargins -> {{20, 20}, {12, 10}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 9}}, RoundingRadius -> 2.5]},
                     Alignment -> {Center, Center}, 
                    BaseStyle -> {"TextStyling", FontColor -> 
                    GrayLevel[0.502], FontFamily -> "Source Sans Pro", 
                    FontSize -> 15}, Spacings -> {0, 0}], 
                    Alignment -> {Center, Center}, 
                    FrameMargins -> {{0, 0}, {18, 16}}, ImageSize -> {
                    Scaled[1], Automatic}], "Flat" -> MouseAppearance[
                    EventHandler[
                    TableView[
                    Dynamic[PackageToolbar`Private`searchData], Boxes, 
                    Alignment -> {Left, Center}, AllowedDimensions -> 
                    Dynamic[{1, 
                    Length[PackageToolbar`Private`searchData]}], 
                    AppearanceElements -> {}, Background -> GrayLevel[0.07], 
                    Dividers -> False, ImageSize -> {
                    Scaled[1], 
                    UpTo[200]}, ItemSize -> {{
                    Scaled[1]}}, PickedElements -> 
                    Dynamic[PackageToolbar`Private`sel], PickMode -> "Row", 
                    Scrollbars -> {False, Automatic}, 
                    ScrollPosition -> {0, 0}], "MouseClicked" :> (If[
                    And[PackageToolbar`Private`searchByNumberQ, 
                    IntegerQ[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                    FrontEndExecute[
                    FrontEnd`NotebookLocate[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                    SelectionMove[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 1, -1], All, Cell]]; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                    Cells[
                    AttachedCell -> True, CellTags -> "NavigationPopup"]]), 
                    Method -> "Queued", PassEventsDown -> True], "Arrow"], 
                    "Nested" -> Pane[
                    Dynamic[
                    Column[PackageToolbar`Private`searchData], 
                    TrackedSymbols :> {PackageToolbar`Private`searchData}], 
                    AppearanceElements -> {}, ImageSize -> {Full, 
                    UpTo[200]}, Scrollbars -> {False, Automatic}]}, 
                    Dynamic[
                    Which[PackageToolbar`Private`searchData === {}, "Empty", 
                    And[PackageToolbar`Private`search === "", 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}, False]]]], "Nested", True,
                     "Flat"]], ImageSize -> Automatic], Background -> 
                    GrayLevel[0.07], BaseStyle -> "NotebookToolbarText", 
                    FrameMargins -> Dynamic[{{
                    Which[PackageToolbar`Private`searchData === {}, 1, 
                    And[PackageToolbar`Private`search === "", 
                    Not[
                    TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]]], 5, True, 1], 1}, {1, 
                    1}}], FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.75]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {625, All}, RoundingRadius -> 3], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.026390158215457888`], RoundingRadius -> 4],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.023716381969016834`], RoundingRadius -> 5],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.02096481356314738], RoundingRadius -> 6], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.01811949159194239], RoundingRadius -> 7], 
                    FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.015157165665103983`], RoundingRadius -> 8],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.012041123426403462`], RoundingRadius -> 9],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.008705505632961241], RoundingRadius -> 10],
                     FrameMargins -> 0, FrameStyle -> None, Background -> 
                    GrayLevel[0, 0.005], RoundingRadius -> 11], InheritScope -> 
                    True, Initialization :> (
                    PackageToolbar`Private`popupActiveQ = True), 
                    Deinitialization :> (
                    PackageToolbar`Private`popupActiveQ = False; 
                    PackageToolbar`Private`sel = {{1}}; 
                    PackageToolbar`Private`search = ""; CurrentValue[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}], {TaggingRules, "FrozenQ"}] = 
                    False)]]], CellTags -> "NavigationPopup", Evaluator -> 
                    "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Right, Top}, 
                    
                    Offset[{(PackageToolbar`Private`windowX$ - 
                    PackageToolbar`Private`clickX$ + 
                    PackageToolbar`Private`toolWidth$ - 
                    PackageToolbar`Private`windowWidth$ + 12 + 11)/
                    PackageToolbar`Private`nbMag$, 9/
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]}, Automatic], {Right, Top}]]])}, Method -> 
               "Queued", PassEventsDown -> True], {"DownArrowKeyDown" :> If[
                 Or[PackageToolbar`Private`search != "", 
                  TrueQ[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]], 
                 Switch[PackageToolbar`Private`sel, 
                  Condition[{{
                    Pattern[PackageToolbar`Private`i$, 
                    Blank[Integer]]}}, PackageToolbar`Private`i$ < 
                   Length[PackageToolbar`Private`searchData]], 
                  PackageToolbar`Private`sel = 
                  PackageToolbar`Private`sel + 1, {{
                    Blank[Integer]}}, Null, 
                  Blank[], PackageToolbar`Private`sel = {{1}}]], 
               "UpArrowKeyDown" :> If[
                 And[
                  Or[PackageToolbar`Private`search != "", 
                   TrueQ[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "FlatView"}]]], 
                  MatchQ[PackageToolbar`Private`sel, 
                   Condition[{{
                    Pattern[PackageToolbar`Private`i, 
                    Blank[Integer]]}}, PackageToolbar`Private`i > 1]]], 
                 PackageToolbar`Private`sel = PackageToolbar`Private`sel - 1],
                "ReturnKeyDown" :> (
                Which[Length[PackageToolbar`Private`searchData] == 0, 
                  If[PackageToolbar`Private`searchByNumberQ, 
                   NotebookLocate[
                    ToExpression[
                    StringDrop[PackageToolbar`Private`search, 1]]], 
                   SelectionMove[
                    EvaluationNotebook[], Before, Notebook, AutoScroll -> 
                    False]], 
                  MatchQ[PackageToolbar`Private`sel, 
                   Condition[{{
                    Pattern[PackageToolbar`Private`i$, 
                    Blank[Integer]]}}, PackageToolbar`Private`i$ <= 
                    Length[PackageToolbar`Private`searchData]]], 
                  If[
                   And[PackageToolbar`Private`searchByNumberQ, 
                    IntegerQ[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                   FrontEndExecute[
                    FrontEnd`NotebookLocate[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 2]]], 
                   SelectionMove[
                    Part[
                    Extract[
                    PackageToolbar`Private`searchData, 
                    PackageToolbar`Private`sel], 1, 1, -1], All, Cell]], True, 
                  SelectionMove[
                   Part[
                    Extract[PackageToolbar`Private`searchData, {{1}}], 1, 
                    1, -1], All, Cell]]; PackageToolbar`Private`sel = {{1}}; 
                PackageToolbar`Private`search = ""; Map[NotebookDelete, 
                  Cells[
                  AttachedCell -> True, CellTags -> "NavigationPopup"]])}, 
              Method -> "Queued", PassEventsDown -> False], 
             DynamicModuleValues :> {}, 
             SaveDefinitions -> {
              PackageToolbar`Private`$searchableGreen, 
               PackageToolbar`Private`$codeGray, 
               PackageToolbar`Private`$codeBlack, 
               PackageToolbar`Private`searchableGreen, 
               PackageToolbar`Private`codeGray, 
               PackageToolbar`Private`codeBlack, 
               PackageToolbar`Private`formatCode, 
               PackageToolbar`Private`formatIconRow, 
               PackageToolbar`Private`formatCodeCell, 
               PackageToolbar`Private`formatFlatSection, 
               PackageToolbar`Private`formatText, 
               PackageToolbar`Private`formatButton, 
               PackageToolbar`Private`formatLevel, 
               PackageToolbar`Private`searchAndFormat, 
               PackageToolbar`Private`searchOnly, 
               PackageToolbar`Private`formatOnly}, 
             UnsavedVariables :> {PackageToolbar`Private`searchData}], 
            DynamicModuleValues :> {}], "tickler" -> AbsoluteCurrentValue[
             EvaluationCell[], CellOpen]], StandardForm],
         ImageSizeCache->{150., {6.36474609375, 12.38525390625}}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{4, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             PaneSelectorBox[{"Default"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIcon"],
                ImageSizeCache->{20.25, {7.9940185546875, 12.2559814453125}}],
               
               
               BaseStyle->{
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
               StripOnInput->False], "Hover"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
               StripOnInput->False], "Pressed"->
              FrameBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "DocsIconHover"]],
               
               BaseStyle->{
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
               StripOnInput->False]}, Dynamic[
               Which[
                And[Toolbar`Private`mouseDownQ$$, 
                 CurrentValue["MouseOver"]], "Pressed", 
                CurrentValue["MouseOver"], "Hover", True, "Default"]],
              ImageSize->Automatic],
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]],
            DynamicModuleValues:>{}],
           
           Appearance->FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
           BaseStyle->"NotebookToolbarButton",
           ButtonFunction:>FrontEnd`FrontEndToken["SelectionHelpDialog", True],
           Evaluator->None,
           Method->"Preemptive"],
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "OpenDocumentation"], StandardForm]], 
            "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]], 
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
          TooltipDelay->0.25,
          TooltipStyle->"NotebookToolbarTooltip"],
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OpenDocumentation"], StandardForm]],
              "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]], 
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
          "Tooltip"]& ],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}], "\[InvisibleSpace]", 
       PaneBox[
        GraphicsBox[{},
         BaseStyle->"NotebookToolbarSpacer",
         ImageSize->{2, 25}],
        Alignment->{Center, Center},
        BaselinePosition->(Bottom -> Bottom),
        ContentPadding->False,
        FrameMargins->{{0, 0}, {3, 0}},
        ImageSize->{All, 30}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Left, Right}, "Rows" -> {{Top}}},
    GridBoxItemSize->{"Columns" -> {All, Fit, All}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Deinitialization:>(
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = Inherited; NotebookDelete[
     Cells[AttachedCell -> True, CellTags -> "NotebookToolbarMinimized"]]),
  DynamicModuleValues:>{},
  Initialization:>(CurrentValue[
      EvaluationCell[], {TaggingRules, "SelectionWithinToolbarCellQ"}] = True; 
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = EvaluationCell[])]],
 Evaluator->"System",
 CellFrame->{{False, False}, {1, False}},
 CellDingbat->None,
 CellMargins->0,
 Enabled->True,
 CellOpen->True,
 TaggingRules-><|"ShowTitles" -> False, "SelectionWithinToolbarCellQ" -> True|>,
 CellContext->Cell,
 DynamicUpdating->True,
 CellFrameMargins->{{2, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0.0],
 CellFrameLabels->None,
 ShowCellTags->False,
 LineBreakWithin->Automatic,
 FontSize->12,
 Magnification->Dynamic[
   CurrentValue[$FrontEndSession, {
    PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
     "Magnification"}, 
    FEPrivate`Switch[
    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
     Blank[], 0.75]]],
 Background->GrayLevel[0.115],
 CellTags->
  "NotebookToolbar",ExpressionUUID->"d1be428a-d5d0-7d4d-8a8e-a95e9ffd2546"],
Cell[BoxData[
 DynamicBox[ToBoxes[
   CurrentValue[
    EvaluationNotebook[], "NotebookScriptShebangLine"], 
   StandardForm]]], "Text",
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameMargins->{{16, 0}, {5, 5}},
 FontFamily->Dynamic[
   AbsoluteCurrentValue[{StyleHints, "CodeFont"}]],
 FontSize->12,
 FontWeight->Plain,
 FontColor->RGBColor[1, 1, 1],
 Background->RGBColor[
  0.2588, 0.5098, 
   0.12155],ExpressionUUID->"b2f4a940-445e-334c-b2c0-8242eb4da845"]
},

"ToolbarCell" -> Cell[BoxData[
 DynamicModuleBox[{NotebookToolbar`Private`codeSelectionQ$$}, 
  DynamicWrapperBox[
   TagBox[GridBox[{
      {
       RowBox[{
        PaneBox[
         DynamicBox[ToBoxes[
           Style[
            DynamicModule[{}, 
             Pane["", {10, 0}, BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> AttachCell[
               EvaluationCell[], 
               With[{Toolbar`Private`toolbarCellObj$ = EvaluationCell[]}, 
                Cell[
                 BoxData[
                  ButtonBox[
                   (PaneSelectorBox[{False -> PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "MinimizeToolbarIcon"]], 
                    FrameMargins -> {{0, 0}, {0, 2}}, 
                    Alignment -> {Center, Top}, ImageSize -> {10, 35}], True -> 
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "MinimizeToolbarIcon"]], 
                    FrameMargins -> {{0, 0}, {0, 18}}, 
                    Alignment -> {Center, Top}, ImageSize -> {10, 46}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[#, {TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> Automatic]& )[
                   Toolbar`Private`toolbarCellObj$], ButtonFunction :> 
                   SetOptions[
                    Toolbar`Private`toolbarCellObj$, CellOpen -> False, 
                    CellFrame -> False], Method -> "Preemptive", 
                   ContentPadding -> False, 
                   BaselinePosition -> (Bottom -> Bottom), ImageSize -> All, 
                   FrameMargins -> None, Evaluator -> None, 
                   Appearance -> {
                    "Default" -> 
                    Image[RawArray["UnsignedInteger8",{{40}}], "Byte", 
                    ColorSpace -> "Grayscale", Interleaving -> None], "Hover" -> 
                    Image[RawArray["UnsignedInteger8",{{55}}], "Byte", 
                    ColorSpace -> "Grayscale", Interleaving -> None], 
                    "Pressed" -> 
                    Image[RawArray["UnsignedInteger8",{{10}}], "Byte", 
                    ColorSpace -> "Grayscale", Interleaving -> None]}, 
                   Tooltip -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "MinimizeToolbarTooltip"]]]], 
                 FontSize -> 1, Magnification -> Dynamic[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                   Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}]], {
               Left, Top}, Automatic, {Left, Top}], 
             DynamicModuleValues :> {}], "tickler" -> AbsoluteCurrentValue[
              EvaluationCell[], CellOpen]], StandardForm],
          ImageSizeCache->{7.5, {2.2587890625, -2.2587890625}}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{3, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         DynamicBox[ToBoxes[
           Style[
            DynamicModule[{}, 
             Row[{
               Tooltip[
                Button[
                 DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                  EventHandler[
                   PaneSelector[{"Default" -> Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "EvaluateIcon"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}], "Hover" -> Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "EvaluateIconHover"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}], "Pressed" -> Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "EvaluateIconActive"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], {
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                   PassEventsDown -> True], DynamicModuleValues :> {}], 
                 FrontEnd`FrontEndToken["EvaluateCells"], Appearance -> 
                 "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                 Evaluator -> None, Method -> "Preemptive"], 
                RawBoxes[
                 RowBox[{
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluateShiftEnter"], 
                    StandardForm]], "\[InvisibleSpace]", "\"   \"", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "EvaluateKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                    StripOnInput -> False]}]], TooltipDelay -> 0.25, 
                TooltipStyle -> "NotebookToolbarTooltip"], 
               Graphics[
                Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                "NotebookToolbarDelimiter", ImageSize -> {3, 18.75}, 
                ImagePadding -> {{0, 0}, {6.25, 0}}], 
               Tooltip[
                
                DynamicModule[{
                 Toolbar`Private`mouseClickListener = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed = 0}, 
                 Button[
                  DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                   EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {12, 25}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {12, 25}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {12, 25}]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener, "Pressed", 
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Graphics[
                    Line[{{-1, 0}, {0, -1}, {1, 0}}], 
                    ImageSize -> {11, 7.699999999999999}, AspectRatio -> Full,
                     ImagePadding -> 2, BaselinePosition -> Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    FrameMargins -> None, ImageSize -> {12, 25}]}, {1, 2}, 1, 
                    BaseStyle -> "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                  ToolbarSupport`AttachPopup[
                   Framed[
                    Column[{
                    DynamicModule[{Toolbar`Private`lbms}, 
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Evaluate"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Dynamic[
                    Column[Toolbar`Private`lbms, 
                    Sequence[
                    Alignment -> Left, BaseStyle -> "NotebookToolbarText", 
                    ItemSize -> Full, Spacings -> 0]], DestroyAfterEvaluation -> 
                    True], FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], 
                    Initialization :> (Toolbar`Private`lbms = Pick[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "InPlaceIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluateInPlace"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", 
                    "EvaluateInPlaceKey"]], {{18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; FrontEnd`FrontEndToken["Evaluate"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellBracketIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluateSelectedCells"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "EvaluateKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["EvaluateCells"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "InitializationCellsIcon"]]], {{18, Automatic}, {18, 18}},
                     BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", 
                    "EvaluateInitializationCells"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["EvaluateInitialization"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "NotebookSmallIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Notebook"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["EvaluateNotebook"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"]}, 
                    Map[Not[
                    AnyTrue[#, Or[
                    MatchQ[#, 
                    Condition[
                    Dynamic[
                    Pattern[Toolbar`Private`c, 
                    Blank[]]], 
                    TrueQ[Toolbar`Private`c]]], 
                    TrueQ[#]]& ]]& , {
                    Dynamic[
                    FailureQ[
                    CurrentValue["SelectionData"]]], None, None, None}]]), 
                    DynamicModuleValues :> {}], 
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "EvaluateOptions"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader", RoundingRadius -> 0], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ParallelIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "ParallelKernelStatus"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; Parallel`Palette`menuStatus[], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> Dynamic[
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], Evaluator]], Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Pane[
                    Column[{
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "GlobalContextIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "LocalizeSymbols"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    Grid[{{
                    Pane[
                    "", {{18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], CellContext], (CurrentValue[
                    EvaluationNotebook[], CellContext] = 
                    If[# === Notebook, Notebook, Inherited]; NotebookDelete[
                    EvaluationCell[]])& ], {"Global`" -> Dynamic[
                    Style["Global",FontColor -> GrayLevel[0.5]]], Notebook -> 
                    Dynamic[
                    Style["Notebook",FontColor -> GrayLevel[0.5]]]}, Method -> 
                    "Active"]}},
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}]}], 
                    ImageMargins -> {{5, 0}, {0, 0}}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0]}, Spacings -> {0, 0}], Background -> 
                    GrayLevel[0.1], BaseStyle -> "NotebookToolbarText", 
                    FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {
                   Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                   False, "System", 
                   Dynamic[Toolbar`Private`mouseClickListener], 
                   Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed], 
                   Sequence[], 
                   Sequence[], "FreezeDynamics" -> True], Appearance -> 
                  "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                  Evaluator -> "System", Method -> "Preemptive"], 
                 DynamicModuleValues :> {}], 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "EvaluateTooltip"]], TooltipDelay -> 
                0.25, TooltipStyle -> "NotebookToolbarTooltip"]}, 
              StripOnInput -> True], Initialization :> {
               With[{Toolbar`Private`tbCell$ = EvaluationCell[]}, 
                AttachCell[Toolbar`Private`tbCell$, 
                 Function[{Toolbar`Private`tbCell$}, 
                  Cell[
                   BoxData[
                    PaneBox[
                    TagBox[
                    TooltipBox[
                    ActionMenuBox[
                    PaneSelectorBox[{True -> FrameBox[
                    DynamicBox[
                    PaneBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ToolbarSettingsIcon"]], 
                    SingleEvaluation -> True], Background -> GrayLevel[0.12], 
                    FrameStyle -> None, RoundingRadius -> 1, 
                    FrameMargins -> {{1, 0}, {0, 1}}, StripOnInput -> False], 
                    False -> FrameBox[
                    DynamicBox[
                    PaneBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ToolbarSettingsIcon"]], 
                    SingleEvaluation -> True], Background -> GrayLevel[0.115],
                     FrameStyle -> None, RoundingRadius -> 1, 
                    FrameMargins -> {{1, 0}, {0, 1}}, StripOnInput -> False]}, 
                    Dynamic[
                    FrontEnd`CurrentValue["MouseOver"]], ImageSize -> 
                    Automatic, ContentPadding -> False], {TemplateBox[{
                    StyleBox[
                    GraphicsBox[
                    LineBox[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]], 
                    StripOnInput -> False], 
                    TemplateBox[{3}, "Spacer1"], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"], 
                    StandardForm]]}, "RowDefault"] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    TemplateBox[{
                    StyleBox[
                    GraphicsBox[
                    LineBox[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]], StripOnInput -> False], 
                    TemplateBox[{3}, "Spacer1"], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"], 
                    StandardForm]]}, "RowDefault"] :> (If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], 
                    TemplateBox[{
                    StyleBox[
                    GraphicsBox[
                    LineBox[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]], 
                    StripOnInput -> False], 
                    TemplateBox[{3}, "Spacer1"], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"], 
                    StandardForm]]}, "RowDefault"] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), TemplateBox[{
                    StyleBox[
                    GraphicsBox[
                    LineBox[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]], 
                    StripOnInput -> False], 
                    TemplateBox[{3}, "Spacer1"], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"], 
                    StandardForm]]}, "RowDefault"] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}, 
                    Appearance -> "Frameless", ContentPadding -> False], 
                    "\"Toolbar settings\"", TooltipDelay -> 0, TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Toolbar settings", "Tooltip"]& ], 
                    ContentPadding -> False, FrameMargins -> Dynamic[
                    If[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}, True]], {{0, 
                    4}, {0, 4}}, {{0, 1}, {0, 1}}]]]], FontSize -> 1]][
                 Toolbar`Private`tbCell$], {Right, Top}, Automatic, {
                 Right, Top}]], 
               AttachCell[
                EvaluationBox[], 
                Cell[
                 BoxData[
                  PaneSelectorBox[{True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleEvaluation"], 
                    StandardForm]], False -> TemplateBox[{0, 0}, "Spacer2"]}, 
                   
                   Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                   ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                   Baseline, 
                   BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]]], 
                 Evaluator -> "System", Magnification -> Dynamic[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                Offset[{-2, 0}, Automatic], {Left, Bottom}, 
                RemovalConditions -> {}]}, DynamicModuleValues :> {}], 
            "tickler" -> AbsoluteCurrentValue[
              EvaluationCell[], CellOpen]], StandardForm],
          ImageSizeCache->{31.5, {3.0087890625, 16.4912109375}}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{4, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         RowBox[{
          TagBox[
           TooltipBox[
            ButtonBox[
             DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
              TagBox[
               PaneSelectorBox[{"Default"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "AbortIcon"],
                  
                  ImageSizeCache->{
                   15.75, {5.7440185546875, 10.0059814453125}}],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
                 
                 StripOnInput->False], "Hover"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "AbortIconHover"]],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                 StripOnInput->False], "Pressed"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "AbortIconActive"]],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
                 
                 StripOnInput->False]}, Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ$$, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]],
                ImageSize->Automatic],
               
               EventHandlerTag[{
                "MouseUp" :> 
                 FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                 "MouseDown" :> 
                 FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]],
              DynamicModuleValues:>{}],
             
             Appearance->FEPrivate`FrontEndResource[
              "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
             BaseStyle->"NotebookToolbarButton",
             ButtonFunction:>FrontEnd`FrontEndToken["EvaluatorAbort"],
             Evaluator->None,
             Method->"Preemptive"],
            RowBox[{
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["NotebookToolbarStrings", "Abort"],
                 StandardForm]], "\[InvisibleSpace]", "\"   \"", 
              "\[InvisibleSpace]", 
              StyleBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarPlatformStrings", "AbortKey"], 
                 StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
               False]}],
            TooltipDelay->0.25,
            TooltipStyle->"NotebookToolbarTooltip"],
           Annotation[#, 
            RawBoxes[
             RowBox[{
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "Abort"], StandardForm]], 
               "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
               StyleBox[
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarPlatformStrings", "AbortKey"], 
                  StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
                False]}]], "Tooltip"]& ], "\[InvisibleSpace]", 
          GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
           BaseStyle->"NotebookToolbarDelimiter",
           ImagePadding->{{0, 0}, {6.25, 0}},
           ImageSize->{3, 18.75}], "\[InvisibleSpace]", 
          TagBox[
           TooltipBox[
            
            DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
             Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
             ButtonBox[
              DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
               TagBox[
                OverlayBox[{
                 PaneSelectorBox[{"Default"->
                  FrameBox["\<\"\"\>",
                   
                   BaseStyle->{
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"},
                   FrameMargins->None,
                   ImageSize->{12, 25},
                   StripOnInput->False], "Hover"->
                  FrameBox["\<\"\"\>",
                   
                   BaseStyle->{
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                   
                   FrameMargins->None,
                   ImageSize->{12, 25},
                   StripOnInput->False], "Pressed"->
                  FrameBox["\<\"\"\>",
                   
                   BaseStyle->{
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"},
                   FrameMargins->None,
                   ImageSize->{12, 25},
                   StripOnInput->False]}, Dynamic[
                   Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]],
                  ImageSize->Automatic], 
                 FrameBox[
                  GraphicsBox[LineBox[{{-1, 0}, {0, -1}, {1, 0}}],
                   AspectRatio->Full,
                   BaseStyle->{
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]},
                   BaselinePosition->Center,
                   ImagePadding->2,
                   ImageSize->{11, 7.699999999999999}],
                  
                  BaseStyle->{
                   "NotebookToolbarButtonFrame", "NotebookToolbarText"},
                  FrameMargins->None,
                  ImageSize->{12, 25},
                  StripOnInput->False]}, {1, 2}, 1,
                 BaseStyle->"NotebookToolbarButtonOverlay"],
                
                EventHandlerTag[{
                 "MouseUp" :> 
                  FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                  "MouseDown" :> 
                  FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]],
               DynamicModuleValues:>{}],
              
              Appearance->FEPrivate`FrontEndResource[
               "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
              BaseStyle->"NotebookToolbarButton",
              ButtonFunction:>ToolbarSupport`AttachPopup[
                Framed[
                 Column[{
                   Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "AbortMenuHeader"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                   Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "AbortAllIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "AbortEvaluation"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "AbortKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["EvaluatorAbort"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "RemoveQueueIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "AbortRemoveFromQueue"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "DequeueKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["RemoveFromEvaluationQueue"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                  BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                  Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                 "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}}, 
                 FrameStyle -> Directive[
                   AbsoluteThickness[1], 
                   GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                 ImageSize -> {300, All}, RoundingRadius -> 3], {
                Magnification -> Dynamic[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                   Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                False, "System", 
                Dynamic[Toolbar`Private`mouseClickListener$$], 
                Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                Sequence[], 
                Sequence[], "FreezeDynamics" -> True],
              Evaluator->"System",
              Method->"Preemptive"],
             DynamicModuleValues:>{}],
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "AbortTooltip"], StandardForm]],
            TooltipDelay->0.25,
            TooltipStyle->"NotebookToolbarTooltip"],
           Annotation[#, 
            Dynamic[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "AbortTooltip"]], "Tooltip"]& ]}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         PaneSelectorBox[{True->
          GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
           BaseStyle->"NotebookToolbarDelimiter",
           ImageSize->{11, 44}], False->
          GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
           BaseStyle->"NotebookToolbarDelimiter",
           ImageSize->{11, 33}]}, Dynamic[
           TrueQ[
            AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
          BaselinePosition->(Bottom -> Bottom),
          ImageSize->Automatic],
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False]}], 
       PaneBox[
        DynamicBox[StyleBox[
          RowBox[{
            PaneSelectorBox[{True -> GraphicsBox[
                LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                "NotebookToolbarDelimiter", ImageSize -> {0, 44}], False -> 
              GraphicsBox[
                LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                "NotebookToolbarDelimiter", ImageSize -> {0, 33}]}, 
             Dynamic[
              TrueQ[
               AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
             ImageSize -> Automatic, BaselinePosition -> (Bottom -> Bottom)], 
            "\[InvisibleSpace]", 
            PaneBox[
             TagBox[
              TooltipBox[
               
               DynamicModuleBox[{
                Toolbar`Private`mouseClickListener$$ = False, 
                 Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                ButtonBox[
                 DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                  TagBox[
                   PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                   
                   EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                 ButtonFunction :> ToolbarSupport`AttachPopup[
                   Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCellStyle"]], 
                    False -> Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStyle"]], SingleEvaluation -> True], 
                    
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellDecorations"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCells"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellStyle"]], SingleEvaluation -> True], 
                    
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellDecorations"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                   Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                   False, "System", 
                   Dynamic[Toolbar`Private`mouseClickListener$$], 
                   Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                   Sequence[], 
                   Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                   True], Appearance -> 
                 FEPrivate`FrontEndResource[
                  "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                 BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                 Method -> "Preemptive"], DynamicModuleValues :> {}], 
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]],
                TooltipDelay -> 0.25, TooltipStyle -> 
               "NotebookToolbarTooltip"], Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {25, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellDecorations"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCells"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellDecorations"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "FormattedControlCellStyle"], 
                  SingleEvaluation -> True]], Background -> GrayLevel[0.115], 
                Evaluator -> "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> AttachCell[
                  EvaluationCell[], 
                  Cell[
                   BoxData[
                    PaneSelectorBox[{True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCellStyle"], 
                    StandardForm]], False -> TemplateBox[{0, 0}, "Spacer2"]}, 
                    
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]]], 
                   Evaluator -> "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                  Offset[{-2, -1}, Automatic], {Left, Bottom}, 
                  RemovalConditions -> {}]], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {3, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              PaneSelectorBox[{True -> GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 44}], False -> 
                GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 33}]}, 
               Dynamic[
                TrueQ[
                 AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
               ImageSize -> Automatic, 
               BaselinePosition -> (Bottom -> Bottom)], ContentPadding -> 
              False, BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", 
                   "FormattedControlCellDecorations"], SingleEvaluation -> 
                  True]], Background -> GrayLevel[0.115], Evaluator -> 
                "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{0, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], "\[NoBreak]", 
            PaneBox[
             TagBox[
              TooltipBox[
               
               DynamicModuleBox[{
                Toolbar`Private`mouseClickListener$$ = False, 
                 Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                ButtonBox[
                 DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                  TagBox[
                   PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                   
                   EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                 ButtonFunction :> ToolbarSupport`AttachPopup[
                   Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCells"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCellGrouping"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                   Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                   False, "System", 
                   Dynamic[Toolbar`Private`mouseClickListener$$], 
                   Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                   Sequence[], 
                   Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                   True], Appearance -> 
                 FEPrivate`FrontEndResource[
                  "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                 BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                 Method -> "Preemptive"], DynamicModuleValues :> {}], 
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]],
                TooltipDelay -> 0.25, TooltipStyle -> 
               "NotebookToolbarTooltip"], Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertInput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", 
                   "FormattedControlCellGrouping"], SingleEvaluation -> 
                  True]], Background -> GrayLevel[0.115], Evaluator -> 
                "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> AttachCell[
                  EvaluationCell[], 
                  Cell[
                   BoxData[
                    PaneSelectorBox[{True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCells"], 
                    StandardForm]], False -> TemplateBox[{0, 0}, "Spacer2"]}, 
                    
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]]], 
                   Evaluator -> "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                  Offset[{-2, -1}, Automatic], {Left, Bottom}, 
                  RemovalConditions -> {}]], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\n"], 
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertOutput"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", 
                   "FormattedControlInsertInput"], SingleEvaluation -> True]],
                 Background -> GrayLevel[0.115], Evaluator -> "System", 
                Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {3, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              PaneSelectorBox[{True -> GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 44}], False -> 
                GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 33}]}, 
               Dynamic[
                TrueQ[
                 AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
               ImageSize -> Automatic, 
               BaselinePosition -> (Bottom -> Bottom)], ContentPadding -> 
              False, BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", 
                   "FormattedControlInsertOutput"], SingleEvaluation -> 
                  True]], Background -> GrayLevel[0.115], Evaluator -> 
                "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{0, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], "\[NoBreak]", 
            PaneBox[
             TagBox[
              TooltipBox[
               
               DynamicModuleBox[{
                Toolbar`Private`mouseClickListener$$ = False, 
                 Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                ButtonBox[
                 DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                  TagBox[
                   PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                   
                   EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                 ButtonFunction :> ToolbarSupport`AttachPopup[
                   Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    
                    PaneSelector[{
                    True -> DynamicModule[{
                    Toolbar`Private`savedx, Toolbar`Private`toolbarCell}, 
                    PaneSelector[{False -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"]], True -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx}], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                   Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                   False, "System", 
                   Dynamic[Toolbar`Private`mouseClickListener$$], 
                   Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                   Sequence[], 
                   Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                   True], Appearance -> 
                 FEPrivate`FrontEndResource[
                  "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                 BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                 Method -> "Preemptive"], DynamicModuleValues :> {}], 
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]],
                TooltipDelay -> 0.25, TooltipStyle -> 
               "NotebookToolbarTooltip"], Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
            
            DynamicModuleBox[{
             Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
             
             PaneSelectorBox[{
              False -> PaneBox["\"\"", ImageSize -> {25, 25}], True -> 
               PaneBox["\"\"", ImageSize -> {7, 25}]}, 
              Dynamic[
               FEPrivate`If[
                TrueQ[
                 CurrentValue[
                 Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                  False]], Toolbar`Private`savedx$$, 
                FEPrivate`Set[
                Toolbar`Private`savedx$$, 
                 NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
              Automatic, ContentPadding -> False], 
             Initialization :> (
              Toolbar`Private`savedx$$ = 
               FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
              Toolbar`Private`toolbarCell$$ = 
               CurrentValue[$FrontEndSession, {
                 PrivateFrontEndOptions, "InterfaceSettings", 
                  "NotebookToolbar", "ToolbarCell", 
                  EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
             UnsavedVariables :> {Toolbar`Private`savedx$$}], 
            "\[InvisibleSpace]", 
            
            DynamicModuleBox[{
             Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
             
             PaneSelectorBox[{
              False -> PaneBox["\"\"", ImageSize -> {25, 25}], True -> 
               PaneBox["\"\"", ImageSize -> {0, 25}]}, 
              Dynamic[
               FEPrivate`If[
                TrueQ[
                 CurrentValue[
                 Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                  False]], Toolbar`Private`savedx$$, 
                FEPrivate`Set[
                Toolbar`Private`savedx$$, 
                 NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
              Automatic, ContentPadding -> False], 
             Initialization :> (
              Toolbar`Private`savedx$$ = 
               FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
              Toolbar`Private`toolbarCell$$ = 
               CurrentValue[$FrontEndSession, {
                 PrivateFrontEndOptions, "InterfaceSettings", 
                  "NotebookToolbar", "ToolbarCell", 
                  EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
             UnsavedVariables :> {Toolbar`Private`savedx$$}], 
            "\[InvisibleSpace]", 
            
            DynamicModuleBox[{
             Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
             
             PaneSelectorBox[{
              False -> PaneBox["\"\"", ImageSize -> {19, 25}], True -> 
               PaneBox["\"\"", ImageSize -> {0, 25}]}, 
              Dynamic[
               FEPrivate`If[
                TrueQ[
                 CurrentValue[
                 Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                  False]], Toolbar`Private`savedx$$, 
                FEPrivate`Set[
                Toolbar`Private`savedx$$, 
                 NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
              Automatic, ContentPadding -> False], 
             Initialization :> (
              Toolbar`Private`savedx$$ = 
               FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
              Toolbar`Private`toolbarCell$$ = 
               CurrentValue[$FrontEndSession, {
                 PrivateFrontEndOptions, "InterfaceSettings", 
                  "NotebookToolbar", "ToolbarCell", 
                  EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
             UnsavedVariables :> {Toolbar`Private`savedx$$}], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              
              DynamicModuleBox[{
               Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
               
               PaneSelectorBox[{
                False -> PaneBox[
                  "\[InvisibleSpace]", ImageSize -> {0, 25}, BaseStyle -> 
                   "NotebookToolbarSpacer"], True -> TagBox[
                   TooltipBox[
                    
                    DynamicModuleBox[{
                    Toolbar`Private`mouseClickListener$$ = False, 
                    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OverflowTooltip"], 
                    StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                    "NotebookToolbarTooltip"], Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OverflowTooltip"]], 
                    "Tooltip"]& ]}, 
                Dynamic[
                 FEPrivate`If[
                  TrueQ[
                   CurrentValue[
                   Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx$$, 
                  FEPrivate`Set[
                  Toolbar`Private`savedx$$, 
                   NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
                Automatic, ContentPadding -> False, 
                BaselinePosition -> (Bottom -> Bottom)], 
               Initialization :> (
                Toolbar`Private`savedx$$ = 
                 FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                Toolbar`Private`toolbarCell$$ = 
                 CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
               UnsavedVariables :> {Toolbar`Private`savedx$$}], 
              ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicModuleBox[{}, 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarExpressions", 
                    "FormattedControlExtendSelectionOrTextFormatting"][
                   NotebookToolbar`Private`codeSelectionQ$$], 
                   SingleEvaluation -> True], DynamicModuleParent -> #]], 
                Background -> GrayLevel[0.115], Evaluator -> "System", 
                Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> AttachCell[
                  EvaluationCell[], 
                  Cell[
                   BoxData[
                    DynamicModuleBox[{}, 
                    
                    PaneSelectorBox[{
                    True -> DynamicModuleBox[{
                    Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
                    
                    PaneSelectorBox[{False -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleText"], 
                    StandardForm]], True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleCode"], 
                    StandardForm]]}, 
                    Dynamic[
                    FEPrivate`If[
                    TrueQ[
                    CurrentValue[
                    Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx$$, 
                    FEPrivate`Set[
                    Toolbar`Private`savedx$$, 
                    NotebookToolbar`Private`codeSelectionQ$$]]], 
                    ImageSize -> {Automatic, 13}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    Initialization :> (
                    Toolbar`Private`savedx$$ = 
                    FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                    Toolbar`Private`toolbarCell$$ = 
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
                    UnsavedVariables :> {Toolbar`Private`savedx$$}], False -> 
                    TemplateBox[{0, 0}, "Spacer2"]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {Automatic, 13}], DynamicModuleParent -> #]],
                    Evaluator -> "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                  Offset[{-2, -1}, Automatic], {Left, Bottom}, 
                  RemovalConditions -> {}]], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            
            DynamicModuleBox[{
             Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
             
             PaneSelectorBox[{
              False -> PaneBox["\"\"", ImageSize -> {0, 25}], True -> 
               PaneBox["\"\"", ImageSize -> {7, 25}]}, 
              Dynamic[
               FEPrivate`If[
                TrueQ[
                 CurrentValue[
                 Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                  False]], Toolbar`Private`savedx$$, 
                FEPrivate`Set[
                Toolbar`Private`savedx$$, 
                 NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
              Automatic, ContentPadding -> False], 
             Initialization :> (
              Toolbar`Private`savedx$$ = 
               FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
              Toolbar`Private`toolbarCell$$ = 
               CurrentValue[$FrontEndSession, {
                 PrivateFrontEndOptions, "InterfaceSettings", 
                  "NotebookToolbar", "ToolbarCell", 
                  EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
             UnsavedVariables :> {Toolbar`Private`savedx$$}], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              
              DynamicModuleBox[{
               Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
               
               PaneSelectorBox[{
                False -> PaneBox[
                  "\[InvisibleSpace]", ImageSize -> {0, 25}, BaseStyle -> 
                   "NotebookToolbarSpacer"], True -> TagBox[
                   TooltipBox[
                    
                    DynamicModuleBox[{
                    Toolbar`Private`mouseClickListener$$ = False, 
                    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OverflowTooltip"], 
                    StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                    "NotebookToolbarTooltip"], Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "OverflowTooltip"]], 
                    "Tooltip"]& ]}, 
                Dynamic[
                 FEPrivate`If[
                  TrueQ[
                   CurrentValue[
                   Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                    False]], Toolbar`Private`savedx$$, 
                  FEPrivate`Set[
                  Toolbar`Private`savedx$$, 
                   NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
                Automatic, ContentPadding -> False, 
                BaselinePosition -> (Bottom -> Bottom)], 
               Initialization :> (
                Toolbar`Private`savedx$$ = 
                 FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
                Toolbar`Private`toolbarCell$$ = 
                 CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
               UnsavedVariables :> {Toolbar`Private`savedx$$}], 
              ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicModuleBox[{}, 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarExpressions", 
                    "FormattedControlControlEqualOrNothing"][
                   NotebookToolbar`Private`codeSelectionQ$$], 
                   SingleEvaluation -> True], DynamicModuleParent -> #]], 
                Background -> GrayLevel[0.115], Evaluator -> "System", 
                Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            
            DynamicModuleBox[{
             Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
             
             PaneSelectorBox[{
              False -> PaneBox["\"\"", ImageSize -> {0, 25}], True -> 
               PaneBox["\"\"", ImageSize -> {7, 25}]}, 
              Dynamic[
               FEPrivate`If[
                TrueQ[
                 CurrentValue[
                 Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                  False]], Toolbar`Private`savedx$$, 
                FEPrivate`Set[
                Toolbar`Private`savedx$$, 
                 NotebookToolbar`Private`codeSelectionQ$$]]], ImageSize -> 
              Automatic, ContentPadding -> False], 
             Initialization :> (
              Toolbar`Private`savedx$$ = 
               FE`Evaluate[NotebookToolbar`Private`codeSelectionQ$$]; 
              Toolbar`Private`toolbarCell$$ = 
               CurrentValue[$FrontEndSession, {
                 PrivateFrontEndOptions, "InterfaceSettings", 
                  "NotebookToolbar", "ToolbarCell", 
                  EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
             UnsavedVariables :> {Toolbar`Private`savedx$$}], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\n"], 
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                    NotebookToolbar`Private`codeSelectionQ$$]], 
                    SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    Line[{{0, -1}, {0, 1}}], BaseStyle -> 
                    "NotebookToolbarDelimiter", BaselinePosition -> 
                    Scaled[0.2], ImageSize -> {11, 30}], 
                    RawBoxes["\[NoBreak]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicModuleBox[{}, 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarExpressions", 
                    "FormattedControlIconizeOrNothing"][
                   NotebookToolbar`Private`codeSelectionQ$$], 
                   SingleEvaluation -> True], DynamicModuleParent -> #]], 
                Background -> GrayLevel[0.115], Evaluator -> "System", 
                Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {3, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              PaneSelectorBox[{True -> GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 44}], False -> 
                GraphicsBox[
                  LineBox[{{0, -1}, {0, 1}}], BaseStyle -> 
                  "NotebookToolbarDelimiter", ImageSize -> {11, 33}]}, 
               Dynamic[
                TrueQ[
                 AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
               ImageSize -> Automatic, 
               BaselinePosition -> (Bottom -> Bottom)], ContentPadding -> 
              False, BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicModuleBox[{}, 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarExpressions", 
                    "FormattedControlCommentOrCodeText"][
                   NotebookToolbar`Private`codeSelectionQ$$], 
                   SingleEvaluation -> True], DynamicModuleParent -> #]], 
                Background -> GrayLevel[0.115], Evaluator -> "System", 
                Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{0, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], "\[NoBreak]", 
            PaneBox[
             TagBox[
              TooltipBox[
               
               DynamicModuleBox[{
                Toolbar`Private`mouseClickListener$$ = False, 
                 Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                ButtonBox[
                 DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                  TagBox[
                   PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                   
                   EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                 ButtonFunction :> ToolbarSupport`AttachPopup[
                   Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    PaneSelector[{True -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"]], False -> 
                    Spacer[{0, 0}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]], 
                    RawBoxes["\n"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlInsertMath"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                   Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                   False, "System", 
                   Dynamic[Toolbar`Private`mouseClickListener$$], 
                   Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                   Sequence[], 
                   Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                   True], Appearance -> 
                 FEPrivate`FrontEndResource[
                  "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                 BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
                 Method -> "Preemptive"], DynamicModuleValues :> {}], 
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"], StandardForm]],
                TooltipDelay -> 0.25, TooltipStyle -> 
               "NotebookToolbarTooltip"], Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ], 
             ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
             BaselinePosition -> (Bottom -> Bottom)], "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlTeXAssistant"]], SingleEvaluation -> 
                    True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "FormattedControlInsertMath"],
                   SingleEvaluation -> True]], Background -> GrayLevel[0.115],
                 Evaluator -> "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> AttachCell[
                  EvaluationCell[], 
                  Cell[
                   BoxData[
                    PaneSelectorBox[{True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleInsert"], 
                    StandardForm]], False -> TemplateBox[{0, 0}, "Spacer2"]}, 
                    
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                    ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                    Baseline, 
                    BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]]], 
                   Evaluator -> "System", Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                  Offset[{-2, -1}, Automatic], {Left, Bottom}, 
                  RemovalConditions -> {}]], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {23, 25}, 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "OverflowIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {23, 25}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    PaneSelector[{True -> Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}], False -> 
                    Pane[
                    Row[{
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlDrawCanvas"]], SingleEvaluation -> True], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Graphics[
                    ImageSize -> {4, 25}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    RawBoxes["\[InvisibleSpace]"], 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "FormattedControlHyperlink"]], SingleEvaluation -> True]},
                     None, StripOnInput -> True], ImageSize -> {
                    UpTo[200], 
                    UpTo[250]}, FrameMargins -> {{5, 5}, {1, 5}}]}, 
                    Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]]], 
                    BaseStyle -> "NotebookToolbarOverflow"], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[TaggingRules -> (<|"ShowTitles" -> Dynamic[
                    
                    AbsoluteCurrentValue[#, {
                    TaggingRules, "ShowTitles"}]]|>& )], "FreezeDynamics" -> 
                    True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "OverflowTooltip"], 
                  StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "OverflowTooltip"]], "Tooltip"]& ],
               ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", 
                   "FormattedControlTeXAssistant"], SingleEvaluation -> 
                  True]], Background -> GrayLevel[0.115], Evaluator -> 
                "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}], 
            "\[InvisibleSpace]", 
            GraphicsBox[
            ImageSize -> {7, 25}, BaseStyle -> "NotebookToolbarSpacer"], 
            "\[InvisibleSpace]", 
            DynamicModuleBox[{}, 
             PaneBox[
              TagBox[
               TooltipBox[
                
                DynamicModuleBox[{
                 Toolbar`Private`mouseClickListener$$ = False, 
                  Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                 ButtonBox[
                  DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                   TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkIcon"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkIconHover"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    
                    EventHandlerTag[{
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                  ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkAddIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkAdd"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "HyperlinkKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["CreateHyperlinkDialog"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkRemoveIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkRemove"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["RemoveHyperlink"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkCopyIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkCopy"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["CopyHyperlink"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "HyperlinkCopyAddressIcon"]]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkCopyAddress"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["CopyHyperlinkAddress"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}], Background -> 
                    GrayLevel[0.1], BaseStyle -> "NotebookToolbarText", 
                    FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {210, All}, RoundingRadius -> 3], {
                    Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                    False, "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                  FEPrivate`FrontEndResource[
                   "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                  BaseStyle -> "NotebookToolbarButton", Evaluator -> "System",
                   Method -> "Preemptive"], DynamicModuleValues :> {}], 
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarStrings", "Hyperlink"], StandardForm]], 
                TooltipDelay -> 0.25, TooltipStyle -> 
                "NotebookToolbarTooltip"], Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "Hyperlink"]], "Tooltip"]& ], 
              ImageSize -> {All, 30}, Alignment -> {Center, Center}, 
              ContentPadding -> False, FrameMargins -> {{0, 0}, {3, 0}}, 
              BaselinePosition -> (Bottom -> Bottom)], 
             Initialization :> (AttachCell[#, 
               Cell[
                BoxData[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "FormattedControlDrawCanvas"],
                   SingleEvaluation -> True]], Background -> GrayLevel[0.115],
                 Evaluator -> "System", Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], Initialization :> None], {Left, Bottom}, 
               Offset[{-4, -1 + 3}, Automatic], {Right, Bottom}, 
               RemovalConditions -> {}]& )[
               EvaluationBox[]], DynamicModuleValues :> {}]}], "tickler" -> 
          AbsoluteCurrentValue[
            EvaluationCell[], CellOpen]],
         ImageSizeCache->{0., {0., 0.}}],
        BaseStyle->{
         LinebreakAdjustments -> {10, 1, 1, 10, 10}, LineSpacing -> {5, 0}, 
          LineIndent -> 0, TextAlignment -> Left},
        BaselinePosition->Baseline,
        ContentPadding->False,
        ImageMargins->None,
        ImageSize->Dynamic[
          If[
           TrueQ[
            AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]], {
           Full, 33 + 11}, {Full, 33}]]], 
       RowBox[{
        PaneBox[
         PaneSelectorBox[{True->
          GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
           BaseStyle->"NotebookToolbarDelimiter",
           ImageSize->{11, 44}], False->
          GraphicsBox[LineBox[{{0, -1}, {0, 1}}],
           BaseStyle->"NotebookToolbarDelimiter",
           ImageSize->{11, 33}]}, Dynamic[
           TrueQ[
            AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]],
          BaselinePosition->(Bottom -> Bottom),
          ImageSize->Automatic],
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{1, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         DynamicBox[ToBoxes[
           Style[
            DynamicModule[{}, 
             Tooltip[
              
              DynamicModule[{
               Toolbar`Private`mouseClickListener = False, 
                Toolbar`Private`timeWhenThisMenuLastClosed = 0}, 
               Button[
                DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                 EventHandler[
                  PaneSelector[{"Default" -> Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ChatControlIcon"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None], "Hover" -> 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ChatControlIconHover"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None], "Pressed" -> Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "ChatControlIconHover"]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None]}, 
                   Dynamic[
                    Which[Toolbar`Private`mouseClickListener, "Pressed", 
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                   ImageSize -> Automatic], {
                  "MouseUp" :> 
                   FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                   "MouseDown" :> 
                   FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                  PassEventsDown -> True], DynamicModuleValues :> {}], 
                ToolbarSupport`AttachPopup[
                 Framed[
                  Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "ChatControlHeader"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Pane[
                    Dynamic[
                    Needs["Wolfram`Chatbook`" -> None]; 
                    Wolfram`Chatbook`UI`CreateToolbarContent[], 
                    SingleEvaluation -> True], 
                    BaseStyle -> {
                    "NotebookToolbarText", LineBreakWithin -> False}]}, 
                    Alignment -> Left, BaseStyle -> "NotebookToolbarText", 
                    ItemSize -> Full, Spacings -> 0], FrameMargins -> 2, 
                    ImageSize -> {
                    Scaled[1], All}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                   BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                   Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                  "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}}, 
                  FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                  ImageSize -> {231, All}, RoundingRadius -> 3], {
                 Magnification -> Dynamic[
                    
                    CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                    Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                    If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                    CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
                 False, "Local", 
                 Dynamic[Toolbar`Private`mouseClickListener], 
                 Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed], 
                 Sequence[], 
                 Sequence[], "FreezeDynamics" -> True], Appearance -> 
                "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                "Local", Method -> "Preemptive"], DynamicModuleValues :> {}], 
              
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "ChatControlTooltip"]], TooltipDelay -> 
              0.25, TooltipStyle -> "NotebookToolbarTooltip"], Initialization :> {
               AttachCell[
                EvaluationBox[], 
                Cell[
                 BoxData[
                  PaneSelectorBox[{True -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SectionTitleNotebook"], 
                    StandardForm]], False -> TemplateBox[{0, 0}, "Spacer2"]}, 
                   
                   Dynamic[
                    TrueQ[
                    AbsoluteCurrentValue[{TaggingRules, "ShowTitles"}]]], 
                   ImageSize -> {Automatic, {0, 13}}, BaselinePosition -> 
                   Baseline, 
                   BaseStyle -> {
                    "NotebookToolbarText", FontSize -> 11, FontColor -> 
                    GrayLevel[0.7]}, Background -> GrayLevel[0.115]]], 
                 Evaluator -> "System", Magnification -> Dynamic[
                   
                   CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                    FEPrivate`Switch[
                    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]]], {Left, Top}, 
                Offset[{-2, 0}, Automatic], {Left, Bottom}, 
                RemovalConditions -> {}]}, DynamicModuleValues :> {}], 
            "tickler" -> AbsoluteCurrentValue[
              EvaluationCell[], CellOpen]], StandardForm],
          ImageSizeCache->{19.5, {3.0087890625, 16.4912109375}}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{4, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         TagBox[
          TooltipBox[
           
           DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
            Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
            ButtonBox[
             DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
              TagBox[
               PaneSelectorBox[{"Default"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "CloudIcon"],
                  
                  ImageSizeCache->{
                   20.25, {7.9940185546875, 12.2559814453125}}],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
                 
                 FrameMargins->None,
                 StripOnInput->False], "Hover"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "CloudIconHover"]],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                 FrameMargins->None,
                 StripOnInput->False], "Pressed"->
                FrameBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "NotebookToolbarExpressions", "CloudIconHover"]],
                 
                 BaseStyle->{
                  "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
                 
                 FrameMargins->None,
                 StripOnInput->False]}, Dynamic[
                 Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                  And[Toolbar`Private`mouseDownQ$$, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]],
                ImageSize->Automatic],
               
               EventHandlerTag[{
                "MouseUp" :> 
                 FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                 "MouseDown" :> 
                 FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]],
              DynamicModuleValues:>{}],
             
             Appearance->FEPrivate`FrontEndResource[
              "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
             BaseStyle->"NotebookToolbarButton",
             ButtonFunction:>ToolbarSupport`AttachPopup[
               Framed[
                Pane[
                 Column[{
                   Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CloudSaveIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SaveToCloud"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    FrontEnd`FrontEndToken["SaveToCloudObject"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Queued"], 
                   Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CloudPublishIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "PublishToCloud"]]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; NotebookTools`OpenCloudPublishDialog[
                    EvaluationNotebook[]], Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Queued"]}, Alignment -> Left, 
                  BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                  Spacings -> 0], FrameMargins -> 2, ImageSize -> {
                   Scaled[1], 
                   UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                 Automatic, ImageSizeAction -> "Scrollable", 
                 Scrollbars -> {False, Automatic}], Background -> GrayLevel[0.12], BaseStyle -> "NotebookToolbarText", 
                FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> Directive[
                  AbsoluteThickness[1], 
                  GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                ImageSize -> {200, All}, RoundingRadius -> 3], {
               Magnification -> Dynamic[
                  
                  CurrentValue[$FrontEndSession, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "Magnification"}, 
                   FEPrivate`Switch[
                   FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                    1., 
                    Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                    MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                  Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                   If[
                    MemberQ[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    DeleteCases[#, "MultipurposeBar"], 
                    CurrentValue[$FrontEnd, WindowToolbars] = 
                    Append[#, "MultipurposeBar"]]& )[
                    Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                   CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                   CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                   AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
               False, "System", 
               Dynamic[Toolbar`Private`mouseClickListener$$], 
               Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
               Sequence[], 
               Sequence[], "FreezeDynamics" -> True],
             Evaluator->"System",
             Method->"Preemptive"],
            DynamicModuleValues:>{}],
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "SaveOrPublishToCloud"], StandardForm]],
           TooltipDelay->0.25,
           TooltipStyle->"NotebookToolbarTooltip"],
          Annotation[#, 
           Dynamic[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "SaveOrPublishToCloud"]], "Tooltip"]& ],
         
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{4, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         TagBox[
          TooltipBox[
           ButtonBox[
            DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
             TagBox[
              PaneSelectorBox[{"Default"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "DocsIcon"],
                 ImageSizeCache->{20.25, {7.9940185546875, 12.2559814453125}}],
                
                BaseStyle->{
                 "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
                StripOnInput->False], "Hover"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "DocsIconHover"]],
                
                BaseStyle->{
                 "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                StripOnInput->False], "Pressed"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "DocsIconHover"]],
                
                BaseStyle->{
                 "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
                StripOnInput->False]}, Dynamic[
                Which[
                 And[Toolbar`Private`mouseDownQ$$, 
                  CurrentValue["MouseOver"]], "Pressed", 
                 CurrentValue["MouseOver"], "Hover", True, "Default"]],
               ImageSize->Automatic],
              
              EventHandlerTag[{
               "MouseUp" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]],
             DynamicModuleValues:>{}],
            
            Appearance->FEPrivate`FrontEndResource[
             "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
            BaseStyle->"NotebookToolbarButton",
            
            ButtonFunction:>FrontEnd`FrontEndToken[
             "SelectionHelpDialog", True],
            Evaluator->None,
            Method->"Preemptive"],
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "OpenDocumentation"], StandardForm]],
              "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]], 
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
           TooltipDelay->0.25,
           TooltipStyle->"NotebookToolbarTooltip"],
          Annotation[#, 
           RawBoxes[
            RowBox[{
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "OpenDocumentation"], 
                StandardForm]], "\[InvisibleSpace]", "\"   \"", 
              "\[InvisibleSpace]", 
              StyleBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarPlatformStrings", "HelpKey"], StandardForm]],
                FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
           "Tooltip"]& ],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{4, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         TagBox[
          TooltipBox[
           ButtonBox[
            DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
             TagBox[
              PaneSelectorBox[{"Default"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "FindIcon"],
                 ImageSizeCache->{20.25, {7.9940185546875, 12.2559814453125}}],
                
                BaseStyle->{
                 "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
                StripOnInput->False], "Hover"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "FindIconHover"]],
                
                BaseStyle->{
                 "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                StripOnInput->False], "Pressed"->
               FrameBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "FindIconHover"]],
                
                BaseStyle->{
                 "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
                StripOnInput->False]}, Dynamic[
                Which[
                 And[Toolbar`Private`mouseDownQ$$, 
                  CurrentValue["MouseOver"]], "Pressed", 
                 CurrentValue["MouseOver"], "Hover", True, "Default"]],
               ImageSize->Automatic],
              
              EventHandlerTag[{
               "MouseUp" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]],
             DynamicModuleValues:>{}],
            
            Appearance->FEPrivate`FrontEndResource[
             "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
            BaseStyle->"NotebookToolbarButton",
            ButtonFunction:>(If[
               Not[
                FailureQ[
                 CurrentValue["SelectionData"]]], 
               FrontEndTokenExecute["SelectionSetFind"]]; If[
               CurrentValue["PluginEnabled"], 
               FrontEndTokenExecute[
                InputNotebook[], "FindExpression"], 
               FrontEnd`DialogOpen["Find.nb", True]]),
            Evaluator->"System",
            Method->"Preemptive"],
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["NotebookToolbarStrings", "Find"], 
               StandardForm]], "\[InvisibleSpace]", "\"   \"", 
             "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "FindKey"], StandardForm]], 
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
           TooltipDelay->0.25,
           TooltipStyle->"NotebookToolbarTooltip"],
          Annotation[#, 
           RawBoxes[
            RowBox[{
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["NotebookToolbarStrings", "Find"], 
                StandardForm]], "\[InvisibleSpace]", "\"   \"", 
              "\[InvisibleSpace]", 
              StyleBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarPlatformStrings", "FindKey"], StandardForm]],
                FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
           "Tooltip"]& ],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}], "\[InvisibleSpace]", 
        PaneBox[
         GraphicsBox[{},
          BaseStyle->"NotebookToolbarSpacer",
          ImageSize->{2, 25}],
         Alignment->{Center, Center},
         BaselinePosition->(Bottom -> Bottom),
         ContentPadding->False,
         FrameMargins->{{0, 0}, {3, 0}},
         ImageSize->{All, 30}]}]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {Left, Left, Right}, "Rows" -> {{Top}}},
     GridBoxItemSize->{"Columns" -> {All, Fit, All}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], NotebookToolbar`Private`codeSelectionQ$$ = Or[
     FEPrivate`Switch[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], "SelectionType"], 
      Alternatives["CellCaret", None], True, 
      Blank[], False], 
     FEPrivate`Switch[
      FrontEnd`CurrentValue[
       NotebookSelection[
        FrontEnd`EvaluationNotebook[]], "CellStyleName"], 
      Alternatives["Input", "Code", "Output", ""], True, 
      Blank[], False]],
   ImageSizeCache->{553.5, {14.515869140625, 18.484130859375}}],
  Deinitialization:>(
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = Inherited; NotebookDelete[
     Cells[AttachedCell -> True, CellTags -> "NotebookToolbarMinimized"]]),
  DynamicModuleValues:>{},
  Initialization:>(FE`Evaluate[
     FEPrivate`Set[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationCell[], CellOpen], 
      FEPrivate`Not[
       FEPrivate`SameQ[True, 
        FrontEnd`AbsoluteCurrentValue[$FrontEndSession, {
         PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
          "OpenMinimized"}, False]]]]]; 
   CurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ToolbarCell", 
       EvaluationNotebook[]}] = EvaluationCell[]),
  UnsavedVariables:>{NotebookToolbar`Private`codeSelectionQ$$}]],
 Evaluator->"System",
 CellFrame->{{False, False}, {1, False}},
 CellDingbat->None,
 CellMargins->0,
 Enabled->True,
 CellOpen->True,
 TaggingRules-><|"ShowTitles" -> Dynamic[
     AbsoluteCurrentValue[$FrontEndSession, {
      PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
       "ShowSectionTitles"}, True]], "FrozenQ" -> False|>,
 CellContext->Cell,
 Initialization:>{
   AttachCell[
    EvaluationNotebook[], 
    Function[Toolbar`Private`toolbarCellObj, 
     Cell[
      BoxData[
       PaneSelectorBox[{
        True -> TemplateBox[{0, 0}, "Spacer2"], False -> ButtonBox[
           DynamicBox[
            FEPrivate`FrontEndResource[
            "NotebookToolbarExpressions", "ExpandToolbarIcon"]], 
           ButtonFunction :> 
           SetOptions[
            Toolbar`Private`toolbarCellObj, CellOpen -> True, 
             CellFrame -> {{False, False}, {1, False}}], 
           ImageSize -> {10, 22}, Alignment -> {Center, Bottom}, 
           FrameMargins -> {{0, 1}, {1, 0}}, ContentPadding -> False, 
           Evaluator -> None, Method -> "Preemptive", Tooltip -> Dynamic[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "ExpandToolbarTooltip"]], 
           Appearance -> {
            "Default" -> 
             Image[RawArray["UnsignedInteger8",{{40}}], "Byte", ColorSpace -> 
               "Grayscale", Interleaving -> None], "Hover" -> 
             Image[RawArray["UnsignedInteger8",{{55}}], "Byte", ColorSpace -> 
               "Grayscale", Interleaving -> None], "Pressed" -> 
             Image[RawArray["UnsignedInteger8",{{10}}], "Byte", ColorSpace -> 
               "Grayscale", Interleaving -> None]}]}, 
        Dynamic[
         AbsoluteCurrentValue[Toolbar`Private`toolbarCellObj, CellOpen]], 
        ImageSize -> Automatic, FrameMargins -> {{0, 0}, {0, 0}}, 
        ContentPadding -> False, ImageMargins -> {{0, 0}, {-1, -1}}]], 
      Enabled -> True, CellMargins -> 0, CellFrameMargins -> 0, CellFrame -> 
      False, CellFrameLabels -> None, Background -> None, Magnification -> 
      Dynamic[
        AbsoluteCurrentValue[Toolbar`Private`toolbarCellObj, Magnification]], 
      FontSize -> 1, CellDingbat -> None, CellContext -> Cell, Evaluator -> 
      "System", DynamicUpdating -> True, CellTags -> 
      "NotebookToolbarMinimized", ShowCellTags -> False]][
     EvaluationCell[]], {Left, Top}, Automatic, {Left, Center}]},
 DynamicUpdating->True,
 CellFrameMargins->0,
 CellFrameColor->GrayLevel[0.0],
 CellFrameLabels->None,
 ShowCellTags->False,
 LineBreakWithin->Automatic,
 FontSize->12,
 Magnification->Dynamic[
   CurrentValue[$FrontEndSession, {
    PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
     "Magnification"}, 
    FEPrivate`Switch[
    FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
     Blank[], 0.75]]],
 Background->GrayLevel[0.115],
 CellTags->
  "NotebookToolbar",ExpressionUUID->"f2db89ad-8018-134a-a3fd-26ccf586f44b"],


(* Icons: *)

"RunPackageIcon" -> (GraphicsBox[{
   Thickness[0.05555555555555555], {
    FaceForm[{
      RGBColor[1., 1., 1.], 
      Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, {
    FaceForm[{#, 
      Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 13.}, {7., 
     5.}, {13., 9.019999980926514}, {7., 13.}}}]}}, AspectRatio -> Automatic, 
  ImageSize -> {{19., 19.}, {19., 19.}}, 
  PlotRange -> {{-0.5, 18.5}, {-0.5, 18.5}}, 
  BaselinePosition -> (Center -> Center)]& ),

"NavigationIcon" -> (GraphicsBox[
  {Thickness[0.040966817134413774`], 
   {RGBColor[
    0.30196078431372547`, 0.30196078431372547`, 0.30196078431372547`], 
    Thickness[0.06145022570162066], Opacity[1.], CapForm["Butt"], 
    JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{19.94999885559082, 7.75}, {
     23.8799991607666, 3.8199996948242188`}}},
     CurveClosed->{0}]}, 
   {RGBColor[
    0.30196078431372547`, 0.30196078431372547`, 0.30196078431372547`], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
     21.440000534057617`, 11.1899995803833}, {21.440000534057617`, 
     8.539032459259033}, {19.290971755981445`, 6.3899993896484375`}, {
     16.64000129699707, 6.3899993896484375`}, {13.989028930664062`, 
     6.3899993896484375`}, {11.84000015258789, 8.539032459259033}, {
     11.84000015258789, 11.1899995803833}, {11.84000015258789, 
     13.840966701507568`}, {13.989028930664062`, 15.989999771118164`}, {
     16.64000129699707, 15.989999771118164`}, {19.290971755981445`, 
     15.989999771118164`}, {21.440000534057617`, 13.840966701507568`}, {
     21.440000534057617`, 11.1899995803833}}},
     CurveClosed->{0}]}, 
   {RGBColor[
    0.30196078431372547`, 0.30196078431372547`, 0.30196078431372547`], 
    Thickness[0.03072511285081033], Opacity[1.], CapForm["Butt"], 
    JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{1, 4, 3}}}, {{{16.959999084472656`, 
     13.339999914169312`}, {17.8799991607666, 13.199999809265137`}, {
     18.64000129699707, 12.479999542236328`}, {18.780000686645508`, 
     11.519999504089355`}}},
     CurveClosed->{0}]}, 
   {FaceForm[{RGBColor[0.6, 0.6, 0.6], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     7.960000038146973, 2.}, {17.189998626708984`, 2.}, {17.189998626708984`, 
     0.}, {7.960000038146973, 0.}, {7.960000038146973, 2.}}}]}, 
   {RGBColor[0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{5.960000038146973, 6.609999656677246}, {
     0.5, 6.609999656677246}}},
     CurveClosed->{0}]}, 
   {RGBColor[0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{0.5, 12.21999979019165}, {0.5,
      1.}, {5.960000038146973, 1.}}},
     CurveClosed->{0}]}, 
   {FaceForm[{#, Opacity[1.]}],
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{
     10.690000534057617`, 13.21999979019165}, {3.049999952316284, 
     13.21999979019165}, {3.049999952316284, 11.21999979019165}, {
     10.350000381469727`, 11.21999979019165}, {10.350000381469727`, 
     11.919999599456787`}, {10.469999313354492`, 12.589999675750732`}, {
     10.690000534057617`, 13.21999979019165}}}]}, 
   {FaceForm[{RGBColor[0.6, 0.6, 0.6], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{
     11.479999542236328`, 7.609999656677246}, {7.970000267028809, 
     7.609999656677246}, {7.970000267028809, 5.609999656677246}, {
     13.760000228881836`, 5.609999656677246}, {12.850000381469727`, 
     6.079999923706055}, {12.069999694824219`, 6.7699995040893555`}, {
     11.479999542236328`, 7.609999656677246}}}]}},
  AspectRatio->Automatic,
  ImagePadding->{{0, 1}, {1, 0}},
  ImageSize->{25., 17.},
  PlotRange->{{0., 24.40999984741211}, {0., 16.489999771118164`}}] & ),

"OutlineAttributesIcon" -> GraphicsBox[
  {GrayLevel[0.7], 
   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxdlCtMA1EQRR+fAqniUwLhs5RCCGh06TowiGJAVGxIwLJBop6pwaAxpEkR
KHQNSVNdgStyUTTBYMCRMDt7bzPLJs3kbufNmzkzs5vnVycX4865Y/mlVp5u
v18JM1tKbdKOd1Jbbtwtpjaq3qrufu8u5XS/v2z9u+14JTTxwv391dS6k47q
cvNTddR5UB2VntfU7/1GtdtrrKsunmb/V4uBvh9sqU7qnSC752sT/huq4+p2
ajtBs4L7tpBvzj7FL5mG3yPOMc4b4iY3pcDm4QZtzXN20K4gntbxijqjy8uV
7Hyc43L9j9tIB81F6x/d9Uo2nq8WVX/Vwe35cCG1Z+DWur+fT+0RuHUP3+ds
vsJD9Qy4if+srS8sDgq2fok/gfuUj+99O8tN+vZbM3zl/YzlJnMyZbklu42C
5SZ9m7Tc5P2wZrhJnz9qhttIgxv9yY3xQnAT/wKsaplD1f6zrtzk0fw8uDHf
FrhJHdOqwY31eXBj/R7c5J4xPQdu5Edu5OtwjvzdTxaX/XLMg3nuZdy4hzLH
WZ3YQ2ngMMflIM+NOsEe0t/s4STqUe3BzWMPPbhxD8mNfWW+3ENy4xyM6uMe
on7OkQe3FvaQ/Li/5Mv9Jn/ONftVxh6yv7nv1x/gzRzZ
     "], {{6., 4.730000019073486}, {5.300000190734863, 4.730000019073486}, {
     4.730000019073486, 5.300000190734863}, {4.730000019073486, 6.}, {
     4.730000019073486, 6.699999809265137}, {5.300000190734863, 
     7.269999980926514}, {6., 7.269999980926514}, {6.699999809265137, 
     7.269999980926514}, {7.269999980926514, 6.699999809265137}, {
     7.269999980926514, 6.}, {7.269999980926514, 5.300000190734863}, {
     6.699999809265137, 4.730000019073486}, {6., 4.730000019073486}}}]},
  AspectRatio->Automatic,
  BaselinePosition->(Center->Center),
  ImageSize->{12., 12.},
  PlotRange->{{0., 12.}, {0., 12.}}],

"OutlineFunctionIcon" -> GraphicsBox[
  {GrayLevel[0.7], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGZiAAOF1teCDkD6QeAOeQdkfpUIhB/TzwaiD5w5
I4fMV1jnLomsHp3P8E3jhz2I1oyRxMZfUGALph0e/lLAxofZD1OPzk/oP4TC
z0hLUwSb4/5QCqpeCUrLIfNBTkSR17ijANH/DKz/wNcVihD5KRC+eyJYXcfr
QBWw+a8DweI1IuvA/ANyrApQc1Uh+jVkkfnAcBFF5i849BUcPisK9ioh8zHC
H8QHAJfYXRs=
    "]]},
  AspectRatio->Automatic,
  BaselinePosition->(Center->Center),
  ImageSize->{12., 12.},
  PlotRange->{{0., 12.}, {0., 12.}}],

"OutlineGlobalIcon" -> GraphicsBox[
  {GrayLevel[0.7], 
   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0,
     1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZiAIMFM2cKOwDpChE9JRB94KuGGIh+ELhDHswv
sBUH0QvcH8qC6UNfwfyGmTNlHCBGSCDzHbiug/kPqkTkwPKaMVIgWqE1WwHK
l0G2z+HhL0VkPtB8aah5EsjyDOvc2cF8Y2MZZD4QgM1vEFnH7wDxD1jfArlW
IbD73R9C3HvoqzDUfah8Y2MwP0FkHVh9wsMqUbC8+0M+KF8YzT4OZL7C9cXC
UPvFof7mQPEPcvgCAMb3Tbw=
    "]]},
  AspectRatio->Automatic,
  BaselinePosition->(Center->Center),
  ImageSize->{12., 12.},
  PlotRange->{{0., 12.}, {0., 12.}}],

"OutlineOptionsIcon" -> GraphicsBox[
  {GrayLevel[0.7], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
    9.869999885559082, 5.96999979019165}, {5.990000247955322, 2.25}, {
    5.03000020980835, 3.34999942779541}, {7.119999885559082, 
    5.189999580383301}, {2.129999876022339, 5.189999580383301}, {
    2.129999876022339, 6.809999942779541}, {7.119999885559082, 
    6.809999942779541}, {5.03000020980835, 8.650000095367432}, {
    5.990000247955322, 9.75}, {9.869999885559082, 6.029999732971191}, {
    9.869999885559082, 5.96999979019165}}}]},
  AspectRatio->Automatic,
  BaselinePosition->(Center->Center),
  ImageSize->{12., 12.},
  PlotRange->{{0., 12.}, {0., 12.}}],

"OutlineUsageIcon" -> GraphicsBox[
  {GrayLevel[0.8], 
   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{6., 11.22000002861023}, {
     3.109999895095825, 11.22000002861023}, {0.7799999713897705, 
     8.890000104904175}, {0.7799999713897705, 6.}, {0.7799999713897705, 
     3.109999656677246}, {3.119999885559082, 0.7799997329711914}, {6., 
     0.7799997329711914}, {8.880000114440918, 0.7799997329711914}, {
     11.220000267028809`, 3.119999885559082}, {11.220000267028809`, 6.}, {
     11.220000267028809`, 8.880000114440918}, {8.890000343322754, 
     11.22000002861023}, {6., 11.22000002861023}}, CompressedData["
1:eJxVki9sg0AUxm+V12TZumOlKyOsqtXVTc5NU11Blqy21dScQaNxTfDVSIKu
xxaNZnrcd4+EIyEfP+79+e7dff2c9r8Txtiqf7X2T7TjjjSfTGvUxG8WF/4M
nLRPWstubdbrnGt93O9D/At0c0C9Mj+/a1XiBlZVN6d4cCRurtYgaR3qs9B6
zTKL5XZrr1cd+skmRn6UVvAXHNI58Sv5W1B9gTw/8ei/S+zDT1h8jLmkuIGv
382Q55EPj/JQn+2LpTRzdGk+qCd5DR+P/Iw41YbP4FgYzrIpxRs+Hjn1t7jf
r81tiH4qraY0X29cP6jzT/j6WyNe7Tj8sCae0D5wLuwiGJ2bM2brPvwDJRNz
Rg==
     "], {{6.550000190734863, 8.210000038146973}, {6.039999961853027, 
     8.210000038146973}, {5.710000038146973, 8.519999980926514}, {
     5.710000038146973, 9.019999980926514}, {5.710000038146973, 
     9.47000002861023}, {6.079999923706055, 10.}, {6.779999732971191, 10.}, {
     7.320000171661377, 10.}, {7.570000171661377, 9.640000104904175}, {
     7.570000171661377, 9.22000002861023}, {7.570000171661377, 
     8.690000057220459}, {7.139999866485596, 8.210000038146973}, {
     6.550000190734863, 8.210000038146973}}}]},
  AspectRatio->Automatic,
  BaselinePosition->(Center->Center),
  ImageSize->{12., 12.},
  PlotRange->{{0., 12.}, {0., 12.}}],

"EvaluateIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.6901960784313725, 0.058823529411764705`, 0.], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[0.6901960784313725, 0.058823529411764705`, 0.], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 13.}, {7., 
     5.}, {13., 9.019999980926514}, {7., 13.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"EvaluateIconHover" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.9450980392156862, 0.16470588235294117`, 0.054901960784313725`], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[
    0.9450980392156862, 0.16470588235294117`, 0.054901960784313725`], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 
     13.024900436401367`}, {7., 5.024900436401367}, {13., 9.04490041732788}, {
     7., 13.024900436401367`}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"EvaluateIconActive" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.8666666666666667, 0.06666666666666667, 0.], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[0.8666666666666667, 0.06666666666666667, 0.], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 
     13.024900436401367`}, {7., 5.024900436401367}, {13., 9.04490041732788}, {
     7., 13.024900436401367`}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"DropdownIcon" -> GraphicsBox[
  {Thickness[0.08333333333333333], FaceForm[{RGBColor[
   0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], Opacity[
   1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAEJBwj9wR5IKN3+KYbM99j2WRTEL8qY+BHE
N+DQAfMPKGz4AuInCEQwOUDEBUF0w/S8fyDxgqw9Qsj8BVOdwfpg6g98vwyx
52oFK4hWiEoBu0NBu50Lmb/g/XJeFPVQ9zrc9+cG0RIs0xSQ5S1M4xSR9R84
tVAJmf/id6YysnoBXSMVByT3wfgw98PUw/x34ftlKWT/7/DkkUIOn3sqbJLI
4YcSvgAz6FDL
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{15., 10.}, {15., 10.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 12.5}, {-0.5, 7.5}}],

"InPlaceIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
     2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAE1BwitAKX1cPBVHFDVo/Nh6kXQ5Dlw8NHV
E9IvAKV1cPAl0NSj82HqYeZqoMmj83XQ1KPzNRwATQEQQg==
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{10., 
     8.}, {6., 8.}, {6., 10.}, {10., 10.}, {10., 8.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"CellBracketIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], FaceForm[{RGBColor[
   0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], Opacity[
   1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 
     3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}}}, {{{10., 12.706999778747559`}, {8.706999897956848, 
     13.99999988079071}, {10., 13.99999988079071}, {10., 
     12.706999778747559`}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGqDkDix///ug4Qvhwy/4GaoSwyf8KhUhkQrdF5
EMwveKkG5u85lQjmJwjckAbRLjxMEPUSLGD5O1VTdEC0QONUML/igJcO1D4V
EC3CMk0NmQ9SiuweGN8h4akMmjyY32BvyofMBwIeFPkDpzjR9HOgmQ/jqyLz
7/n3qqLJqyGbB+Mj2QfmP6n5r4bM52hmUEfm//n/XweZf8O/VxfZPqT4QPAB
3QNHGA==
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"InitializationCellsIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], FaceForm[{RGBColor[
   0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], Opacity[
   1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 
     3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{10., 
     12.706999778747559`}, {8.706999897956848, 13.99999988079071}, {10., 
     13.99999988079071}, {10., 12.706999778747559`}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQGqDkDix///ug4Qvhwy/4GaoSwyf8KhUhkQrdF5
EMwveKkG5u85lQjmJwjckAbRLjxMEPUSLGD5O1VTdEC0QONUML/igBeYP+f9
cgUQXSzyThNsn4obiN+QaXtKE+oeEL+iWCQPmd8AdI8GEh/kPiVkvsSGIjBf
ZkMRTF4RKq+IzH/g36uIJq+ErB/GRzIfTAuyTIPZrwKiRVimqSHzQV5FDk8Y
3yHhqQyaPJjfYG/Kh8wHAh4U+QOnONH0c6CZD+OrIvPv+feqosmrIZsH4yPZ
B+Y/qfmvhsznaGZQR+b/+f9fB5l/w79XF9k+pPSE4AMAs2NxDQ==
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"NotebookSmallIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     10.}, {6.000999927520752, 10.}, {6.000999927520752, 11.}, {4., 11.}, {4.,
      10.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     12.}, {6.000999927520752, 12.}, {6.000999927520752, 13.}, {4., 13.}, {4.,
      12.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     8.}, {6.000999927520752, 8.}, {6.000999927520752, 9.}, {4., 9.}, {4., 
     8.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     6.}, {6.000999927520752, 6.}, {6.000999927520752, 7.}, {4., 7.}, {4., 
     6.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     4.}, {6.000999927520752, 4.}, {6.000999927520752, 5.000999927520752}, {
     4., 5.000999927520752}, {4., 4.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{6.5, 3.5}, {5.948000013828278, 
     3.5}, {5.5, 3.947999984025955}, {5.5, 4.5}, {5.5, 12.5}, {5.5, 
     13.051000595092773`}, {5.948000013828278, 13.5}, {6.5, 13.5}, {12.5, 
     13.5}, {13.052000045776367`, 13.5}, {13.5, 13.051000595092773`}, {13.5, 
     12.5}, {13.5, 4.5}, {13.5, 3.947999984025955}, {13.052000045776367`, 
     3.5}, {12.5, 3.5}, {6.5, 3.5}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJBKA0Bmg4QWgdKSyHzH6htFEOTFwHRXTnLtZD5SObA
+ELI/AbfJF408zjQ7IPxNZH5PQh7YPI6yOYhuUsIjY/iL5h7kczDqg6JD1b3
wL8XhY9HHJ0vhMxvSHgqgKZPAE0fjC+FzHdIeCqBJi+BbB6Mj2QfjK+JzIfZ
i2QezJ1SaHyEPwBJrTTM
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
      11.017900466918945`, 7.522599697113037}, {10.503900468349457`, 
      7.685599699616432}, {11.117900468409061`, 7.8665997087955475`}, {
      11.693900465965271`, 7.669599696993828}, {11.017900466918945`, 
      7.522599697113037}}, {{10.196900486946106`, 6.797599732875824}, {
      10.214900434017181`, 7.530599697493017}, {10.902900464832783`, 
      7.312599688768387}, {10.98890046775341, 6.449599623680115}, {
      10.196900486946106`, 6.797599732875824}}, {{8.096900463104248, 
      7.312599688768387}, {8.784900426864624, 7.530599697493017}, {
      8.802900314331055, 6.797599732875824}, {8.010900497436523, 
      6.450599670410156}, {8.096900463104248, 7.312599688768387}}, {{
      7.30590033531189, 7.670599699020386}, {7.8819005489349365`, 
      7.8665997087955475`}, {8.495900392532349, 7.685599699616432}, {
      7.981900453567505, 7.522599697113037}, {7.30590033531189, 
      7.670599699020386}}, {{7.698900461196899, 8.399599730968475}, {
      8.184900522232056, 8.580599665641785}, {7.807900428771973, 
      8.090599715709686}, {7.253900527954102, 7.901599705219269}, {
      7.698900461196899, 8.399599730968475}}, {{7.090900421142578, 
      9.283599734306335}, {7.936900615692139, 9.467599749565125}, {
      8.342900514602661, 8.889599561691284}, {7.664900541305542, 
      8.638599753379822}, {7.090900421142578, 9.283599734306335}}, {{
      9.499900460243225, 11.033599615097046`}, {9.935900449752808, 
      10.287599802017212`}, {9.499900460243225, 9.730599641799927}, {
      9.063900470733643, 10.287599802017212`}, {9.499900460243225, 
      11.033599615097046`}}, {{11.909900426864624`, 9.282599687576294}, {
      11.334900468587875`, 8.63759970664978}, {10.656900465488434`, 
      8.889599561691284}, {11.063900467008352`, 9.466599702835083}, {
      11.909900426864624`, 9.282599687576294}}, {{9.689900517463684, 
      8.445599734783173}, {10.43090045452118, 8.694599747657776}, {
      10.922900468111038`, 8.054599642753601}, {10.146900475025177`, 
      7.825599700212479}, {9.689900517463684, 8.445599734783173}}, {{
      9.024900317192078, 7.295599699020386}, {9.379900455474854, 
      6.776599705219269}, {9.379900455474854, 6.16759979724884}, {
      9.036900281906128, 6.755599677562714}, {9.024900317192078, 
      7.295599699020386}}, {{9.309900403022766, 8.445599734783173}, {
      8.852900505065918, 7.825599700212479}, {8.076900482177734, 
      8.054599642753601}, {8.569900512695312, 8.694599747657776}, {
      9.309900403022766, 8.445599734783173}}, {{8.101900339126587, 
      9.641599655151367}, {8.033900499343872, 10.325599670410156`}, {
      8.381900548934937, 9.855599641799927}, {8.398900508880615, 
      9.219599723815918}, {8.101900339126587, 9.641599655151367}}, {{
      9.619900465011597, 9.456599712371826}, {10.38090044260025, 
      9.727599859237671}, {10.358900427818298`, 8.918599724769592}, {
      9.619900465011597, 8.668599724769592}, {9.619900465011597, 
      9.456599712371826}}, {{8.641900539398193, 8.918599724769592}, {
      8.618900537490845, 9.727599859237671}, {9.379900455474854, 
      9.456599712371826}, {9.379900455474854, 8.668599724769592}, {
      8.641900539398193, 8.918599724769592}}, {{9.499900460243225, 
      7.020599722862244}, {9.042900323867798, 7.687599688768387}, {
      9.499900460243225, 8.30659967660904}, {9.956900477409363, 
      7.687599688768387}, {9.499900460243225, 7.020599722862244}}, {{
      10.898900464177132`, 9.641599655151367}, {10.60090047121048, 
      9.218599796295166}, {10.61790046095848, 9.855599641799927}, {
      10.96690047159791, 10.325599670410156`}, {10.898900464177132`, 
      9.641599655151367}}, {{10.151900470256805`, 10.182599544525146`}, {
      10.767900466918945`, 10.45259976387024}, {10.428900480270386`, 
      9.99459981918335}, {9.84190034866333, 9.78659963607788}, {
      10.151900470256805`, 10.182599544525146`}}, {{9.15790057182312, 
      9.785599708557129}, {8.570900440216064, 9.99459981918335}, {
      8.231900453567505, 10.45259976387024}, {8.847900629043579, 
      10.182599544525146`}, {9.15790057182312, 9.785599708557129}}, {{
      9.961900472640991, 6.754599690437317}, {9.619900465011597, 
      6.16759979724884}, {9.619900465011597, 6.776599705219269}, {
      9.975900530815125, 7.295599699020386}, {9.961900472640991, 
      6.754599690437317}}, {{11.744900465011597`, 7.90059968829155}, {
      11.192900463938713`, 8.090599715709686}, {10.815900459885597`, 
      8.579599618911743}, {11.30090045928955, 8.399599730968475}, {
      11.744900465011597`, 7.90059968829155}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQTPjvKqOwDprtP/FUB0zPotGiDaI/uWEpA+wLHQ
XQ3Ej5BMUgbSDd9k29Wg8qogWuqngwqITnh3C0x/+fQfpI+h4/R/sLoX+fsV
keUFpn2Sg/LB+i90Fsgjmc/AkDtNCuyOd2D7GRgcnsiC6Dl+DIpI8ge2x3rL
IevvZ7SRRTb/QKy3BLL9E8K9pJDdJzD9vyiI5iiDuD8n0BMs/2RWG9jdM8K9
JJD9DzMfFj6Tw73A9qCEHwDHmVas
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"GlobalContextIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{5.529399871826172, 16.}, {
     13.470399856567383`, 16.}, {15.419400215148926`, 16.}, {
     17.000399589538574`, 14.419999957084656`}, {17.000399589538574`, 
     12.470999956130981`}, {17.000399589538574`, 4.529000282287598}, {
     17.000399589538574`, 2.5799999237060547`}, {15.419400215148926`, 1.}, {
     13.470399856567383`, 1.}, {5.529399871826172, 1.}, {3.5803998708724976`, 
     1.}, {2.0003998279571533`, 2.5799999237060547`}, {2.0003998279571533`, 
     4.529000282287598}, {2.0003998279571533`, 12.470999956130981`}, {
     2.0003998279571533`, 14.419999957084656`}, {3.5803998708724976`, 16.}, {
     5.529399871826172, 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, CompressedData["
1:eJxTTMoPSmJiYGBYAcTMQMzAxMDIzMzAyIALYcrCRSAMNC6aOJDExcWjAE0E
vzim7NBF8ACkNQIAwjkF/Q==
      "], {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, CompressedData["
1:eJxTTMoPSmJiYGAoB2JmIGZgYmBkZmZgBJHIDDhCFsGUpTWi3D14TEBjIJMQ
BqY4siAmG5MLQQAMbASf
      "], CompressedData["
1:eJxTTMoPSmJiYGC4AsTMQMzIwszAyMDIDCXREKYgVmUDhUhyDO1cPqjChHLH
kydCavgABQEvDQf/
      "], {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
      3}}, CompressedData["
1:eJxTTMoPSmJiYGDIBGJmIGYAchjRESMzMx4RCBsugsZAI7EycKnEw8YlQhCR
agguWTRfAEkAtvcEFw==
      "], {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, CompressedData["
1:eJxTTMoPSmJiYGCoAGJmIGZkYWZkxokYGBnQGAQRMSpxqYGI4zEBWYokNrLJ
eBRg2o6mBZkBQchsTC5cBAAcZwSn
      "], {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJyd131MVWUcB/AboAISICASoSIREQHSMBQiJZIiw3xDS0IzgiI1QSN3xxgj
x4waWREuUvFlAoIhXhEBCREBeZPohjdEuMoVEQiREJAwRON+v/90tmd3ydnO
fudzztl+z77nec7OmRcWtTpCTyaTXZ7YtXVi08Sdd/PTHsi3zNfWRYVDrto6
OrJXe96v0mE/rlf5L0fdULrAXVuXurfjviJ7BWw/vg6WfTHTQ1tTvjuJ+3PT
zeAdmlK4UW4E+52ogyMt9GHT2GY4tUoGV6e1wdGbH2Bc8UUauKHxb9ir+dak
nF07Ageu72K/ADpETSdW3GO/ju7/5eglUoeWDsMpET1wkDed0UNP5AvX9v8p
tLOnblspBmH19l4+NzdaJr8ND+TchS3GxFY76XbD0QHYMb4PLranlyXegTPS
/4JDp/ULnWqr26Hf34GzLAfgQNPHc198L2ztNAQnbO2Gd5y5Bzte64Q1NaNC
m4fotuzKTXhw2X32W0NPbaRVyg7YZtU/XBfLaReVbvu+MwYr6m9IfPgN+u1W
OrlKA2/a8ACWv0rHaHR794fjXE9l7XBaFx38stRLi6/Dxz95CHu8RJf1iW2X
fw1WRj0S2mQ+3TFIj/6shoc/l+G90ONMT70vtiqzjXnGPSF0uQPt+ohWHGqF
F+/Sgw/Y0Sun6Aud/NNVOCxJbLk1vXO6ARz+QwuctIcONhd734wpsN83VyT2
MKZzU2m7L5uZ56ypsKEBrdwndefsaUKPJvwhcee4CjZ0NGResbTtMTo35jLs
7mKk034n6AN3myRO2kav9jBmPrd/h8NP0+GR9E6v6RInnaVX3lIKfcDXhHmF
Se3a/hucd562C6XL/Z8U2vBqI9x0kR5eS3cFmgrd2fQrPHqJVq6gjVeYcX41
NAht10Tnvkm7rzUXOq36EvNroZNekzqmvB4Ofm+GxB9dp8NfoeUfWMC+C+vg
rzulPvixJfMqqIUVvbTNi1Ib5tXAFZ9aCT3sQqsGpO76bCasOVYtsdKRHh2h
S49chE1irYXOnUPPGafT9lcJ7ZEwC060of31bZjP3kqh1+2mN1mIHWn0FOfb
txVwbDLta0Inm9kK7fzVBaEPptAT30dw89N28PGhc7Bp5mz27/6F4zk1d1IO
CqcjF9jDPjdK4Lgi2nkjvcdnntDWbWd12uBd+vA5elBVDOf7OcDXV9HVlWI3
NBbBLa8/I3TJW3RvHZ1dWwg/DHKEUwNoc6XYuyrOwA5rnhU6egnt1UxvLC2A
A9c7MT9vOkQttk/haaG3vv8c7OQptZUiH07ooPXc6JQIZ4kzeuiBnFM6rXai
C7c8D9cfVcC1/XSxPd263UXorPSTQvcP06m2tEz+AvP7MQ+2GKO3WdGO8a6T
snosB86y9IADb2bCTjmecEH9ETh78cJJeXPZIVhTs0inB5d5C22fnw67qHwm
Zf8wc7jkQhGcYhulrQkB7nM5jv/+H/0LX1pMnw==
      "], CompressedData["
1:eJyl2X9sE2Ucx/EbSOxAZASBIpBVnHiOCRUnVpxYUfFEkU7EdQJSBGSoSBHR
iogVESsOrIB44sQq4DphrohoUdEiToo/sJIFKxJy4MSqqBUX6MQxt7tb4jsh
T7LYf755Je3zfD5pe08ud95ds2+d3kGSpKosSWqdLa8D8+vszpYZV/sOap1F
Z30ypHVGjy7Mb51Sh19Nn7qodTY0N+tOj34Ejvf5U/6vrYk83ZnmZvvp3Pb+
NstVf8GOggbY7zgOh0ecgNOjG2FpDy3X/c31S07Cnkn/wF6NbukPa8eauX5z
1kVYf1EH2BPoCAeWnwFHVnWCc/IssK2SVqqzYbe9M1y2hQ5u6wKHis6C4yO7
6vZ+ZDhZS6eUs2ElmSO0e0J3oUMzesDxWedw/zSdntsTzpnfC7Y10UpHK+zN
7gP7y+lgt3Ph8Aq65f/BfH37Md9aWhrQX2hlcK7Qns20t9AGR50D2uX4Tlob
dT7zjcmD5XEXwI59tFI6UHf9AjPf5Ath/2FanS4LHU7R2px8ON0gtuQbBMsL
C2BH1sWw58zBzL+UDnQdwnw97HB0Na1VXMJ8uUNhyzraOvBS5q2inQWFQrtq
DE+80sy/9TI44BgGqx/QsR2Xw9ouB5wZfQVsLR4Oy3W0s+RK2LWf9mlFzDf1
KjgycwTzHRU7MftqoTPznMy/4BrddY2ndNubaVena+GyAO3rch2sdr8ejvUe
BSfW0Kn+N8CZEG2rVJgv/0bYWU277KOZb9hNcGCbYSVqOPLxzXCydozQKeUW
OPMFbRk7Frbtpe3jXbB7QjFcdpD2TbkVDtbToRnjhI78QifTt7HP3PG6Yw+d
Ms+P24W2NdF2fwmsdHTD7iV0WXYp7CsXO9jtDji0go70nADHVTrZd6LQqbW0
NGAS+8p3su9GWhk8WWj3ZsOOy8z+hR44OHwKHNpOR513CR3fSSdHTYVTu2lp
zDQ4J0Hbxk0X2rGPVkrvht0HaO/kGbo3/dVknn9ih1JlcPz3mXByzj1wukFs
yXcvnHOSlhfeBzuyZsHKYtp95v1Ce5caznvb7Nd1NhwM0uEeXji6mo73mQNr
FXQ69wFYWkfnDJwLy1W0o+BBWKmhPUPnwd6ttN/xkO4Kb5N5noodHvEwHN1B
x6/zwdouuu3+qs3SHtpaPB+W62hHyaNCu/bTnkkLdJ8zxOyv0eqRx+DwzIVw
y/0inJj9uNDaMTo9zw9bGmnrgidguZl2LFoEuzo9CXsCp3fgt3+Mvl0Ww4Hl
tNr9KTi8io71XgIn1tBa/6fhdIi25AVgayUt5z8DO6sNS5sMu+xLYc8W2jfs
WTiwTWy1qBwOf0zHRi6DE7W0piyHM1+IbRn7nG7fPWb/vbR9fBB2TXge9hyk
fVNWwIF6Wp2xEo78QsdmrYITabFTc1/QfVQ2+x2nLfNXw9Ymse3+F2FnRxV2
LaHLsl+CfeV0oNsaoSM9X9Y97aeTRn+VTq2tgDPnvQJbNohtk9fC9o20MvhV
2LNZbG9hSPeBDYb979HB4a/B4e101Pm60PGddHr3OtiaWA879m04rV3TzH6l
bwjtOUB7J1fC/sO0Oj0sdDhFR++tghO/09qcN+F0g+H4gNNb8m2EHVnVsGsx
7V36FqwGa3Q7D/1t5OmzWWitQux07tuwZR1tHbgFlqvEdha8ozv6qmFXDe0Z
uhX2bhU74HhX6NiO92BtV1R3wZ1mnz3bYGvx++2yXEc7Sz6AXftpz6QPhfZp
dGDqdlg9Ynh9P8ORmR8JHTsqtqUxprvf943m+b4TDiz/FFa71wodWUXHen8G
J9YYDr5kONV/l9CZEG3Ji8O2Stqevxt2VrfPLvvnui1uw6GiL+Fk7Ve6/b3M
/fd+DdvHJ9plZ5IuO/gN7Juyt10O1htuqMsYedN1sK1pn+77Vhp2L0nCZdnf
tcu+cjq0Yj8c6fl9uxxXDdcXm3nlg7on5mTM8+eQ7sSeE8bvZfcP7bI0ph7O
SdC2cT/CSukR3cqyE+b1/mfdsZvMz5/8VXdhZ8P+rn/8L6dzj+neFD9u7F/T
oDvvacPRHSd0q+f+YXy/fSfqz5PO+PaHtuuFbjx/+hfZ90tF
      "], {{16.999999523162842`, 10.571899890899658`}, {15.999999523162842`, 
      10.571899890899658`}, {15.999999523162842`, 9.071899890899658}, {
      16.999999523162842`, 9.071899890899658}, {16.999999523162842`, 
      10.571899890899658`}}, {{16.999999523162842`, 7.5718994140625}, {
      15.999999523162842`, 7.5718994140625}, {15.999999523162842`, 
      6.0718994140625}, {16.999999523162842`, 6.0718994140625}, {
      16.999999523162842`, 7.5718994140625}}, CompressedData["
1:eJyl2H1MlVUcwPETGjJ8uxIviiJDMWLI0IqUNDukGRkVGVNHRGap+ULAQJHU
fIwZEgIm5UsRGqGSQyNiRuTsIUdoZNR8KSNChkQtIFIkIOF273Oftr4bO7PF
P2efnfP7nvvH3Xie67csYeFyJyGE/y1C2FfbX4/VOk3aVn2Pj5t97bJaQwaz
9C232NfzB+sNi8tHR9nX0pQ8w1r6xBH2NSqs3OiJma0u9tU/46LDPy4ebl9T
3Dsczrk+0pjz7DUsnWIs/7Y2KhbWveNg4fcMLAOWGnZZYjr4WVgLew7WH1zO
8wtX8nzcKsM795nnV6+BRWo8LNMTYC0zkfO5STflCfVmPz8ZloUpsHZsPV2e
CuuVGwwXTehz9GpeguW5TbDe+DLPt2k83/OK4alxDmtDt8G6JQMWXtth6ZPJ
+cAsOmSH4Yr9Zm9WjuHTk/5y7F84bPj5Vof1F6sMb1h9w2GXelh4NMDSr9Gw
KHFYC276X9bDmmE5v4WO/JnzC1vVXvIL+3G/wmLNb4a3t5v9pDY6tf0/WU//
nc7shMXuq0rL/GtKa8XX6WPdht1D+s3vZ4/SoqpX7Zo+WJ67AWuX+unGAaX1
Fiv7bWIM+j1OsDYwRO2ht8K6q7Ph/ETTlmGw8HKB5WRXpbXA4UrroSPZnz2K
fmA0+xEWtR8bw/ui3Qz7l5n3LXWHxUoPOt5TaZnsBWtpY9nf5k1njVda7JpA
7/XhfQUT6SJf3l/qZ7jk2uDWj09SWpzyp89MgWXd7fSFAN5Xf4fSelMg+x1B
7HVNpfuCldZECO08zfDM0AHHfW53wmLcXUpL37vpKaGwFnQP+9NnsDcnTO15
9yoto2bzvkX30bFz6GX38/O8IA3r6we3SAiH5ca59NZ5sJY9n728h9g78DDn
Dy3gfMkjapdFsl/xKPvVj9O1UUrLb59QWmt40nBEhXlfczQsOhfBsnsxrDnF
0C5Psef+tNrecUqLyBWGz/eaTo2HZfE62PY8RZenwrqexvmzG2/KsbOs5v+n
TbB2aTOst2yBxdWtStuex5S2PZ/Rrq/Slgze77md9/lkqj35Nd4fsoP90Gx6
Vo7Sengu+xE72Y/exfmYPHrpG4P6yiazv+JNeu1uWCTvgeWWfbCW9TbnX8/n
/N536IIC9or200cOsF/6Ln28kPedeI/9U0X0mYPs1x1i78Jhur6Y/ab36dYj
7HeVsN93lD3xAedHfMj528oGdeJJ0+M+grWg4/T0j2F9RgXn53xCz6uE5YJP
2Ys6wd6yzzi/SqcTqthb9zl7GdXsZX9B59Ww99Zp9g59SZfUsl/2FXsVZ+mT
X7NfXcde7TfsNZzj+c6LPN/9HX3je847/cB5jwZ6/E+c92ukAy7z84c1c15e
GdT//F5he9+Cbe9PsO19iU5qo1Pb2dvcAeu5f/B8YRfvK/+T5yt7eL6ql67p
4/ylfs63WLk/MMQN+67OtGUYbHt/gG3vC3TICM6Hj+Z+tBv313pyP20s9+2/
D/0N06fEEw==
      "], CompressedData["
1:eJyl2n841Xcfx/FTUZJi5pa5XG7MTJL0W0pIJWtyl35Iv6QyMzM7M5PJfSZR
ipKV3JJkZrJU+jlZM7eZmbldZirJ0m9JkukcHXJ33q/PfV19ruvjXHL743zO
4/p8rutc3/d1zuf5D3P/j5ZuHiqRSDa+eFGtL/5OhHnbuajePLHXfLG6zJnx
ywSVZQudh6nWBuU4+PvaIarV8NoWW/KnHRLVerfXgPYlIdlPnF8se9vfg4Mj
Ol9Y9mv1eXhL5F8qHzPVxOdF5nSpzo8oGAHnHx+Ubc9owWWnyHNmjIQbz5I3
Omn/X94c+BqcVa+ybIvhG7BnJ+1HuZrB3bpPVftH3M1hfQOVJacrOcsu11jA
Nka0/8D7TXiuCVnX1xJebUbnza8zh1nS/lS/t162bMEt5t3W5A9arF62JDr4
bTjHdkDe285ZdlRqDX9vT/45YhxcP5XOv/h+wI8cBmPZPuOJcJAn7TucmwJX
rSU3LXGA3aV0/nEdZ8kwn5mwXzjt/+0ac0Qk2bHZEU6OJq+/NwvOiyF/HDT7
ZUti25hL42j/QKjTwNyQQL4YPudlS6q7mTuTyDeinGGdFKGf9Km35jYX2DKV
bLPTFXZKJ8/WmavWXnuYV2QKvUHfjXOc0Tw4JJt8MJ05PndQXlLkAQ8tJsuX
L4a31pAPdSyFFbcH5R/l7D7TayH/HrkMHtdGvtvLWyFbzn5/HQPyKI0VsG8X
2V57Jee5icyfdAu9TM9H7F295PdSeEcaroK/GiJXOdPEFy7WHJBPZfIus1gN
/zGSXJ/D3Daa3GK9hrMyvx9r6pNHT1zL2ayQ2dSQPHnaOs7zLjDPMCavnLX+
lRzl6gd7mZKTypgDLchZ7htgmZXQpyvVe5rfZvjWdHJFxPvwfHeyx5gP4ZLV
A/LqZN4fGoRwlqUyX11P3mf8EdyxkZyTMUBrB5Irs0M5N1p9DL8ZTH6Uxzwr
VOghE6RqbXCSeVkY2WrKJ3BwBHnRzDCxt0eR1xWrd6jzp3CGjLytlPf++eHw
uVhyboV6Fy36DP7PDnJVNe+mJRHwvd3kjjpmSbIcfdnySrZeFwm/sZ88q5l5
UhrZc9Pn8DsZQq+/p97SoCjYP0uOXjF/nkPO69w6OKfkkccO/wJuPCvH/R8L
W5WSb+bGwTtqyV028a/kEQXMWfVk2zM74KIGsvOMnWLXNsnRD/Xe5JQAt94k
h5fw3uG2C9a4R04v78cmreTjHrs5/1DFPK2dXOuVyPl2LbNnJ3nk1SQ4QE42
WbOHs92fzNFKsov/Xji1T2jvO/345DCFyp+1JotdMYKcELKP86EO5uZR5BNh
KWr9o5z5mS65LvJLWN9Agb7yVsj2w+ONhB6lcYCzaTyzm4kCfU2F15iR3RLV
e7neQTjMUujAFOZEa3JiWhrnTJN/wTm25PvWh+B2BwV6dhg2c1WgR0fg9z0V
6NGr+Yh7FhyzhPyT51E4fbnQV2qYT68iP/DOVuveeuaqtWRd36/gOxvI5td5
L7iVA/duJvsEfA0bBpE/aOG9NTgXtgsRem87s7uUfFT6DeezXczrw8k/R+Rx
vqpkjogU+mH0MTg5Wui+IflwXgz5te28LbW+hUvjyNN38fYYcxy+liD06mTm
ziRyiEEBZ1kqs06KAn0/IbZlqgI9533e7CTslE7+JZt3o9UpeHmm0I/y+nFI
tgJ9L4Tjcsmvn+RtNeU0fDif7HDu1RxTeha+f16B/p5nfSwhG177Dt5YJbT1
uiK1dmxmjqpRoKcX4S/rFOgnb2lQMXz8itCxbbxTQ7+HyxsV6CVz0w3yxfBL
Ystvk6u7ed+I+kFs3Rbykz5m6zayxrYSzkbDf4RdOoS22cl7tk4pvKqLvHgP
s7Sb7K//b7ETeslh+3nHGZVxPpjOnD2kW+Vjpj/BxZrk4qx+XDeSXGNZrtY3
c5nbRpP/svkZ1tQnDy/gbTypAjY1FNr2DO85M36BpxuT/1HE7GVK9neqFDvQ
ghxWwnuH269iy6zI33pUwWk25EtVvGu9foML7chaV6thpSN56Z0a2NatGz2v
hdcu6kbPmT/1IheE/a7WpXLmJO9u9LwOzl3ZjZ6r9zPZH/APq8k6GvWcTeOZ
r6wX2l77Mvx4I3leIvPIQPIKvStqHZjCbB5MjjS8CjuGknen8T5s0gB7hwld
mMn8QQS5zOIa5/oc5tgo8n3rRrEzZOSefN5jJl6Hz8YKbVbIXL2DPHlaE+d5
F5jv7sY8Zv0pdt9ectAl3lGuN+Cx+8lJZbyPuDfD9mlCn6lk9sggl3veFHtD
FvlKDe8H3rfgyBzMp573GN/bcEoe7/zjZIvrvKf63YHLTpEX3OrHjWfJPgF3
OQe3MHd9R44Ovsd5bzvz6EtCH5Xeh61KMZ8u3uURLbBzOflh9AN4ZSVZb3sr
vLNWaEuth5yn72LOqhd64Zg2uKiB7JvMXNuE5zV4JHbrTTx/Ku99xu3wsHvk
rzJ4nzN7DJu0Cl2RzTytndxo1cH5UR6zZydZMuGJ2AFyssFJ3lZTOuF/KoV2
OMec2kd+d+ZfnNcVM58c9oxzxQhyqHMX55hS3gfmP4WbR5G/qWDu1hW6aJEc
1jcgV1X34/FG5KYlCs6P65jdTMgaPt2cDa8xrzET2nrdM3b/W5Idm3kv3qSE
E63JfveYv7YVWhrUI/Yle3JsG+8Dob3w5amYTydzuwO5OPy52FpO5Opu3jei
+mAzV/KTPt7Dt0kmkh3m4/n2DIVjlpAPpmvAVWvJNZbD4d7N5Ju5zIZBQj+1
GcFZq4DZLoRsPEkLdpeS7c70Y79wssuMkWJHRJKXFvHe5KQNJ0eTI0qY82LI
CW6j1PpQOXNpHLnAQ4dzSRVzQwK51ms03Jkk9N1aZp0UoRXLx8CWqWTtq7xN
1ujCTulk+z/78YpM8lx/Pc7L7jCHZJMDAl+D43Mxn9Z+nJmP+YToq/XhDuYL
J8gnw16Ha06TS+XMLefJdZEGan2/tx8PLSbraBjCxiVk03jmKWUDsr32WM5z
E5nfrSCv0DOCN1WRA1OYt9YMyoWZxnB5I/lZvgms20Ked8EUXtVF9pn191dy
0CVmaTc5ytUMTuglJ5UxZw9RqnzE3VytCyuZL2qSyz0t4LqRQl+pYW4bTe6p
fxPW1Cfr+VrCpoZki+u8p/q9Bc8w5u1lSl5wS719AqzgQAtyUAuzzIocHfw2
nGZD3tuu3kel1vApO/KZLt4VEePgysnkBiXzrenkh9E2sNKR/HzIeNjAGfPY
zttCyxae4Eaevqsfz3cXeuGYCfC6RWTfZOZwL7Is1U7sPd5C7zOeyFkyYTKs
HYjzpdPg7VFK9NcBliSTh/rMhN/YTza4xjwpTYneOnJ2bGZ+J4P87qZZsH/W
gCwNmg1/nqNEX5lT8pToqxP87fEB+Vgn7+LwOfBPp5ToLfP1s0r01hl++p0S
vWXWvUTW2OYCv11KNhruytlmJ7NLOXm2zlyxfSqFXryH+eNqsr++G7yzlhxn
NA8+Wj8gH0znfcx0PlzUgHlkMdc2kWssF8CtNwflsJJ34NQ+stbVxfB4ox7q
ccdS+PLUQbkgzBt+7ECujVwGazmRb/cym7uStTVWwDPnk03imZd6kO20V8JB
ngPy3ETey/R84G1LyAEpzIeWkyMNV8FnVvH+bS15d5p6Hzbxhe9u6EF/mJ9v
JpdZrIbHBpHrc3jft14DTwwh9+QzL5SSzQrXwn7h5AfeG2Gn9B7cl4H/6zM5
xCAEVtzuwX3zav7S+CNYr4X8dQbzuDZyZXYo7NoxKMcZxcLeYb0q22unwgFy
cqMyD06Ofq4y9/9h/wVQ++c8
      "], {{13.057999610900879`, 1.9998998641967773`}, {11.557999610900879`, 
      1.9998998641967773`}, {11.557999610900879`, 0.9998998641967773}, {
      13.057999610900879`, 0.9998998641967773}, {13.057999610900879`, 
      1.9998998641967773`}}, {{10.05799913406372, 1.9998998641967773`}, {
      8.55799913406372, 1.9998998641967773`}, {8.55799913406372, 
      0.9998998641967773}, {10.05799913406372, 0.9998998641967773}, {
      10.05799913406372, 1.9998998641967773`}}, {{7.057999134063721, 
      1.9998998641967773`}, {5.557999610900879, 1.9998998641967773`}, {
      5.557999610900879, 0.9998998641967773}, {7.057999134063721, 
      0.9998998641967773}, {7.057999134063721, 
      1.9998998641967773`}}, CompressedData["
1:eJyd2H9MlVUcx/ED4S9EZDciU4ZEhKiBIhGo0U0ZMURmSAqhkiIyYuzGjDFm
pE8Y/kJjjDHmGCOGjpFOTY2IEbuRY3eMKZG/f2SkjjFGjiEXkVE9PO+71tnO
7oznn7PX/Xy/5497t/N9zn0145ONu1yFEH4uQkyuk88vAXPe1RctrX26sXqG
zJhcxU6Li+SUXMNiwTLD2rocvCgMv5NNvTmC+qDMKVmsj2S/VzJw6kpyl3Tq
86LJn2yZmovM7Hc3hf0PryG/som8Lhb/nKx2ZYzz3CuV/d+OZv99OfinYPLB
Iurf8yZ/thevMpGb9lMf6kW+sIT8JQ9yl6WzjM/bD/xlnnS8x2zDQzvHJy2+
nm/8nmKd7amRJ0RiSz0eSMKNxYZFaS5+tIO8Pg93bcNnd+MLH1JvK8DVm6bm
3j24OAkPFuGPE/H0L3BS/JSs+ZXgqFjyyMPYfw2OKcUzonFbLc4PpD/qIu6d
jS/YcOLwqMrC2okjHiutdXVh3wHyR92StaEe7Nbn3AN/4ImrkoX7DdzzG3nA
Hdmh93DLbaXF6vu47rrSWlwvPtRDvv2RZC23D+ddVruwH6d0Ki1KBuS85jE2
d+DGIRzUrrRoGlbbsw23j0jWbo/hkR/I+8bx3e/UHp5wam35TE/DFY3kFhNe
V0N+yheL8ilZXPLHfUfJuwPwlUPk/UG46cvnsjYSjGs07LJUsvAMwSVF5EFh
OLdQaREervYH+dgcIVk/j/DqPPLM1fi1XKX181tt92xcZJasn+d4aCeujMG3
PqK+LlayOBPn3C3x2LqF/o4E3JBC/mui7PsbcFmy0vr5K3s0GRdsoN5tM05P
wF6pkjXfNLVj46hfvFV2RDoOiaF+zXbJIi0Te5ude3wV/VlZsndn4wdvjTrm
iWStyoI7V6hdn6f2t6HYVoCPLxl1zAucHTDqOO9x5Hy1lxzEfj5K6/MBTzOR
bzgmWWwtw4Nz1M4ux9dm0Z9f4dxaJW6dho8fxydc1D5ZLVmcr8GlE3Yjb6tV
+9Mx3FknWdyox2kj+MFJydrjBrx2SO3xRrx4kP6ZpyVr3mdk+5/DXv3Uh5yX
rK28iJ8+VDu2Cd//nf6NzbLTW3DHXepzWmUXtKl95ib9+62yy9px5VVcfUmy
1tCBP+9WWly04cwubO2UrL8P4PU2fPOyZP39QO3wS3ioR7L+PoDnW8ndb8j2
uYVdW9Vedg/3f293zHvcfQEnP8DNZ+2O+S87tw/XnrI75rtkfb6rfbABlw9K
1uc/ttSTfzMku2kYb66lvn3EuS+P4uhq+u+Mye4bx4FV1A9PSNafuYY9KtT2
cJWszXPDw1+Rvz4d3z6Cw2Y6tRbtjtsP4HgPyWKzJ24sxhlekjWLCZfvVVp8
5i37oA8u3EN9xTzJ+n0Cby/Ap33VjttNf7OfU+v3TRxqwfcCJWv9QdgnR2lh
D1Z7Yhd2XSp7wTL8cAdeFKZ21zaltfBw2UVmXJyEOxJwVCz2SsV/Rtkd8xlf
f9PumMf4x+V2xzxW++QbODHDqfX5jI8G2x3zWLJ+/8T5gc9lrTRXdpUFb/Gn
/kQeXutL3pqv9pJ5atsKJItrhdjkTd67R/ZgER6bS/2zvf/L+n0a984mX1iC
bTPIIw8/n8+9oLR4/5jsrWW46u8Rx/zH+8ZHHOcPfrnSsDUozMtw5wrqs7Jw
5dUnhv2mmfi+Woz7vzWpmfzFXtfJ9d/z4Uitm7H+9/+cfwDX5hOE
      "], CompressedData["
1:eJyl1w9M1GUcx/FHhyd/TgRURI0pw0aIjqhsIxN/OfwDEtKlxtKILtS0hIgZ
oREPOpwn4p/IWea0yJgzIigyI2Y/R4bFzNK50xyyRkSKMcYQCP9e99wW7+32
bM7b7n573fP9fr6/3+7Pb0+EPce2crgQosf1/O+oHr6G60U6z44xPG94s7k3
PGSojYIwWOSN5/rzY7ieGsz1WCsdHcD6cD/YDBpJ+1tY3zOM6+13gpF/+gYs
mgZhs34AlnX97D98nf0Vvax3dLO+sIv1+f/Qr3ZyftZVOuMK820dzE/5i3nG
n+yPb2N9RCvrJ11Wtg737nEtsHHzAt3nhM0r52HZco52nmV/86+cd/IM847/
Qh87zf6qZrryZ+btO8X+8ia67Ef2F/9Ab2xkXs4Jeo2ptWn/ntef1sD85O/Y
n1ivd8K3zIv7ho45yvwHv2b/hK/clmE+6vystbC01NDiC62Nwc9h0VtFd33G
eR1HmHfpMPPOVLL/p0/pxkPMa/iEeTUfM+/QQfYfOMD+3fvZX/ohXbKPeUUf
MK/gfTpvr9bmqj3ePdWi5mW+B4vU3fTCXayftYOeWQYbsdv1ji5lfuQ2OtwB
m6FbOc+nRGvj9mZ6YBPze4rpa5Lz2ovo1nc472Ih88+9rb7vcb6e//uNsGja
AJv1b2kt6/Lp6jeZtz+P/Xve0HtnLvMcr/N8N+fQhdmcl79O79zXOC9rLedl
rGG+bTX7U1Zpbc5bqTzbX3lOFizjX6YftcPGjJf0jsqERcSLnDcxgx77gt6B
K3g+vss572Y63fcc519dyry2JVrLlmdpp435vz2jnGRV+c1p9MnFWpvHU+lj
T8PyyxS6apHWRmUy532UxPzyBewvm8/+4kT2r59L5zzFvFcM9XtdGqjy7HPo
FQl6L5sNG2lP0smzYJH4hN4J8VrLmMeZP/kx2Ax5hLbGqeu1B3nupw/TIhY2
BmfQvdO1Fl0xsNkxjf4jmvMuPaS1cT5Ka7MhUjk7RK0fmQKLdx+AzdJJ92RZ
NIEuCOO8vPFai3WhWsslIerz2TBWrc8dDcvoANiI9Gd9uB/s2n/Q/pZ7svQZ
obwl1HO/E7C8eCsI6yf+1dq1X/FqUR7muX/109V9sFHRe182Hd1cz72mfHCi
mpf+N23rgF37F3p+O+zavyhXL1DXP6JutDtnSo3KG6gd5X6/PmmY+yhPBbiP
JZ3u/az4fXqg+9i6WHlhkMrz7HfF6nHBQz1kf/v/fvgumDA3Ow==
      "], {{3., 7.955899715423584}, {2., 7.955899715423584}, {2., 
      6.455900192260742}, {3., 6.455900192260742}, {3., 
      7.955899715423584}}, {{3., 10.955899715423584`}, {2., 
      10.955899715423584`}, {2., 9.455899715423584}, {3., 
      9.455899715423584}, {3., 10.955899715423584`}}, CompressedData["
1:eJyl2HtsU2UYx/GzAVruHddyGRSso4xbuY0yxqjcLMPpACdVnJSbDEFWBLRO
hDrnrFxGnYgNIaOIk86JFA2hAsrGuJQQlwYWUhFmXQhWEkmFAQMkuJ23Gr7J
0oA7/7z55M15nl/fvOc96ek3P2fmolhJkgbESFLj2HgdXhVraBi2Lz47qHGU
NiyLaRz9ORNk29QeqXF0JO9MlOfPpsvOOH934IPWVt+Bparbsm0npssOnqyH
vRW3YHcqbdPfFPUOTpNtHnED1g+ug5UJ18X9O6fINub/KeY/nSTq1f4u5tdM
EP0NtbAj+TfYdiAobBkv27TvV1hXVgMrSy7CoeILsM/5i8izcJxsT1fa0fE8
nN36Z9jYIiBsGitbfe+cqD99jGzrvDNifsJo2YHjPwmPHCnyJp6C1bt9sEJD
h+JPivoJw2WXdz8BO+OOw9a2x+BseyWc0UpY6jlMtiHvKKxaUwHXry5vlv05
R2DPkh+FOwwR+S//ANsXPJrNWYfhjPOHYG31QVhR9b1Yj5hBkefBC5dXHBC+
oY3s9/1wuO+3ot4fCSK/Yy9sWf8NnJG/B9au/RqWrGXCFzWift1XsP9qaVR7
l0a3O+SGbbW7YfOFL/+Xbf7+4vk/VwKr/F/AUjodPrUL9lV+DnsNdMN591CW
jqmbtGWUCzYO3QGrtcXC3j6yXUXbYEXuVtGvrLfYf5eKmmVzzcewIeCAdZm0
6sxmkWdHz4dy/elCOGikyyduapadKRtha9IGOEO3XvgTldjviR/BCo0dDrs+
hIPxtH9bAeze8gFsL8wX61XQTayv/X1Yn5cHq9a8BwevrYOdl98Vzu0SOU/e
gbXVubBqBh1Oexv2TbbC7tS3RP7lnSLv1zebZfOI1bB+8CpYW7oSVibQ0q43
4OD2FbB3qwV2d6Ydjhzh+crI+bccNua/DmvXLoMl61I4XPdaVAdWRLfv6hLY
FcqGbbWLH8q2zA5N2nThVVh/bhGs9C+EfZXzYUfyPNFvWrvIeTQXVmtfgZUl
WXCo+GU40Iv2OefArqKXYOvGF5tlU4EJ1tlmC49vI/LfewFW5tKhlZlwIPw8
7LkyK6pdi6PbcWkmnF0zAzYEMmBdJq0+8xxcf/pZ5jfSgePpTXu4okl7jjwD
u1Joa9J0OPu7NNiwZxqsS6QVGiMcin8aLu8+FXbGTYHthZPZ3z6J/fMmsv/9
p8T+1jwWOV/p+tUGuOH/DOxZkgrbF4yHrcEU2JxFG2aPg7XVybCiaizzpNHB
k3q4vGIM7E6lnYeSYMv+0cKqluJ9sXcUbBgc3drSkVGt2DUCDvel/T2Gw96t
Otjdmba3HwabHx8K62OGwKq7g2DJSofrEtl/6UDYMneA2C/tYsXvm/UkLKVr
4ODUJ2BfZX/Ya6Adyf1g2wE1bN7X95FsHErry/rAypJ4OFzcm3mdvWB3UU/m
7UjbNvaATQUq5mlBq+91Y55cWrrVFQ6Eu3D9rnRmnkud4OyaOOGGS+4fUMIh
YwfYN7E97EppB9uS2sImXRtYl9gaVu9WwEoN7dnSCnbG0fbClrDZ3gLW58XC
wWv3tQ/an0Nbgn/D5ixaP/surK2+A0tVt+FwGu08dJP3l16HfT3++teKpvzf
/71Nn4l55xzxfWjz0dZyvfsx4nvSg9+X/gGHziSb
      "], {{4.48599910736084, 15.842899903655052`}, {4.000999450683594, 
      15.692899901419878`}, {3.559999465942383, 15.440899908542633`}, {
      3.1889991760253906`, 15.112899899482727`}, {3.852998733520508, 
      14.363899946212769`}, {4.12399959564209, 14.604899883270264`}, {
      4.437000274658203, 14.78089988231659}, {4.780999183654785, 
      14.887899935245514`}, {4.48599910736084, 15.842899903655052`}}, {{
      7.470999717712402, 15.9998998939991}, {5.970999717712402, 
      15.9998998939991}, {5.970999717712402, 14.999899864196777`}, {
      7.470999717712402, 14.999899864196777`}, {7.470999717712402, 
      15.9998998939991}}, {{10.470999717712402`, 15.9998998939991}, {
      8.970999717712402, 15.9998998939991}, {8.970999717712402, 
      14.999899864196777`}, {10.470999717712402`, 14.999899864196777`}, {
      10.470999717712402`, 15.9998998939991}}, {{13.470999598503113`, 
      15.9998998939991}, {11.970999717712402`, 15.9998998939991}, {
      11.970999717712402`, 14.999899864196777`}, {13.470999598503113`, 
      14.999899864196777`}, {13.470999598503113`, 15.9998998939991}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhgQcEClJXDwRdDE0fm4zMFFy6CpR+eju0MBTRyd
r4SmHp2vgMbXQNOPztdCU4/O10Djq6HpR+eroKlH56s5AADfWRMb
     "]]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{12.5, 14.}, {6.5, 14.}, {
     5.672999858856201, 14.}, {5., 13.326999962329865`}, {5., 12.5}, {5., 
     4.5}, {5., 3.672999382019043}, {5.672999858856201, 3.}, {6.5, 3.}, {12.5,
      3.}, {13.32700002193451, 3.}, {14., 3.672999382019043}, {14., 4.5}, {
     14., 12.5}, {14., 13.326999962329865`}, {13.32700002193451, 14.}, {12.5, 
     14.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{12.5, 13.}, {12.776000022888184`, 
     13.}, {13., 12.776000007987022`}, {13., 12.5}, {13., 4.5}, {13., 
     4.224000930786133}, {12.776000022888184`, 4.}, {12.5, 4.}, {6.5, 4.}, {
     6.223999977111816, 4.}, {6., 4.224000930786133}, {6., 4.5}, {6., 12.5}, {
     6., 12.776000007987022`}, {6.223999977111816, 13.}, {6.5, 13.}, {12.5, 
     13.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
      11.017900466918945`, 7.522599697113037}, {10.503900468349457`, 
      7.685599699616432}, {11.117900468409061`, 7.8665997087955475`}, {
      11.693900465965271`, 7.669599696993828}, {11.017900466918945`, 
      7.522599697113037}}, {{10.196900486946106`, 6.797599732875824}, {
      10.214900434017181`, 7.530599697493017}, {10.902900464832783`, 
      7.312599688768387}, {10.98890046775341, 6.449599623680115}, {
      10.196900486946106`, 6.797599732875824}}, {{8.096900463104248, 
      7.312599688768387}, {8.784900426864624, 7.530599697493017}, {
      8.802900314331055, 6.797599732875824}, {8.010900497436523, 
      6.450599670410156}, {8.096900463104248, 7.312599688768387}}, {{
      7.30590033531189, 7.670599699020386}, {7.8819005489349365`, 
      7.8665997087955475`}, {8.495900392532349, 7.685599699616432}, {
      7.981900453567505, 7.522599697113037}, {7.30590033531189, 
      7.670599699020386}}, {{7.698900461196899, 8.399599730968475}, {
      8.184900522232056, 8.580599665641785}, {7.807900428771973, 
      8.090599715709686}, {7.253900527954102, 7.901599705219269}, {
      7.698900461196899, 8.399599730968475}}, {{7.090900421142578, 
      9.283599734306335}, {7.936900615692139, 9.467599749565125}, {
      8.342900514602661, 8.889599561691284}, {7.664900541305542, 
      8.638599753379822}, {7.090900421142578, 9.283599734306335}}, {{
      9.499900460243225, 11.033599615097046`}, {9.935900449752808, 
      10.287599802017212`}, {9.499900460243225, 9.730599641799927}, {
      9.063900470733643, 10.287599802017212`}, {9.499900460243225, 
      11.033599615097046`}}, {{11.909900426864624`, 9.282599687576294}, {
      11.334900468587875`, 8.63759970664978}, {10.656900465488434`, 
      8.889599561691284}, {11.063900467008352`, 9.466599702835083}, {
      11.909900426864624`, 9.282599687576294}}, {{9.689900517463684, 
      8.445599734783173}, {10.43090045452118, 8.694599747657776}, {
      10.922900468111038`, 8.054599642753601}, {10.146900475025177`, 
      7.825599700212479}, {9.689900517463684, 8.445599734783173}}, {{
      9.024900317192078, 7.295599699020386}, {9.379900455474854, 
      6.776599705219269}, {9.379900455474854, 6.16759979724884}, {
      9.036900281906128, 6.755599677562714}, {9.024900317192078, 
      7.295599699020386}}, {{9.309900403022766, 8.445599734783173}, {
      8.852900505065918, 7.825599700212479}, {8.076900482177734, 
      8.054599642753601}, {8.569900512695312, 8.694599747657776}, {
      9.309900403022766, 8.445599734783173}}, {{8.101900339126587, 
      9.641599655151367}, {8.033900499343872, 10.325599670410156`}, {
      8.381900548934937, 9.855599641799927}, {8.398900508880615, 
      9.219599723815918}, {8.101900339126587, 9.641599655151367}}, {{
      9.619900465011597, 9.456599712371826}, {10.38090044260025, 
      9.727599859237671}, {10.358900427818298`, 8.918599724769592}, {
      9.619900465011597, 8.668599724769592}, {9.619900465011597, 
      9.456599712371826}}, {{8.641900539398193, 8.918599724769592}, {
      8.618900537490845, 9.727599859237671}, {9.379900455474854, 
      9.456599712371826}, {9.379900455474854, 8.668599724769592}, {
      8.641900539398193, 8.918599724769592}}, {{9.499900460243225, 
      7.020599722862244}, {9.042900323867798, 7.687599688768387}, {
      9.499900460243225, 8.30659967660904}, {9.956900477409363, 
      7.687599688768387}, {9.499900460243225, 7.020599722862244}}, {{
      10.898900464177132`, 9.641599655151367}, {10.60090047121048, 
      9.218599796295166}, {10.61790046095848, 9.855599641799927}, {
      10.96690047159791, 10.325599670410156`}, {10.898900464177132`, 
      9.641599655151367}}, {{10.151900470256805`, 10.182599544525146`}, {
      10.767900466918945`, 10.45259976387024}, {10.428900480270386`, 
      9.99459981918335}, {9.84190034866333, 9.78659963607788}, {
      10.151900470256805`, 10.182599544525146`}}, {{9.15790057182312, 
      9.785599708557129}, {8.570900440216064, 9.99459981918335}, {
      8.231900453567505, 10.45259976387024}, {8.847900629043579, 
      10.182599544525146`}, {9.15790057182312, 9.785599708557129}}, {{
      9.961900472640991, 6.754599690437317}, {9.619900465011597, 
      6.16759979724884}, {9.619900465011597, 6.776599705219269}, {
      9.975900530815125, 7.295599699020386}, {9.961900472640991, 
      6.754599690437317}}, {{11.744900465011597`, 7.90059968829155}, {
      11.192900463938713`, 8.090599715709686}, {10.815900459885597`, 
      8.579599618911743}, {11.30090045928955, 8.399599730968475}, {
      11.744900465011597`, 7.90059968829155}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQTPjvKqOwDprtP/FUB0zPotGiDaI/uWEpA+wLHQ
XQ3Ej5BMUgbSDd9k29Wg8qogWuqngwqITnh3C0x/+fQfpI+h4/R/sLoX+fsV
keUFpn2Sg/LB+i90Fsgjmc/AkDtNCuyOd2D7GRgcnsiC6Dl+DIpI8ge2x3rL
IevvZ7SRRTb/QKy3BLL9E8K9pJDdJzD9vyiI5iiDuD8n0BMs/2RWG9jdM8K9
JJD9DzMfFj6Tw73A9qCEHwDHmVas
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"NBContextIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{5.529399871826172, 16.}, {
     13.470399856567383`, 16.}, {15.419400215148926`, 16.}, {
     17.000399589538574`, 14.419999957084656`}, {17.000399589538574`, 
     12.470999956130981`}, {17.000399589538574`, 4.529000282287598}, {
     17.000399589538574`, 2.5799999237060547`}, {15.419400215148926`, 1.}, {
     13.470399856567383`, 1.}, {5.529399871826172, 1.}, {3.5803998708724976`, 
     1.}, {2.0003998279571533`, 2.5799999237060547`}, {2.0003998279571533`, 
     4.529000282287598}, {2.0003998279571533`, 12.470999956130981`}, {
     2.0003998279571533`, 14.419999957084656`}, {3.5803998708724976`, 16.}, {
     5.529399871826172, 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBghWImBhgQcEClJXDwRdDE0fm4zMFFy6CpR+eju0MBTRyd
r4SmHp2vgMbXQNOPztdCU4/O10Djq6HpR+eroKlH56s5AADfWRMb
     "]]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJpIGZiAIOGQmtFByCtcE6SC0TnSzopgOgUvf+8yPyM
+dpCDkjqV4TKi4Dofxs+gPkF5zpEQfSv1kwlML+iSgxEz/DiUgbRBtP/g/kT
Tm5B4S84Ha+CzLeYwKCKrN8gtVIV2XwFXgZ1EL2jpQbsHgNeBh0QfaClRgaZ
33H6vwYy32P3ci0QvaESQgPltaHmaSLzA6QYpJD5Bo4bxdDkRZDNg/Fh9sH4
QP8IIvNNahJ5kc0Dhi87sn0wfr7kIUVkPkr8AADwA1w3
     "]]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGZiAIMFddaKDkC6wVpeBERzW38A88O2dIiCaKnJ
mUogOiCuSgxEL7vCqQyidZoZxEH0hmtbUPgHbsSrIPMj5jKoIusPKKpURTbf
QYpBHUTPyqoRAstLMWiB6AVZNRIofEcGTWR+Al8vmK+QBaGB8lpQ81D4E0wY
pJD5F6Y8lUCTl0A2D8aH2QfjGzQzCCHzCx4/FUA2DygvgGwfjB/zuU8BmW+U
UwHmswRVCILoIJnVYP6Tsn9g81HiAwC26k2O
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAIOEtSfVHID0Ad+kf/ZA2iN4qRKI79B/iB9E
B6wsBvMnzHYRQOY35DwH82HqGw54CYLNmRSlDKIL7LcKgeg9Nj0Q/mQJYRBt
sPQuKt+fXwVZPcw9AmyNXEA6Yf6j5xC+IQeI31DWJqGOxGdYYmGmjqSe4ca0
D7pQ86RA9AUHJT2w+ydLSIPdu7IYlR+8VA9Z/YZJUfpg+QNekmD/2PRA+DnP
JVD4s10kkNVvcH8ojuweaHjC3Xt0ccFfeyT/QPmo4Q8AV3RhUg==
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3., 
     7.956000328063965}, {2., 7.956000328063965}, {2., 6.456000328063965}, {
     3., 6.456000328063965}, {3., 7.956000328063965}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
     3.189199924468994, 15.112600326538086`}, {3.852199971675873, 
     14.36460030078888}, {4.12419992685318, 14.60560029745102}, {
     4.437199950218201, 14.781600326299667`}, {4.781199932098389, 
     14.88760033249855}, {4.486199975013733, 15.843600273132324`}, {
     4.001199901103973, 15.693600296974182`}, {3.5601999163627625`, 
     15.441600352525711`}, {3.189199924468994, 15.112600326538086`}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}}}, CompressedData["
1:eJyd2AtUTGkcAPCJhDy6Wto8NqOlDWGyKJJu6DQebYOoaDObZLTJrLWZbW17
oyjWmjZW3mOtbeyGYT2GDcPSDlo72pD30KLymjymIbH3/v/jHN/Z78yhzql7
fuc+/t//+77/991bt4TZ46c3FYlETvyvO/+niQh+zBf8mrP8kc2b5cT+38U9
b/UVnFOkmilYcvBFf8GmhJQZgi0urQYKZjrKpzfGOtm7AYI12eGfCJaveX+w
YHNQ0FTB5j5DgwXLtd5TGmPNPGmIYEO8R6xg9khUqGD2VEOUYEPUrDDBXGbt
eDh/91I0nNekDYPzC0cnQ38cru8pmOu8fz74KtcBvP0MB/ePVrQD264sAIvi
3KA/h9dkwfX7Itu86t+WwtE2KPdFCH+UdmjdSjCTlFQvWD2vSxvBmsISm2C+
f8Ciyi1gZt84sNwrG2yclAKWhMrB8tlKvN83DmxZPBfvZ2LAgSvSwMq6CW/k
HI2KsKkoHWy+GonxjmeAZSVjwNozHNiwLfyNbLmygDBbk4X5rByB8ZrkgtXz
Q8Cebksxn8QgsKLzMsKiJRvxepM32Oy8GywOdgUbvjGCdVtr66A/vz1JOKag
FMzk3QNX6UxgTlUNlhwsA1um3gSrTpS/lY1nz+H4hV/HePcvYv59r4A1zy5j
/h4XwBaXa29lrmsljn9DOdjU+ybmc9ME9gy8jfmUllItH1nt0DrZHcznNyOY
nfkAx3/tMXDOF7WYzwID1RWZjxxasaYO80kuxng/P8V8xunBtl31ON6Dd2P8
ww1vZf3z5m2hvQ8KweIh7mD1lrXggnldwOYpyxtlX7UYzI5YClau8wbrei0G
i/b4gMXuC9/IsiO+hAv+6oXtfZoB5tcTsOh6Os63hxKqlcY0sOFFf4du0Wog
2LRjTp19/cF8VqVivH5BVOsykrE+hgY7tEoagvkkJWH8qFDCMbPCwFxEAtWa
L8PBlgHxVFdljwLLu0zGeBsiCBt+icT8mk6iml9fMb8746iO+WMCYc3fEzG/
sghwYFUsmDkwimru8RSquU1huD6I4gnLOyZgfjmhYG2PRMxHGUy1zT/Jodlh
CrAhejCuD5NSwJKQgVgP01LBGh9/qhWzlQ7NrkjD9j/xxfPHM7DejonB0pos
jJfvSbXauohqTXp7bI/bUsL8+o/zPYHB+v5gOdXKUa2xvgbkEZay+YTVY1di
PUta4PyOWYXj7emM9T19NdW6ly+tUO+frSWs/3o9YX5/wvl+ux4s/WET4YIf
N2P/na6j2rx9C86HPY/Avr8XElb+uRXHe/0DsOGfX6k2Zd0BtzBvIyy7u4Ow
xrYTxyPlNrjKeTdhSbu9OB4TKsHce3qqmaBrYGPPA4SZQcWYn/clcMzwQ4S1
HxmotrQ8D7ZMPko4cMYxzLe2DON/XkLY+I0R53/Faat9/6daYjgJlheUEtb+
dBrzKyzB+DoT4cCDZYRzTpRjvsuPUm06ew7nX9ohsOeNCsLy+xdxPn58AOM/
u0yYfec61lfYXnx+10rMx2+X1b7/Y/vbb7fa93vCipHV2N76rVb7/k7YFneP
av591Grf/wnz+z22/+QmjJ/5iLD4uyfY/p3rrfb93qH5/R/zW73aat//CUsP
N2B9cSvB6lMvqRYr8sAV553cXrf436ZgdeQyjG9pRlj3vDlYFJCL9dvS1aH5
93mw0isb43drS7iiDwM2N8vE+h3iTlg/3gPM3puPz5/qCdaVq/D5n3YizH8v
YD7Fc3F9WOjl0Pz7Cea3WYnrxTpvwnptd7BlSQquD3t8CPPvI2D5HAU+/4If
2BSbiOvBrb6ElQ8lmE+onGr+/YNqnW8cXi8NwfhXI/H5348B898HWH+XosHc
mAA8XxWL1/f/EJ8niifMtJFj+zv1o5rfb6k2OPXG9bBHImHJMAW2p9oH15vR
yWCNyZtqfr91aGZaKpjRe2G8r+YQ5r/ncD5t7GS177eEOY0K59MiD3x+UTpY
luqO+RzPoFo3sS3VujMcYf57DedTsCvGr8kizH+v4Xzq7tIos2w+zp+LT5/Y
6x/zm5uPbu3PwPU+/mDJ2CSwrLbsMfSXq4u74Kro/fC9rQ/Qw/miiBtNhOOr
+vTTb3CG89ru+H2Ue8QF+u31/3/8Bxmmtvs=
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], FilledCurveBox[CompressedData["
1:eJxTTMoPSmJmYGBgBOJ0IAaxGZjAfAzEyMyMiwtkw7loDDQSKwOXSjxsXCIE
EUFD8HORxZFdCwCoJgQJ
     "], CompressedData["
1:eJyd139Qk3UcB/AHwrnmmjB3a4FJRR3QIlpFRmsGYTQQ0SatRURrTuJozQkq
IYdCRBOJkBYhmbhIiSMjIiRaHC6PQvBI1yTwPELbcRw3OIgjfoVc7CvdPe87
73vW7p597nWfz/v7PPf889znXt1O1Y7bGIbxWrpGly5v5t8fN8rzH7BOGMXy
/mTnmmUzNzNr3uO65xckbE9cHxezrS0bWMO29TmHH9tRpU18tvNjanlsX52r
4rLN9FpWQr7EvIJt+4zRC+ad6Qz0/eP/9mP3HYo5tqPMshmwTjrNtl0SOAX9
Is4EWMuMs50vnhqF/J9jbpivuzYC86m9wzAv6hqC5z3f5gLXtvwBeWH17ze1
ku9NPFY5QHVETj/YN6sP7Db8xjZTo70E1iT9Cn4s0QF5gfIiuEP+C/h4RA/k
1aHnoS8L6gbz7+4CD4vPQb6a9zM4x+cncPjsWcgPue00Mz8OnaE5P6znB6q5
nTawy/49uN3WCq5q/g68u6EF7i+taQZzPv2W+LDEh8y3lX0Dziz8murNeQ00
M6HZX0F/MONLsE1fDzZp6iCfoPoCHJxQC/aOPQlujfwczjOGfQaOC7bCPBNQ
Db4iOgYu5x4FG7w/ASsXjlAdNF0JXhz/GHx5pAJ82vURcf/9HOLDAxZwrKMc
vNBRBu5r/wBc2vQ+1emnSsAbaw+BA63F4Pmqg+BeixlcYi4CpxW8C47OLQSv
3fMOeMZYQLUzPR/coDsALk7ZD9ar84hDZFxi//hc8HTMPrBDkQM+tf5tsFmW
Dd4u3Qu+K3A3eEqSBb4gzATX83dRXcQxgbXMTrB8/i2weMoAnhx7E9wznAEu
vJIOTu19g9ik4BFHXkgDi7p2UD1+Vg/ubtsOPtmiAxc0vg5OqddSvf7Ea2Bh
dSp4rPJV8LnyFPCJkleoTj7wMtgv6yXwqEEN7kx7EVyjTQLnJW+jWpOkIm6N
4y9//14AC5RbwSPRW6jukCeCrRGbwbnhCWB16CawLCie6mGxEnyMFwvethgD
Dp99FsybjAYPuaOIGbWA2D70DPjo4Abw3ssKqlXOp8FhPXIwt/MpsMseSfUZ
25PgPQ1PgKU1j4OvVTwKbiuTEW/V+RJXFj8CziwMByfmPQwOzQ6j2mfXQ+DB
DCnYpn8QXJEaCjZpQqjepAomPmIUErcI1v4nf8gNABu8/cHKBQn4vuk7wYvj
4lvy1X2iG+f3CcH97QLwxloeeJ31dvB8FRd8ybIS3FjKAR8yr7glh5jFxLNG
L7Befd2X7YuKuf9lk0VCfFA2A17aR8AbHviLav/AKarf40yAJ8fcxK3H/Ze/
H8Pg7jYXeGn/INbY4oiZVadXe6r9nsYb73ex6Q5P1drivDzVmtO5ylMDi9xk
32x0SgVLNV8+uIV4oWM1OY9Z3kebXSI/tsn++Q9h1p5Q
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], FilledCurveBox[CompressedData["
1:eJxTTMoPSmJmYGBgBOIqIAaxGZgYGJmZ8SCgajQGQYRLJbI4mhpMKTzW4TKH
IBvZZDwKcDkPqzIIQmbjEQEANUwEpw==
     "], CompressedData["
1:eJyl2HtQVFUcB/BlQV0QaUVCwpVwI8DlEW+U5wqC8hRRacMiYlYzJECjbUMk
EpGXCqig8hAQSARChojIjNAwN8cYQiZBXqIQMOSDN4JJ7Dk043fGYWT2zuz9
zeef3XP2/s733nPXBIX57pJnMBhysx+92ROTQQ7t4auK/NnKV2YaSKvYQMSU
1u8ibhOzH+2Vk9aeKEfi1NhLDGkt3JTPk9YKSy9iYd/02hft0D0F1mx7Ch5t
niQOXOtB3NgwAa71QJ9xGQdHOI4Ra692I/ZePwrmmY8Qxyi4EAekPSTmTzoR
n3rcR/xkkE980+s+HV+Xw9z8usEn6u+BQ2q7wJtrOun4btsR61R2gJ+XtoPv
FrWBJVxq9g0b4vOcu+Bo9VawP7sFbKF0h8633Ir4eGgTne95C+L+pj/ofNPN
iJ2sfwebVEnAHFP0JO8GuEnnN+K8RBPicq3r4CSNerA4/VewUBXtm3KN/h8H
jYmNE6+CWbF1Mrkn6hdwnagWXDbyMzgz/NXM3mdILAq+Ag7q+wns0H0ZrNH2
I3i4uYa4Ucgjbmj4Abzf8Xt6fQX6xApGleDinEvEJp66xIdOl4MD0r4Fr0su
A6vFlYKfRJeAO6cv0uvvqPNS3xTP75qxYvCpxxfAoQPfyGT3B0Vg3Y5C2l/m
XGJVfzTjTgG4vfE8WOKFns07mRyzIQ/sb5tL+0lPm9jK8hy4OjeT9scqLWJu
fAZxnQqHOG/ohEyOGkwDC3pTwa5BaLOulFdyDFOT+K8tx2RypdtR8HHnZPAe
+yTwRutE2q/jK4m1TBPAyuXx4Eke+u8LR8B1+XHg7KzDYFF6LNg35RDtv4HX
5/Lra/D4zFfgspGDYGHfAdofHSvm8iISbBiAXiz4EjzaLAbf34qu9fgCfMZF
JJMjHD8n9vlz+dz9NwJsV/0ZmGeOXmy0Hzx6cR+4oSAcfEUbXZITBj58OhQc
mPYpXT/XX6PjSQ4Bq8ftBSsw5/dwdPC87pz+BHx5bA/41OOPZXLowG6w+4Nd
dP3VLCPW6RCC2xuDwIWbPgL7234ItrIMoOupbCn9vsoPwM9L3wf/o4+WcHeC
q3L9waln35PJIScFYNdj74ItlNDceD/ws5gd4JbI7eD6iW0vtUmeIs2jiPmd
N+QLjhzcCvbr9QE7BaFNuraAlVu9wVM70P1NXgvytVue4Ao3dJKzB1hc5058
7+QS4u2X3cBO1miO6WbwJG8TuEnHFVyu5QLOztoIFqc7g31TnMB8ZbRx4gYw
K5YPnt2/0PyKX0TzXeQAzgy3Byc8tAOLgtE+QluwQ7cNWLNtPZglQI82rwM3
NliDaz3QJRIr8JFrluDAKxZg7/Vom2rzBVm9wozm6QF5modG6E5dU/CtAhNw
cc474AxNdLiaMdhTxQisyzIEq8UZgJlM9E3xWnBMiB54XeDbYFV/HfCjbW+B
2xu5YIkXNTtMbi5P14BT67XBIbVvLsgCW7RrjRaYW7ka/KyUA24pWgWuytUE
53HQx8++AQ4+qQH2Y6PNlFaCtePVwSoK6P5/1cD1EyvA54ZUwZGDy/H3e9ng
qR0q4OYty8AVbsrgo85LwbvtlcBO1opg4yoWmGOKrstfBC7XQmdnKdD7x/Xn
M44M6fOhPNg3hQnmK6MnZ2b0X3RPFDrh4TNwRDDaRzgN5ndPgTXanoJZAnSZ
ZBxsVz0Cvqc7RFwfNLOE/xL/v99Te5LBktbWop3k/RC8X/oPzMnWZw==
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     10.470999717712402`, 16.}, {8.970999717712402, 16.}, {8.970999717712402, 
     15.}, {10.470999717712402`, 15.}, {10.470999717712402`, 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJyd139M1HUcx/G34A80UQkRkewkQiKkizAForqMGCGy240RM0aGkSEjIqNG
zvF2xgh/lPPXzB9oTBkxREJ+anpHiHSeiEhIhPxGQX4IIqEpUXevb3/cd/vM
3bjt9tnjnu/P53vb7W7fc4lJ1MRaE9EU4/Oq8WlFeHC6w8sq46qKO+1lXK9l
xcw1WaUo/8Xk9rDUmSa396fpTebehdbohoYbsIOBsD8pqdlk3edfjStN3WN3
O3yl+YHJuo78W5Mx5TSM4bxR79u43n6NZCffHvRttX+ZzJ7nLDJ/FiqzKlo/
ivPUFb24/uogWBcTeAfdr/I+enK10LqlKqF16SF9uN788yMm06EamKz8Yc5T
92N+qOQeurZeaFWLj9BcFzGA+csFw+jdTbCqzAvmsahBXC87dwjvx6Yd5r3u
FlnlvP4u9kdlDuI8zcAQ+rvOMMUmDlvkwR19cMXECM5LTenBeUq7Mdi1rxt9
5/GHmJ+3wTJnuv6N/RNdXTivIBvm/nUwVXo8Qm9q6URvyIP50lqhqVf5WGQq
auzA/KNCyVnhMNmuGMf893Xt6IpymLaECU2vBPwjMm80tGE+UCv1yGDJEasm
0N+pasV8XBVMPquE5s3B/2J+ibZFZPrOANOcAKkfD6OXTOvjspvoZ+ok33lV
7KrwKSZTY2GzufmiEubGRpmpb60V5gvz/jQ3H/OAebxFaNqV3QTP+dAa3uwK
k0u3zOyzYSr2f3L8D3NTxGKYgvqE5rcPNWI+MmEa7O0IU/wwTIp9N9C3bJqO
PtsOpt1jFpke7WrA/qyUGeg9s2AqHoepIf13uDrVBi7YWg8PpM20xHx04rqs
79gM84TNLDjlYR263U6YP06G2XXuU+amFXtgCh+5JjIHO8zG/FuJUn//IEzK
gVpz8zNxMCc426LPun0VTs0Umh/EwLTHZY65+cQJmG611Zibr0fBVOo+F9Y1
XUHX5wpN+REw3fSah3643gDfLRCaMtQw03I79C9rLqPblwpNH4XA7Ob/NKyp
1gu98jzMbwbCFKKyR/eq+E1kjqqEedEbUk8Mmg/bnKsWmbfqYRpbKTN3FV3C
/L5QB3Nzdi1Mdd5SL9csQL+QXyUyGxpgyvOUmX/IuYj51khHmYebYUp3k5m/
yKrEfqsPFopMMQqYHDplZvdYJ1h95Fdz8+tOMPn3St3zQAV6aPwiuCNDi/7N
qDPmf6IL6DX0LPq60XPo07Yr0NckSXa0XYL+2t2zmPfYLdkjHqYAexeReUFv
OebDDghNU2Mlr3N6Dv1eRxn2bzoiuS1aaE5TuGJ/TXOpyHQwC+azkTIb75dK
MJ/r9jz6fg1M53Nk5lpPN8xvqy1+ko33SzB15ks9Wl+EPuq9FH11EEwzioUm
v8ozsJOvu9BW/oU4T13xgsg8VPKzyLQ+0APzLT4y8+WCAswnV0u9zAumb0Ne
NDcfqoH5ZO7pJ5n2usN0Su2Jzify0bX1kj91kVwXscwSG++nTsncbJOL8zUD
Sjh4+CRcv9UHLm78EQ53XDkpbzQcgzNd/SblJdqj8I08/0l5VeI8+OvFZfAe
90Tpe7FdgdfbM7S4L8lXx8O+lfeXqfB7tR+v65SHsSY4r8EarV+O/SPT25b9
/3nCrZHvwbL/M/8BzhurfQ==
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     13.470999717712402`, 16.}, {11.970999717712402`, 16.}, {
     11.970999717712402`, 15.}, {13.470999717712402`, 15.}, {
     13.470999717712402`, 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3., 
     10.955999374389648`}, {2., 10.955999374389648`}, {2., 
     9.455999374389648}, {3., 9.455999374389648}, {3., 
     10.955999374389648`}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5.558000087738037, 1.}, {7.058000087738037, 1.}, {7.058000087738037, 
     2.}, {5.558000087738037, 2.}, {5.558000087738037, 1.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], FilledCurveBox[CompressedData["
1:eJxTTMoPSmJmYGBgBOIKIAaxGZgYGJmZgUJoJBzh4iKLo6nBijDVENSFXwuF
lqIx0PwOCiMMcWRBTDYmF1kcAAHxBIU=
     "], CompressedData["
1:eJyl2A9MlHUcBvDjX0KgELvshsiQGN3ootMoyUGeQAUCA+UUCRgQyC67kAjp
KiIyMsKLQVBAQkKgQEZAoKK72cmIbnTRjW50IuFlF38mKMQRh4D03u+lzWe7
/TYWG3z32d57ntvYbs9u28tH9x+24XA4VszvFuaPNYf8iC6UPylibt3YVifz
dXupS2i+ui/G7M13qmmIuOO5OEfz7ZqbJh6dMW40X+W8iVjbGe9ivnt3LhK3
65LBJkMqOHQ2jVgrYy1ZSAfLVw6DdQ4S8LLzK+BQ91cxz0tKnHh5LY//Gljn
fxTsuef1/2Vp1Bvg7vhjxGNLrDkZb4Ijs98CV+S/A1YU5oH1xe+CbcvyiTOD
7rJ5tQXgqpbjYP35QrCg5wSxKZ91zkARWDFcDLYfl4Nj5kqIK0KWiKfkzcRn
+1ineF4lDj65zP7/Lw2D3ZXXwaK+EbB8cBSsHdVTbTL8YdH9atbtNuPrstZh
ArzsPAkOdb8FlnhNgUv501R3+d0mFm9aYfNe/BssjZqjujTWCO6Knwfrkv8B
e0tNVIdlL1Jdmr+EfYXL4JHiFeLRaNacsntg78pVqrMarB663xUt1uDuNhuw
/rwt1bYKOzC/5wFwzoA9uErrAFYMP2jRGWWsDXpHsP24E1gwvRGcs+hMddWq
C9UC3sNgscdmsMz7EYueGWRd48sDG55xA9sHbQELQ9ypFodvBcuiPcC9CZ7g
idRtYCeJF9XCzEcx78RjVE/I+cQy7j2L9q/2BR86/Tg474wAXHfuCXBvhx/V
LleE2Ne7Hfv6d2Cf5imqG4f8waqRp7Fvciex9cG1vjsB4EPzz1JdsLQL3GgV
CFZtCAJzubupDnATUV3oEwxuFoSA1TtCwbzdL4BTIsKI5ZWsi/aFg7+J2wvW
JEVQbUyLBPOORIHTc6OxLy8G+47vo1pTtB9sKokFi04dwL76g9jXFAdm9hUx
9xprd2UCWNSXCJaok9ZlZm+Bu/0yib90W2Udfww8kpwL5ktlYGbfgJl9A2b2
zbrM7B3sq3wPnNXwPtXMHsL8tg/AzD7CPsWH4BjVR8Q+iZbN7CdwlfZjMLOn
wHr9STCzr8CC6U+wb66E6prVUrDS7lOwwbEc+1wrqBbwPsM+j8+xz7cK+4TV
YKegU2BhSA1YHF6LeQdOU61MqANPpNZjn+Qr4vbatb7MBrA4pxGc9/YZcF3B
WXDviSYws2/BLuUtYP/qr8GN51rBqo5vwTMX28DcK+3ggN4OcGL/d1TP3LxA
NXfyIubf6QanzF8CFy5dBjdbKTCP+z040E2JeZ5XMc+nB2wM+IF4143Vtc/7
PnDg8z+CUyJUYE3ST2BjmhrzjvwMFmUNgNNzfwEX5WmoNpX8CpbUD4HlTb+B
u1p1YF3nNXBo3wjmqX8Hlw6OYp7uBtj71k1w2OyfYOmCAfNW/gIzAwKf95qi
uoI/De72u43vZ88sPh9rBNtmLID5UhM4MnsRnCW7C9YXr+DztRzX+61oswEz
ex8co9oAZvY/cY8nZ7v5MvsfzOx7sGzRGay0cwXHeGzGPF8evj7a4z8LLblA
0+nC3AJx+nXyfYw6uHWT+cL3M/8C+AapUQ==
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{16., 7.404200077056885}, {16.009000000543892`, 
     7.395200076512992}, {16.020999999716878`, 7.393200077116489}, {
     16.029999999329448`, 7.38420007750392}, {16.38400000333786, 
     7.0302000641822815`}, {16.647000074386597`, 6.76720005273819}, {
     16.755999982357025`, 6.417200028896332}, {16.73499995470047, 
     6.072200179100037}, {17., 6.072200179100037}, {17., 7.572200074791908}, {
     16., 7.572200074791908}, {16., 7.404200077056885}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], FilledCurveBox[CompressedData["
1:eJxTTMoPSmJmYGBgBOJVQAxiMzCB+TDEyMyMxoaLoDHgJC4uHgVoIvjFMWUH
HJHtDHgAUtEZmKGNJosLAWUBOHkF8Q==
     "], CompressedData["
1:eJyV2Q80lXccx/FnkmpqZSrJzL8MISwzM9NTmcxkN5OZVMokZDIzMzOPScmE
JJma7kym6E4hmgmZZI5hMclpM1NrZnYnE7c7dp/n0fZ8du75nTiHe17n/ft9
n+dwPD/ONdgZ7hk4i6KoRxSfpxRfVCjug5mYsqYVr+JouSn9n8PPy8AWcrUp
oecaLKDMBK4L0VYR2jruBHhRfv4sofuuFKkK7d9jPhvm/SYBSzc4zYX1vvXg
9j3O84QWH3Z7VGj9glYwc0GkDvN6vefD9X/vAYsf71sA84wDHhOaThhZRLL4
SJQGyf43EzRhv0ryYoWZq2OV/P0sVl8itL5JGrjv5aylQvtv09ISmk7UXSa0
+KgYzHxZqC001Wq2HOb9WAKmVct04P6W2j0B3ewi0czzjrpwvcjGJ2F9kqse
zD/WQjTzU7cBzBv1NZyJ65btMAK/ELQC5u8MM4b9UVIwfSDyKXBJjAnMuyQn
muqIN2V//ofD3lHquuWpK4WmLReak8ysyUS/kWMB86N1LGH+cYNVME9SAK6r
M7EC37K0hnnjpWjdShu4vpXD07B/bQ2Y9qJXQ9/VQDQd42IL8z9qBtOlbc/A
/suedtC7ujj7Dtjy9yvrfVZoZv52e7BN4HNg71AHoet2D4Pp2IjnoR8aBTPn
ZY5w/ca4F6B3U07Q5WprSGYeSyF7dQYN+32y10IP0V4HTtdbz9pwy91Jbn1+
PpgpN3aG3lSEHpK8CJ60cQEb2W+Aec9Uo33rXWF9mPNL0OObwFSmmxv0C6KX
oTdfQw/3uIM1+zayHuw4p9zGAR5CM8/eBlNuwa9A9xtCvxkuAh+J2gT7C8fB
TFWsJ/SWSTBzM+FVkimpqhd0lWQwZZK2Geye5U0ys03rNegRuWAmUdeHdbnr
Xr5ni8FMkdHrJFPVhdhbzXzBP5aAqRGrLdBVy8CUlp0fyYzZReyOjlvBHrXo
yMZtJDNJrtvBx1rA1BkPf9bv167i+1cd6J+6dwitOJ92ksyo/YBde0cAdPMB
MOUU9AZYNEi04rwLhB4lBTMHIndBzx0DMyUxQdBr5UrtbPf735wHVIKFZsaS
wJROagh0y4WhJFN0JnbPJXugB+ago3XCYP3BPKKpEwZvQpcUoOtMwmH9tTOc
558t5vsty71CK85PsnUrI2C/lcNb0NfVgBkvOhJ6UAPRivPzbeh57lHQS9vA
VIPnO9C7upT6ulEIv/6OT7TQjKwXTC3Y/i50vX60TWAMyZTzHezeoe9BDx4G
M7ERsdDTRtHi6PfB52XobuoD1uJcU96DiWi5WjzRC1PQBgsY8OoMtItmAtgn
Gx2i/SHRcSfQ6XqJ4Px8dLnxPnBTEefdGr/IOfeYJ4F/k6AnbfaDNSrQRvYH
wHbVaFenZPCWenSY80Ew04TOdEsBF7Rytk4+xbtS9BHRzdfQvd6p4OEeNLX1
EFizj2zjgDSw/W20W3A62G8IHR6ewXp8MoB3VWwmuGUSfTPhCFiqmgVWSSZ7
sfpRsEka2kEjm3VdlCFv9yz0dq1jREfkovfp5oCzxejTRh+DqwvJbjXLBY9Y
HWedMdR3n7NqGdrs4gmwo+MnRHvUonesywNHNqKTXE+Cc1rILvYQg2s60O1e
n7IWBZzk3d+N/ss3n+g5P6AtBj4DbxosAEdJTxGdHFmozPo3tvLOHUOfjfkc
XCtHfxdfRPSAymnwWBJ63rwzYJ1UtOXCYqLpTM59oid4R+ucBafkoSUFEnDn
mS9YlzbdkHGeKC0Fq9ueI/rJSrS1w3nw+hr0ZrqM6KAG9Hsu5eDUZs7vOn3M
O8+9AnyujewGzwtE3++tBOv1V4Gd71wk2jv0S9Z0xWvKHTyMjo2oBqeNosXR
XxFdJkM3xtWAu6lL4MFEpZ5rsZS3XK2WaBfNenC6XgPr9vzOienz+GvwDfNG
oock6CmbK2CNCvQK+yZlztE+MjF9XpPt6nQVHObcDI5vmpkz3b5h7Z+xaWL6
fG4Ba/a1gv2G2pTZes6iienzs53ohBF04XgHuCr2uxm5ZZKzNO7bcc5L1LvA
G7O+586n0dTx6fPuOrjIqGdGHrHqnZFnl3EW9c/jbT7w88NY//Wr95RaNDgA
3hl2CxwlRR+IvM09L9v235t+nv/KPY9cXuTtuWQILCkYBteb/MF6b82sh7Nu
5Z/c76ft5bHp590oa6qY4S3rvcf59OY/OC+z81vJrk9p/5nzlbga1sxgRSdn
1TIdc/bVdarein1V/L3Pdmr+X4PTnuLmUXenWD/4/+aBF42XSk0FVnz/Vgjf
b/m//13/4P2EXQ13hdaPcRkVuv2y55jQpb/43BN6t03ghNCd6++Ay3cPy4Q2
jI24D/fHvX/0DztEdSo=
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
     9.071999549865723}, {17., 9.071999549865723}, {17., 
     10.571999549865723`}, {16., 10.571999549865723`}, {16., 
     9.071999549865723}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{9.878700256347656, 2.}, {8.557700276374817, 2.}, {
     8.557700276374817, 1.}, {10.057700261473656`, 1.}, {10.057700261473656`, 
     1.8209999948740005`}, {9.878700256347656, 2.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5.9710001945495605`, 15.}, {7.4710001945495605`, 15.}, {
     7.4710001945495605`, 16.}, {5.9710001945495605`, 16.}, {
     5.9710001945495605`, 15.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     12.313200950622559`, 1.1920000314712524`}, {12.230200953781605`, 
     1.1090000346302986`}, {12.128200948238373`, 1.053000032901764}, {
     12.027200937271118`, 1.0000000298023224`}, {13.05820095539093, 
     1.0000000298023224`}, {13.05820095539093, 1.937000036239624}, {
     12.313200950622559`, 1.1920000314712524`}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], FilledCurveBox[CompressedData["
1:eJxTTMoPSmJmYGBgBOJLQAxiMzAxMDIzoyGgCoKCIFPACFMl7RCp1uFST7mz
yTOBdu6h0BlEOgCijJjkgd8EANUTB9M=
     "], CompressedData["
1:eJyl2ntM1FcWB/DxUcWCAhULFClQQUBBQKmLlOqUTAlLiJ0CKiIqKiwQpMAi
iw/UUbEiUjrLsuwsmZBZijhatFNFwSoLFC1QfAyKSoUipVOWZVl2llIYYdT9
cb7bP25yQyg1msknMcw95557zz0JTjtTwuJmiUSiGcK/8JkikfCX/tzZ5yEW
PupeGRJNfLbqrTwnPmXqsqF1wueBnniy/qOMHyfcJKkmi4szhydcaPnSiglL
laU/TfgL6znk7spycpf9XHLq7XPkIRUs6r1AfvWMCVn1/CLZbdk8xqHeL5O9
ravIO7ss4Yb75Nh5tnCKnvw7X0d8/yrLkQnn+TsxLqmBU0MXkb9seAPribMl
twUtwfcftCePhTrj5xc5kc20rF8PdyHXXXAhez9kvbFzKfLT6E5O2O5K1j/x
5DqrZ3Lnx7mRZQYfcmWSO9nCcjX5q8Ff50PzvfB9p0LIzmdXkbVztpM7G/3I
miPp5MGQNSv+Xw9k0R1Ye/EAeWmbP2O/TW8h/y2HySGPWUdvDcB+6I6RZbve
JsuNJ8jliWvJjovyyNUDsMZTTv46ZR3jriFYHFQ4Jc98Kka9bFOQrbLeYbz0
BZyaqUQ8RwMZH82XoD7q1eQiy3cZB5z/LeILqCH3BK9Hvq+0knN0Yagfn94p
uTg+nHFFPxwT0k+uS45gfE8P63cOknXpG6Zk2YEh8sgI69eebUT9FI6QV8g2
If8VY1yLZ0VO6rAPYfHN5+S9eZtRP9/OHJ1wrnnUpFYWwDEjc7jWLNqC+BaY
kr9UsO4riUZ8ruZT8pjTVtSjeCHZ7DTr1922Ib5Ia/LKT2Fxmh1ZsmL7L3KC
bwziPelA3l8Fp5YuGcV9t2NSq2pg0TVXrh3D4/B99n6juF8Scf4OB5N9ZyTj
PHwXOSUHZbOOmvsB1jMWTd6dC4sW7hjF/ZOC+3d5HFku/2WuLErFeZMkkpts
03A+opPJj5V8SzPSyAMOv5/Uz0thoR+O4n5MZ7zaYw/qo3wf18Gf8W1RexD5
WZnBePdlWPXoCLng2h8Qn/74lFy2NpPxlXq4ziSX/LVkL86HU/4o7nfWgyH7
EN+aAq6F9wNjq/f3I76wIuSnDbZIKh7F/X9gUgc/hjXHSriO3pqF+lSWjqI/
HGRc2AtrK8uxvqcyxG9dRU41zUY9xjSQu+1PIL/n7jIW3hdT8mznHOSz4xHi
P8PabdlJ1M9wB9cB52G9WTfXod65jGMuwTIXHTn76inkb20f14qAPK5VGwfI
6lrW1wM/Qj5T9ORbN2HtiWHycEs+49nvfYx6URnINvdgfbUR8W6Qcy1rFRko
3nbW0i1/ZBzTBVv0z+Y6W1eA+pg5j2tF/J8Qj918riv6Ye0qS/L15ELGWj0c
E7qI3J3+Z66F9yN5eIS1yf4i3J8H7ck2z1h7yP6CflHkxHXALAXXmgsu5Nh5
f2W8Jw8WN7qTc8yLEc8Tz2lZV6LEet39yY5uJajvqEAD+pEK5+lUCDmrCpaV
rec6z/9vjFU1sEVNGFkjLmV8owFWPdjIdXvQJ4h3MIrrvmZYeL+SjaFljM20
cIzDLrLvw9Oo19/EkyWbyxG/NIkc2ck6YfsZ7E9iCtdZPbDwXibL49SMVX2w
8H42oN+eZXxjEBbez1y3p53D+lsOkweGJ7cx81PUp+4Y2WIcFt7X2N9DFYx9
Z5znWnh/k4OzWUfOvYD4POUG9HdYGlSI+OWfoV62KchlCzWMK4tg4T1tQP/+
HOuVq7huV/ItV5chfoeLjEWfwI71agP69yXU8zcV0/Luy5ex/pcvk6vrq1Cf
EfX4vjtX8f+PNzOWltw2oF9+Mamd2+DuK60G9MtrOD93HyD/j1lHb73OtUXf
N+TUbtayXTVYr6jLgP7Juizx7+h3tj1cVw/AWp9e8q2UWq6F+YPcOcRan1GH
87ZzEPl5ytoqqx7xHBji2u0FLMwfyM/RLxmHvtSAeCrGkI8cvoV5A/kxvcE4
Ox8W5ounlB/Lm4zVhbAwX3Bdbf0V4llgyvWtYljuak7utm9krFfBwjxBnu3c
xLUwX5CtzrB2W9aMeNLsyAHnWYd6f414TjqQYy7xHVO6hJy6uoVx9lVYmB/I
ioBbjNW1sPz+cvL1wNtY/4AX1v/eXdS7vR9Z3K7F/sVLyDm6e6g3RSjXyvj7
WK9GyrWmH45pjiDXJbcxbtPD+u8iybr0B1zLxqLJhhHWZvsfIp6FO8iLn/Gt
WR5H9pY9Yiye1Y79kCSSIz7kWxudTE6Y9w3jvXlwTEYaOc/8MdfCfIL8FLDW
LOrA/pTvI99QsG6z60Q8tQe57iuBNY+OID9O3zI2Ow2L9ce5dnTrwv1mkov8
fAqnOuWTJSueTOqIz2GRfwHy49uN9YcVkbOqWOf5f4f1JxVzraqBhXkD+RH3
ML7RAEuVpVy3B32PeCrLkZ9m1sZQHdZ/+xzXZlpY1HsB+Qn/gbFkcy/q37qK
HNnJOmH7P9BvvK4h/h6+pcG1ZHlcH2NVHyzMR+TKpH9iffsaEV9aP85nQQvW
n/kv3Kfn7jIW5iOyxThrx0MDWE/HI66Ds/+N+h3u4Dpy7iDq16ybvDuXb2E+
Qrzz/8NYLoeFeYhctlBPVm8cIDfZ/pfsl6JHvErWAw5D5KYTw4yF+Ycs+oS1
xdIfsb5qI9fOZ+GcVtHYhH09hhkHfwbb9M8mR6/8iWth3iHvvsxa5jeC82Y3
nyy/xrps7Sjuk1WWXFfXwwmhi7hukhjIhlhbcmcjnHPQnjwQ8pSx6A4szDNc
W70/hvVfcCE7t7H22zRODm50R34e893+xBP52WrkOtXgQ07tZi3b9QznzXI1
ubAXVrj7Iz+Jzyd19QDsHbiWfCvlBePOIViYn8j6DJHXhKXpQYjv6EyyMP+Q
c/Jnk/0Go8jXreeQhfmErC1mrbOfS5ZJk7geVsEWiSlkE2cTxjZnYPWRdMZ+
xZlkj2XzGIvP8y3MJ2Sp98tkYf4gx15ivWe1Kdnw/TGuc66yVgaYkXOMJ8gV
tbAwf5DrAueTqz3lXGtv8h0cVIh8BS9gbGiB27cpkK/3zMnCfEJefI9vYR5B
vjZYMBa3wwp1GTliiyXj2C7YrV7N9d4dr5CF+YPrHB0sHdKQFfELGVf0w8K8
gnpKtiLvXXKVa62edXf6IrJJQA3qaQRWRNQjP/tfJXsn35ySbZ6x9pBZI57j
zeSAWTbkyJLbqKcP4b4rrdOyouA1sjDfYL9LFuPnh/Rjf1Y4kG0KR6Zl6eew
umIM++frSBbmCexXFSzMD+O0X/5Ok1pZAwvzBLlC/AbjugbYsMCU3Ba0BOfD
1Zysa4ZtxAvJhlBnsjAfkE20rBeHu2C9aXZcez+E2086kMWblzKO6IQTSpdw
HbvdFefhmit5bw8szAdc58W5MVb2wW4DXmRNkjvqZbYv8jEIC/ME8pG2DPX+
ZgC5b5i1IXM56nu9mGw2DpvESxD/IY8pWXU4mCzJ9kQ9K0IR/9wVjBNy4SaN
dFJHNkcgH/O9GPc5rMR9K0nE/7/8Jva39uA4+q8f6mFNwTj675pfZNEdOCes
aBz92B/3a1LxOPoxLLyHx9GP3+I6WFnKdfTWANRLZfk4+i9r2a63cZ/ePsfY
pPcC14W9rMsS1+I+en5xHP0YdrOuGkc/Xod68brGdefQ5LbKegf1sq+R7PZi
ahbey4jXVIJ6aLjPuKnjEdfZ+awLLd9FPQx3kNWFcJ9ZN+K1DkK/d9FNybeK
WcdcCiEL71PycMt61EesrZHWowvDeTb4TMuK+HCcf8vVRvSbCJxvd38j+g3s
FrjWiH6zAf06KtCIfgML7yUj+slGnOdTIUb0E3hv2fop2UO2iXHArEjsV02Y
Ef0DVj3YSI6dtxn7NxhF3pM3NTfN2U7OMY/C/jnsQj4KWNcptmA/pEnTstYu
GvdBYgry5bQV/ehIOvJ1Ghbea0b0i13Yn0ylEfdrws/9nLw79wOs36d3Ws6a
n4J+FdJPlsth/c5BcmVRKtZ/YGhaTjXNxs/7KOMZ9rcI36cykG8MnoVbDj+f
8M+/L6H+2Oelic9ly5rp95k0P6ybNfF5c9Cd7LK+dcbEJ/P7Uf8DLdC9dg==

     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}}, {{{7.3059000968933105`, 7.670300006866455}, {7.881900072097778, 
      7.8673000037670135`}, {8.49590015411377, 7.6853000074625015`}, {
      7.981900095939636, 7.523300006985664}, {7.3059000968933105`, 
      7.670300006866455}}, {{7.698900103569031, 8.400299966335297}, {
      8.184900104999542, 8.580300033092499}, {7.806900084018707, 
      8.090300023555756}, {7.253900099545717, 7.901300013065338}, {
      7.698900103569031, 8.400299966335297}}, {{7.090900093317032, 
      9.283300042152405}, {7.936900079250336, 9.467300057411194}, {
      8.342900037765503, 8.890300035476685}, {7.664900124073029, 
      8.638300061225891}, {7.090900093317032, 9.283300042152405}}, {{
      8.381900191307068, 9.855299949645996}, {8.398900151252747, 
      9.219299912452698}, {8.101900041103363, 9.641300201416016}, {
      8.033900082111359, 10.325299978256226`}, {8.381900191307068, 
      9.855299949645996}}, {{8.847900032997131, 10.182300090789795`}, {
      9.157899975776672, 9.78629994392395}, {8.570900082588196, 
      9.99429988861084}, {8.231900095939636, 10.452300071716309`}, {
      8.847900032997131, 10.182300090789795`}}, {{9.499899864196777, 
      11.033299922943115`}, {9.93589997291565, 10.287299871444702`}, {
      9.499899864196777, 9.730299949645996}, {9.063900113105774, 
      10.287299871444702`}, {9.499899864196777, 11.033299922943115`}}, {{
      10.151900053024292`, 10.182300090789795`}, {10.767900228500366`, 
      10.452300071716309`}, {10.428900003433228`, 9.99429988861084}, {
      9.841900110244751, 9.78629994392395}, {10.151900053024292`, 
      10.182300090789795`}}, {{10.898900032043457`, 9.641300201416016}, {
      10.600900173187256`, 9.219299912452698}, {10.618900060653687`, 
      9.855299949645996}, {10.966899871826172`, 10.325299978256226`}, {
      10.898900032043457`, 9.641300201416016}}, {{11.909900188446045`, 
      9.282299995422363}, {11.33489990234375, 8.638300061225891}, {
      10.65689992904663, 8.890300035476685}, {11.063899993896484`, 
      9.467300057411194}, {11.909900188446045`, 9.282299995422363}}, {{
      11.744900226593018`, 7.901300013065338}, {11.192899942398071`, 
      8.090300023555756}, {10.815900087356567`, 8.580300033092499}, {
      11.300900220870972`, 8.3992999792099}, {11.744900226593018`, 
      7.901300013065338}}, {{11.017900228500366`, 7.5223000049591064`}, {
      10.503899812698364`, 7.6853000074625015`}, {11.117900133132935`, 
      7.8673000037670135`}, {11.693900108337402`, 7.670300006866455}, {
      11.017900228500366`, 7.5223000049591064`}}, {{10.196899890899658`, 
      6.79830002784729}, {10.214900255203247`, 7.530300006270409}, {
      10.902899980545044`, 7.312299996614456}, {10.988899946212769`, 
      6.450299978256226}, {10.196899890899658`, 6.79830002784729}}, {{
      9.619899988174438, 8.669300019741058}, {9.619899988174438, 
      9.456300139427185}, {10.380900144577026`, 9.727299928665161}, {
      10.35890007019043, 8.918300032615662}, {9.619899988174438, 
      8.669300019741058}}, {{9.689899921417236, 8.445299983024597}, {
      10.43090009689331, 8.694299936294556}, {10.922899961471558`, 
      8.054300010204315}, {10.146899938583374`, 7.825300008058548}, {
      9.689899921417236, 8.445299983024597}}, {{9.961899995803833, 
      6.755299985408783}, {9.619899988174438, 6.168300032615662}, {
      9.619899988174438, 6.776300013065338}, {9.975899934768677, 
      7.295300006866455}, {9.961899995803833, 6.755299985408783}}, {{
      9.499899864196777, 7.020299971103668}, {9.042900085449219, 
      7.687300007790327}, {9.499899864196777, 8.30730003118515}, {
      9.956899881362915, 7.687300007790327}, {9.499899864196777, 
      7.020299971103668}}, {{9.379899978637695, 6.16729998588562}, {
      9.036900162696838, 6.755299985408783}, {9.024900078773499, 
      7.296299993991852}, {9.379899978637695, 6.776300013065338}, {
      9.379899978637695, 6.16729998588562}}, {{8.618900060653687, 
      9.727299928665161}, {9.379899978637695, 9.456300139427185}, {
      9.379899978637695, 8.669300019741058}, {8.641900062561035, 
      8.918300032615662}, {8.618900060653687, 9.727299928665161}}, {{
      8.85290002822876, 7.825300008058548}, {8.076900064945221, 
      8.054300010204315}, {8.568900108337402, 8.694299936294556}, {
      9.309900045394897, 8.445299983024597}, {8.85290002822876, 
      7.825300008058548}}, {{8.01090008020401, 6.450299978256226}, {
      8.096900045871735, 7.312299996614456}, {8.784900069236755, 
      7.530300006270409}, {8.802900075912476, 6.79830002784729}, {
      8.01090008020401, 6.450299978256226}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQRX8vcrOoAYnF5SIFrh0nklEH1Be6kYiG7Y/gDM
X1G9CczXWPkZzE/I3wDmLxBkVQarX7MLzLdoEAfzO07vB/MvvNME828wnQTz
Kx7YgPkPdC+A+T9KHVSQ7b8xq00NypcAyy9wB/P/bbKWBdEB67doAOkGZk4v
ObD5R3nVQbTDkv8KSPIMDC63lJD1C3xKBNv7QrYdwj9+SxVEc/yE2A/kg+kH
n/6D9QWoM4DNhYWPgtdtsPyHqZ/kkPWv6CyQRzb/R840Kag82Jw39k/A7g5S
Z1BEkm/Q4PeWQ9YP89+Z/o9gcaC8BLL94PABAMQeaZ8=
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"ParallelIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
       2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQHKl5qOADphBWmMiD6xcqPqiDaxe+iHIhukHBR
A9E3JsZIgNVNllAG0QZev8VAtAibI1j9BUtlIWT5A0HTuEB0wVRnsP4D56+y
g+grahDzGdbd+GqPZH/DImUGEL3Ms0cLLN+z8zFIvmK6ng6yfMJLNX0wf+oV
sP4LVVf0QHyHw5fB5v/4/98ALO82BWy/Q+91fWT3weQ5XH6B3Q/TD/NfQY66
PrL/e6T0QfYrWS8ykUF2358FzxUc0MMPAMVfVoU=
      "], {{12.704999387264252`, 6.868400111794472}, {13.273999392986298`, 
      7.842400074005127}, {13.84399938583374, 6.868400111794472}, {
      13.273999392986298`, 6.141400098800659}, {12.704999387264252`, 
      6.868400111794472}}, {{12.060999363660812`, 6.486400127410889}, {
      11.617999374866486`, 7.084400109946728}, {12.422999374568462`, 
      6.731400102376938}, {12.826999366283417`, 6.21340012550354}, {
      12.060999363660812`, 6.486400127410889}}, {{14.125999450683594`, 
      6.731400102376938}, {14.929999351501465`, 7.08340011164546}, {
      14.485999345779419`, 6.486400127410889}, {13.720999360084534`, 
      6.21340012550354}, {14.125999450683594`, 6.731400102376938}}, {{
      14.734999418258667`, 6.304400086402893}, {15.18899941444397, 
      6.918400123715401}, {15.099999189376831`, 6.024400115013123}, {
      14.710999488830566`, 5.473400115966797}, {14.734999418258667`, 
      6.304400086402893}}, {{11.447999358177185`, 6.024400115013123}, {
      11.358999371528625`, 6.918400123715401}, {11.812999308109283`, 
      6.304400086402893}, {11.835999369621277`, 5.473400115966797}, {
      11.447999358177185`, 6.024400115013123}}, {{13.430999398231506`, 
      5.783400177955627}, {14.423999428749084`, 6.1374000906944275`}, {
      14.395999431610107`, 5.080399990081787}, {13.430999398231506`, 
      4.754400253295898}, {13.430999398231506`, 5.783400177955627}}, {{
      12.152999371290207`, 5.080399990081787}, {12.122999370098114`, 
      6.1374000906944275`}, {13.117999374866486`, 5.783400177955627}, {
      13.117999374866486`, 4.754400253295898}, {12.152999371290207`, 
      5.080399990081787}}, {{10.127999544143677`, 5.557400107383728}, {
      11.231999397277832`, 5.797400116920471}, {11.762999355793, 
      5.043400049209595}, {10.876999378204346`, 4.715400218963623}, {
      10.127999544143677`, 5.557400107383728}}, {{14.78399920463562, 
      5.043400049209595}, {15.315999269485474`, 5.797400116920471}, {
      16.42099952697754, 5.5564000606536865`}, {15.670999526977539`, 
      4.714400291442871}, {14.78399920463562, 5.043400049209595}}, {{
      13.522999286651611`, 4.46340012550354}, {14.488999366760254`, 
      4.788400173187256}, {15.132999181747437`, 3.9524002075195312`}, {
      14.11799931526184, 3.65440034866333}, {13.522999286651611`, 
      4.46340012550354}}, {{11.415999412536621`, 3.9524002075195312`}, {
      12.058999359607697`, 4.788400173187256}, {13.025999367237091`, 
      4.46340012550354}, {12.428999375551939`, 3.65440034866333}, {
      11.415999412536621`, 3.9524002075195312`}}, {{10.92099940776825, 
      4.403400182723999}, {11.555999338626862`, 4.639400005340576}, {
      11.06399941444397, 3.9984002113342285`}, {10.340999364852905`, 
      3.7524001598358154`}, {10.92099940776825, 4.403400182723999}}, {{
      15.484999418258667`, 3.9984002113342285`}, {14.991999387741089`, 
      4.638400077819824}, {15.625999212265015`, 4.403400182723999}, {
      16.20599937438965, 3.7524001598358154`}, {15.484999418258667`, 
      3.9984002113342285`}}, {{12.676999375224113`, 3.473400115966797}, {
      13.273999392986298`, 4.282400131225586}, {13.870999336242676`, 
      3.473400115966797}, {13.273999392986298`, 2.6023998260498047`}, {
      12.676999375224113`, 3.473400115966797}}, {{14.584999322891235`, 
      3.470400094985962}, {15.386999368667603`, 3.70740008354187}, {
      16.13999915122986, 3.4504001140594482`}, {15.255999326705933`, 
      3.2584002017974854`}, {14.584999322891235`, 3.470400094985962}}, {{
      10.407999515533447`, 3.4504001140594482`}, {11.160999298095703`, 
      3.70740008354187}, {11.96399936079979, 3.471400260925293}, {
      11.290999412536621`, 3.2584002017974854`}, {10.407999515533447`, 
      3.4504001140594482`}}, {{14.183999419212341`, 2.3114004135131836`}, {
      14.20699942111969, 3.267400026321411}, {15.105999231338501`, 
      2.983400344848633}, {15.217999458312988`, 1.8573999404907227`}, {
      14.183999419212341`, 2.3114004135131836`}}, {{11.441999435424805`, 
      2.983400344848633}, {12.339999377727509`, 3.267400026321411}, {
      12.362999379634857`, 2.3124003410339355`}, {11.328999400138855`, 
      1.8573999404907227`}, {11.441999435424805`, 2.983400344848633}}, {{
      13.430999398231506`, 2.283400535583496}, {13.894999265670776`, 
      2.962399959564209}, {13.876999378204346`, 2.2554001808166504`}, {
      13.430999398231506`, 1.4883999824523926`}, {13.430999398231506`, 
      2.283400535583496}}, {{12.668999388813972`, 2.2554001808166504`}, {
      12.652999371290207`, 2.962399959564209}, {13.117999374866486`, 
      2.283400535583496}, {13.117999374866486`, 1.4883999824523926`}, {
      12.668999388813972`, 2.2554001808166504`}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
       0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQNLK78DkA6YYWpDIi+sCeZGUS7+F2UA9EO5WtZ
QPSNiTESILqh6+97eyBt4PVbDMzXXcgA1mepLIQsfyBoGhey/gPnr7KD5Tck
gs1nWHfjK1Cdi9kPJ7D9DYuUwea8kH0ONoehZ+djkDkb9uuIIcsnxMqA3dkw
9cpXsDsayqXB9hy+DDbfwPW5AljebQrYfoGltbLI7oPJc7j8Apub0FYhjeK/
ZFkZZP9D7VeyXmQig+y+Pwug9iCHHwDf+lHe
      "], {{4.156700000166893, 6.868400111794472}, {4.7257000207901, 
      7.842400074005127}, {5.295699954032898, 6.868400111794472}, {
      4.7257000207901, 6.141400098800659}, {4.156700000166893, 
      6.868400111794472}}, {{3.5136999785900116`, 6.486400127410889}, {
      3.069700002670288, 7.084400109946728}, {3.874699991196394, 
      6.731400102376938}, {4.279699981212616, 6.21340012550354}, {
      3.5136999785900116`, 6.486400127410889}}, {{5.577699899673462, 
      6.731400102376938}, {6.381700038909912, 7.08340011164546}, {
      5.938699960708618, 6.486400127410889}, {5.172699928283691, 
      6.21340012550354}, {5.577699899673462, 6.731400102376938}}, {{
      6.186699867248535, 6.304400086402893}, {6.641700029373169, 
      6.918400123715401}, {6.551699876785278, 6.024400115013123}, {
      6.163700103759766, 5.473400115966797}, {6.186699867248535, 
      6.304400086402893}}, {{2.8997000455856323`, 6.024400115013123}, {
      2.810699939727783, 6.918400123715401}, {3.264699935913086, 
      6.304400086402893}, {3.288699984550476, 5.473400115966797}, {
      2.8997000455856323`, 6.024400115013123}}, {{4.882700026035309, 
      5.783400177955627}, {5.875699996948242, 6.1374000906944275`}, {
      5.847699999809265, 5.080399990081787}, {4.882700026035309, 
      4.754400253295898}, {4.882700026035309, 5.783400177955627}}, {{
      3.605699986219406, 5.080399990081787}, {3.574699968099594, 
      6.1374000906944275`}, {4.569700002670288, 5.783400177955627}, {
      4.569700002670288, 4.754400253295898}, {3.605699986219406, 
      5.080399990081787}}, {{1.579699993133545, 5.557400107383728}, {
      2.6847000122070312`, 5.797400116920471}, {3.2156999707221985`, 
      5.043400049209595}, {2.329699993133545, 4.715400218963623}, {
      1.579699993133545, 5.557400107383728}}, {{6.236699819564819, 
      5.043400049209595}, {6.767699956893921, 5.797400116920471}, {
      7.872699975967407, 5.5564000606536865`}, {7.122699975967407, 
      4.714400291442871}, {6.236699819564819, 5.043400049209595}}, {{
      4.974699974060059, 4.46340012550354}, {5.940700054168701, 
      4.788400173187256}, {6.584699869155884, 3.9524002075195312`}, {
      5.57069993019104, 3.65440034866333}, {4.974699974060059, 
      4.46340012550354}}, {{2.867699980735779, 3.9524002075195312`}, {
      3.510699987411499, 4.788400173187256}, {4.4776999950408936`, 
      4.46340012550354}, {3.8816999904811382`, 3.65440034866333}, {
      2.867699980735779, 3.9524002075195312`}}, {{2.3737000226974487`, 
      4.403400182723999}, {3.007699966430664, 4.639400005340576}, {
      2.5156999826431274`, 3.9984002113342285`}, {1.7936999797821045`, 
      3.7524001598358154`}, {2.3737000226974487`, 4.403400182723999}}, {{
      6.936699867248535, 3.9984002113342285`}, {6.443700075149536, 
      4.638400077819824}, {7.077699899673462, 4.403400182723999}, {
      7.657700061798096, 3.7524001598358154`}, {6.936699867248535, 
      3.9984002113342285`}}, {{4.128699988126755, 3.473400115966797}, {
      4.7257000207901, 4.282400131225586}, {5.3226999044418335`, 
      3.473400115966797}, {4.7257000207901, 2.6023998260498047`}, {
      4.128699988126755, 3.473400115966797}}, {{6.0366997718811035`, 
      3.470400094985962}, {6.83870005607605, 3.70740008354187}, {
      7.591699838638306, 3.4504001140594482`}, {6.708699941635132, 
      3.2584002017974854`}, {6.0366997718811035`, 3.470400094985962}}, {{
      1.8607001304626465`, 3.4504001140594482`}, {2.612699866294861, 
      3.70740008354187}, {3.415699988603592, 3.471400260925293}, {
      2.742699980735779, 3.2584002017974854`}, {1.8607001304626465`, 
      3.4504001140594482`}}, {{5.6367000341415405`, 2.3114004135131836`}, {
      5.658699989318848, 3.267400026321411}, {6.5586998462677, 
      2.983400344848633}, {6.6707000732421875`, 1.8573999404907227`}, {
      5.6367000341415405`, 2.3114004135131836`}}, {{2.8937000036239624`, 
      2.983400344848633}, {3.7926999926567078`, 3.267400026321411}, {
      3.8146999925374985`, 2.3124003410339355`}, {2.7806999683380127`, 
      1.8573999404907227`}, {2.8937000036239624`, 2.983400344848633}}, {{
      4.882700026035309, 2.283400535583496}, {5.346699953079224, 
      2.962399959564209}, {5.328699946403503, 2.2554001808166504`}, {
      4.882700026035309, 1.4883999824523926`}, {4.882700026035309, 
      2.283400535583496}}, {{4.121700003743172, 2.2554001808166504`}, {
      4.105699986219406, 2.962399959564209}, {4.569700002670288, 
      2.283400535583496}, {4.569700002670288, 1.4883999824523926`}, {
      4.121700003743172, 2.2554001808166504`}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.70829963684082, 
      11.805800437927246`}, {6.036299645900726, 12.01880045235157}, {
      6.839299634099007, 12.255800426006317`}, {7.591299653053284, 
      11.997800439596176`}, {6.70829963684082, 11.805800437927246`}}, {{
      5.6362996101379395`, 10.859800398349762`}, {5.659299731254578, 
      11.815800437703729`}, {6.558299630880356, 11.530800431966782`}, {
      6.6702996380627155`, 10.404800415039062`}, {5.6362996101379395`, 
      10.859800398349762`}}, {{2.8932995796203613`, 11.531800419092178`}, {
      3.792299509048462, 11.815800437703729`}, {3.8152997493743896`, 
      10.859800398349762`}, {2.781299591064453, 10.405800461769104`}, {
      2.8932995796203613`, 11.531800419092178`}}, {{1.8602995872497559`, 
      11.998800441622734`}, {2.6122994422912598`, 12.255800426006317`}, {
      3.415299654006958, 12.01880045235157}, {2.7432994842529297`, 
      11.805800437927246`}, {1.8602995872497559`, 11.998800441622734`}}, {{
      2.3742990493774414`, 12.951800465583801`}, {3.0082995891571045`, 
      13.186800479888916`}, {2.5152997970581055`, 12.546800434589386`}, {
      1.7932991981506348`, 12.300800442695618`}, {2.3742990493774414`, 
      12.951800465583801`}}, {{1.5792999267578125`, 14.104800462722778`}, {
      2.6842994689941406`, 14.345800399780273`}, {3.215299606323242, 
      13.591800570487976`}, {2.3292994499206543`, 13.262800335884094`}, {
      1.5792999267578125`, 14.104800462722778`}}, {{4.726299524307251, 
      16.39080047607422}, {5.295299649238586, 15.416800260543823`}, {
      4.726299524307251, 14.68880033493042}, {4.157299757003784, 
      15.416800260543823`}, {4.726299524307251, 16.39080047607422}}, {{
      7.872299551963806, 14.103800296783447`}, {7.122299641370773, 
      13.262800335884094`}, {6.236299633979797, 13.591800570487976`}, {
      6.768299635499716, 14.344800472259521`}, {7.872299551963806, 
      14.103800296783447`}}, {{4.974299669265747, 13.01080048084259}, {
      5.941299617290497, 13.336800456047058`}, {6.584299631416798, 
      12.500800430774689`}, {5.57129967212677, 12.201800465583801`}, {
      4.974299669265747, 13.01080048084259}}, {{4.105299711227417, 
      11.509800434112549`}, {4.569299697875977, 10.830800414085388`}, {
      4.569299697875977, 10.036800503730774`}, {4.121299743652344, 
      10.803800463676453`}, {4.105299711227417, 11.509800434112549`}}, {{
      4.477299690246582, 13.01080048084259}, {3.8812997341156006`, 
      12.201800465583801`}, {2.867299795150757, 12.500800430774689`}, {
      3.5112998485565186`, 13.336800456047058`}, {4.477299690246582, 
      13.01080048084259}}, {{2.9002997875213623`, 14.572800397872925`}, {
      2.8112998008728027`, 15.466800212860107`}, {3.2652995586395264`, 
      14.852800369262695`}, {3.288299560546875, 14.021800518035889`}, {
      2.9002997875213623`, 14.572800397872925`}}, {{4.883299708366394, 
      14.33180046081543}, {5.876299679279327, 14.684800386428833`}, {
      5.848299622535706, 13.628800392150879`}, {4.883299708366394, 
      13.302800416946411`}, {4.883299708366394, 14.33180046081543}}, {{
      3.605299711227417, 13.628800392150879`}, {3.5752997398376465`, 
      14.684800386428833`}, {4.569299697875977, 14.33180046081543}, {
      4.569299697875977, 13.302800416946411`}, {3.605299711227417, 
      13.628800392150879`}}, {{4.726299524307251, 11.15080040693283}, {
      4.129299640655518, 12.020800441503525`}, {4.726299524307251, 
      12.829800367355347`}, {5.322299599647522, 12.020800441503525`}, {
      4.726299524307251, 11.15080040693283}}, {{6.5522996336221695`, 
      14.572800397872925`}, {6.16329962015152, 14.020800590515137`}, {
      6.186299681663513, 14.852800369262695`}, {6.642299637198448, 
      15.466800212860107`}, {6.5522996336221695`, 14.572800397872925`}}, {{
      5.578299641609192, 15.27880048751831}, {6.382299602031708, 
      15.631800413131714`}, {5.938299655914307, 15.03380036354065}, {
      5.173299670219421, 14.761800527572632`}, {5.578299641609192, 
      15.27880048751831}}, {{4.27929949760437, 14.761800527572632`}, {
      3.5132997035980225`, 15.03380036354065}, {3.0702998638153076`, 
      15.632800340652466`}, {3.8742997646331787`, 15.27880048751831}, {
      4.27929949760437, 14.761800527572632`}}, {{5.329299688339233, 
      10.803800463676453`}, {4.883299708366394, 10.036800503730774`}, {
      4.883299708366394, 10.830800414085388`}, {5.347299695014954, 
      11.509800434112549`}, {5.329299688339233, 10.803800463676453`}}, {{
      7.658299684524536, 12.299800455570221`}, {6.93629963696003, 
      12.546800434589386`}, {6.444299638271332, 13.186800479888916`}, {
      7.078299641609192, 12.95080041885376}, {7.658299684524536, 
      12.299800455570221`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQuTnWyDkD6yENNLRB9YfJzBRD94eVUHRCdJlsh
DaJP9LrpguhdDHIyIJqhzMEARL+I0RUD0RySxvogWmD3cyGw/k//wfILjFz4
keUZXicxI+t3WLqGBUTfEHAHm99gxfjBHiSfOw1sP0PGIgYQfSVFSwtJvmFB
zD51ZP0nd/CqI5s/JeqyMohOUHMC29+iq6iK7L4DCSFKYDpMRwxZftovGRlk
/TD/bzeFmA8Ln76be8F8lPADAJjnS+U=
      "]}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
      15.256199836730957`, 11.805800437927246`}, {14.584199845790863`, 
      12.01880045235157}, {15.387199833989143`, 12.255800426006317`}, {
      16.13919985294342, 11.997800439596176`}, {15.256199836730957`, 
      11.805800437927246`}}, {{14.184199810028076`, 10.859800398349762`}, {
      14.207199931144714`, 11.815800437703729`}, {15.106199830770493`, 
      11.530800431966782`}, {15.218199837952852`, 10.404800415039062`}, {
      14.184199810028076`, 10.859800398349762`}}, {{11.441199779510498`, 
      11.531800419092178`}, {12.340199708938599`, 11.815800437703729`}, {
      12.363199949264526`, 10.859800398349762`}, {11.32919979095459, 
      10.405800461769104`}, {11.441199779510498`, 11.531800419092178`}}, {{
      10.409199714660645`, 11.998800441622734`}, {11.160199642181396`, 
      12.255800426006317`}, {11.963199853897095`, 12.01880045235157}, {
      11.291199684143066`, 11.805800437927246`}, {10.409199714660645`, 
      11.998800441622734`}}, {{10.922199249267578`, 12.951800465583801`}, {
      11.556199789047241`, 13.186800479888916`}, {11.063199996948242`, 
      12.546800434589386`}, {10.341199398040771`, 12.300800442695618`}, {
      10.922199249267578`, 12.951800465583801`}}, {{10.12720012664795, 
      14.104800462722778`}, {11.232199668884277`, 14.345800399780273`}, {
      11.763199806213379`, 13.591800570487976`}, {10.877199649810791`, 
      13.262800335884094`}, {10.12720012664795, 14.104800462722778`}}, {{
      13.274199724197388`, 16.39080047607422}, {13.843199849128723`, 
      15.416800260543823`}, {13.274199724197388`, 14.68880033493042}, {
      12.705199956893921`, 15.416800260543823`}, {13.274199724197388`, 
      16.39080047607422}}, {{16.420199751853943`, 14.103800296783447`}, {
      15.67019984126091, 13.262800335884094`}, {14.784199833869934`, 
      13.591800570487976`}, {15.316199835389853`, 14.344800472259521`}, {
      16.420199751853943`, 14.103800296783447`}}, {{13.522199869155884`, 
      13.01080048084259}, {14.489199817180634`, 13.336800456047058`}, {
      15.132199831306934`, 12.500800430774689`}, {14.119199872016907`, 
      12.201800465583801`}, {13.522199869155884`, 13.01080048084259}}, {{
      12.653199911117554`, 11.509800434112549`}, {13.117199897766113`, 
      10.830800414085388`}, {13.117199897766113`, 10.036800503730774`}, {
      12.66919994354248, 10.803800463676453`}, {12.653199911117554`, 
      11.509800434112549`}}, {{13.025199890136719`, 13.01080048084259}, {
      12.429199934005737`, 12.201800465583801`}, {11.415199995040894`, 
      12.500800430774689`}, {12.059200048446655`, 13.336800456047058`}, {
      13.025199890136719`, 13.01080048084259}}, {{11.448199987411499`, 
      14.572800397872925`}, {11.35920000076294, 15.466800212860107`}, {
      11.813199758529663`, 14.852800369262695`}, {11.836199760437012`, 
      14.021800518035889`}, {11.448199987411499`, 14.572800397872925`}}, {{
      13.43119990825653, 14.33180046081543}, {14.424199879169464`, 
      14.684800386428833`}, {14.396199822425842`, 13.628800392150879`}, {
      13.43119990825653, 13.302800416946411`}, {13.43119990825653, 
      14.33180046081543}}, {{12.153199911117554`, 13.628800392150879`}, {
      12.123199939727783`, 14.684800386428833`}, {13.117199897766113`, 
      14.33180046081543}, {13.117199897766113`, 13.302800416946411`}, {
      12.153199911117554`, 13.628800392150879`}}, {{13.274199724197388`, 
      11.15080040693283}, {12.677199840545654`, 12.020800441503525`}, {
      13.274199724197388`, 12.829800367355347`}, {13.870199799537659`, 
      12.020800441503525`}, {13.274199724197388`, 11.15080040693283}}, {{
      15.100199833512306`, 14.572800397872925`}, {14.711199820041656`, 
      14.020800590515137`}, {14.73419988155365, 14.852800369262695`}, {
      15.190199837088585`, 15.466800212860107`}, {15.100199833512306`, 
      14.572800397872925`}}, {{14.126199841499329`, 15.27880048751831}, {
      14.930199801921844`, 15.631800413131714`}, {14.486199855804443`, 
      15.03380036354065}, {13.721199870109558`, 14.761800527572632`}, {
      14.126199841499329`, 15.27880048751831}}, {{12.827199697494507`, 
      14.761800527572632`}, {12.06119990348816, 15.03380036354065}, {
      11.618200063705444`, 15.632800340652466`}, {12.422199964523315`, 
      15.27880048751831}, {12.827199697494507`, 14.761800527572632`}}, {{
      13.87719988822937, 10.803800463676453`}, {13.43119990825653, 
      10.036800503730774`}, {13.43119990825653, 10.830800414085388`}, {
      13.89519989490509, 11.509800434112549`}, {13.87719988822937, 
      10.803800463676453`}}, {{16.206199884414673`, 12.299800455570221`}, {
      15.484199836850166`, 12.546800434589386`}, {14.992199838161469`, 
      13.186800479888916`}, {15.626199841499329`, 12.95080041885376}, {
      16.206199884414673`, 12.299800455570221`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQRNy6/rOwDpIw81tUC0BC+DIYj+8HKqDogWnnpF
D0Sf6HXTBdF729TB6hnKHAxA9BUTfbA6DkljsPiL5B6wOR8+/QfLc0x+qYEs
r+D4URVZ/4b1zmog+oaAO9j8DWsllMHyudPA5iYoOILVX0nR0kKSb1gQs08d
Wf/JHbzqyOZPiboMNucHP8T+Fl1FVWT3HUgIUQLTG/V0kOVXM0P8B9MP8/92
U4j5sPDpu7kXzEcJPwAk+E3f
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"AbortInactiveIcon" -> GraphicsBox[ (* FIXME: Need a real one of these from design? *)
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{2.25, 0.5}, {1.284999966621399, 
     0.5}, {0.5, 1.284999966621399}, {0.5, 2.25}, {0.5, 15.75}, {0.5, 
     16.71500015258789}, {1.284999966621399, 17.5}, {2.25, 17.5}, {15.75, 
     17.5}, {16.71500015258789, 17.5}, {17.5, 16.71500015258789}, {17.5, 
     15.75}, {17.5, 2.25}, {17.5, 1.284999966621399}, {16.71500015258789, 
     0.5}, {15.75, 0.5}, {2.25, 0.5}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJBKA0GDfoOEIYRlGZC4a+R+WCPKg8GDqb/DJD5SObA
ABMKH2YOwjzs6tDMwbQHp7tQ3Y3mL5g5SOZhVYfENwTRfkkFBsh83OKo+pDc
A+Hf+vnDHlUf1P1wfTD/MKHwb0P0IclD6FsY4qj60MyF24swD7s7kf0BAPhZ
QG0=
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5., 5.}, {13., 5.}, {13., 13.}, {5., 13.}, {5., 5.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"AbortIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.48627450980392156`, 0.5137254901960784, 0.5686274509803921], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[
    0.28627450980392155`, 0.3215686274509804, 0.396078431372549], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6., 11.}, {6., 7.}, {6., 
     6.447999954223633}, {6.447999984025955, 6.}, {7., 6.}, {11., 6.}, {
     11.552000045776367`, 6.}, {12., 6.447999954223633}, {12., 7.}, {12., 
     11.}, {12., 11.551999986171722`}, {11.552000045776367`, 12.}, {11., 
     12.}, {7., 12.}, {6.447999984025955, 12.}, {6., 11.551999986171722`}, {
     6., 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"AbortIconHover" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.7059, 0.75295, 0.8392], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[
    0.49019607843137253`, 0.5176470588235295, 0.5725490196078431], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6., 11.}, {6., 7.}, {6., 
     6.447999954223633}, {6.447999984025955, 6.}, {7., 6.}, {11., 6.}, {
     11.552000045776367`, 6.}, {12., 6.447999954223633}, {12., 7.}, {12., 
     11.}, {12., 11.551999986171722`}, {11.552000045776367`, 12.}, {11., 
     12.}, {7., 12.}, {6.447999984025955, 12.}, {6., 11.551999986171722`}, {
     6., 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"AbortIconActive" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.40784313725490196`, 0.4235294117647059, 0.4549019607843137], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15.75, 0.}, {2.25, 0.}, {
     1.0069999694824219`, 0.}, {0., 1.0069999694824219`}, {0., 2.25}, {0., 
     15.75}, {0., 16.993000030517578`}, {1.0069999694824219`, 18.}, {2.25, 
     18.}, {15.75, 18.}, {16.993000030517578`, 18.}, {18., 
     16.993000030517578`}, {18., 15.75}, {18., 2.25}, {18., 
     1.0069999694824219`}, {16.993000030517578`, 0.}, {15.75, 0.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBzDVYAiiPbZ9lgHREXxvdUD0ga8aAiBa
he2gPpjv2SMIogWaD2iA9V1Qem8PpAw6HdVBfAfTOC4QrdAMNXeeFFj+wM86
SRC/wblbEGqfGJj/Ug1sPsOXvwxgfRs+ge1vOObN44DiPoYHIHPuqLSpguV3
eYLlFVpfa4Plb/+E6L9tCeYf+FwLNl9Amx3sL4e3NWD7NxRl6ILoBzX/FZHl
GZodIO6Ps4KYxwDxn0P3GzBfpPkA2P8flkPs9+h+o4PqPmD4AQDgFEXs
     "]]}, 
   {FaceForm[{RGBColor[
    0.36470588235294116`, 0.39215686274509803`, 0.4549019607843137], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6., 11.}, {6., 7.}, {6., 
     6.447999954223633}, {6.447999984025955, 6.}, {7., 6.}, {11., 6.}, {
     11.552000045776367`, 6.}, {12., 6.447999954223633}, {12., 7.}, {12., 
     11.}, {12., 11.551999986171722`}, {11.552000045776367`, 12.}, {11., 
     12.}, {7., 12.}, {6.447999984025955, 12.}, {6., 11.551999986171722`}, {
     6., 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{21., 21.}, {21., 21.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"AbortAllIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], FaceForm[{RGBColor[
   0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], Opacity[
   1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
    1, 0}}}, {{{13.26200008392334, 14.}, {9.5, 10.23799991607666}, {
    5.73799991607666, 14.}, {5., 13.262000024318695`}, {8.76200008392334, 
    9.5}, {5., 5.73799991607666}, {5.73799991607666, 5.}, {9.5, 
    8.76200008392334}, {13.26200008392334, 5.}, {14.000000059604645`, 
    5.73799991607666}, {10.23800015449524, 9.5}, {14.000000059604645`, 
    13.262000024318695`}, {13.26200008392334, 14.}}}]},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"RemoveQueueIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{
      7., 12.706999778747559`}, {5.706999897956848, 13.99999988079071}, {7., 
      13.99999988079071}, {7., 12.706999778747559`}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQFyDkDix///ug4QvhAy/4GaoSAyf8KhUgEQrdF5
EMwveKkG5u85lQjmH1DYwA+iXXiYIOolWMDyd6qm6IBogcapYH7FAS8dqH0y
IFqEZZoaMh+kFNk9ML5DwlMBNHkw3WBvyocmzoMif+AUJ5p+DjTzYXw5ZP6e
+VLyaPIKyObB+Ej2gflPav6rIfM5mhnUkfl//v/XQebf8O/VRbYPKT4Q8QMA
ItNF2Q==
      "]}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{13.26200008392334, 11.}, {11.50000011920929, 
     9.23800003528595}, {9.73800015449524, 11.}, {9.000000476837158, 
     10.262000024318695`}, {10.76200008392334, 8.5}, {9.000000476837158, 
     6.738000392913818}, {9.73800015449524, 6.}, {11.50000011920929, 
     7.76200008392334}, {13.26200008392334, 6.}, {14.000000059604645`, 
     6.738000392913818}, {12.23800015449524, 8.5}, {14.000000059604645`, 
     10.262000024318695`}, {13.26200008392334, 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"PlusSmallIcon" -> GraphicsBox[LineBox[{{{-1, 0}, {1, 0}}, {{0, -1}, {0, 1}}}],
  AspectRatio->Automatic,
  BaseStyle->{
    GrayLevel[0.35], 
    AbsoluteThickness[1.5], 
    CapForm["Round"]},
  ImagePadding->{{-2, 2}, {3, 2}},
  ImageSize->12,
  PlotRange->1,
  BaselinePosition -> Scaled[0.26]],

"DecorateCellIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 18.}, {20., 6.}, {18., 6.}, {
     18., 7.}, {19., 7.}, {19., 17.}, {18., 17.}, {18., 18.}, {20., 
     18.}}}]}, 
   {Thickness[0.041666666666666664`], 
    GeometricTransformationBox[RasterBox[CompressedData["
1:eJzl0KENAyEARmGSVpzoEl2pI9wCNwgGQ0IwJARDCIoQDAlBotFoLBv8R0eo
rvjcU+99Xp/zQQg5ttf23GqtyDkjpYQQArz3sNbCGAOlFKSU4JyDMQZKKb79
WgtzTowx0HtHaw2lFMQY4ZyD1hpCiL/tf/l5A2sPMWc=
      "], {{0., 0.}, {1., 1.}}, {0, 255},
      ColorFunction->RGBColor], {{{12., 0.}, {0., -8.}}, {4., 16.}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"DecorateCellIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 18.}, {20., 6.}, {18., 6.}, {
     18., 7.}, {19., 7.}, {19., 17.}, {18., 17.}, {18., 18.}, {20., 
     18.}}}]}, 
   {Thickness[0.041666666666666664`], 
    GeometricTransformationBox[RasterBox[CompressedData["
1:eJxTTMoPSmJmYGDgAGIeIGYB4uiWRf8jJs3+Hzm/83/syoL/eetT/0/dkvx/
x/bg/wc3uf0/Ms/7/776wP/b08L/bw8K/A9SrzZn3X+NbZ3/DU+G/w++4vh/
8QOb/8+fy/7/dZvp//8tfP8/l0r+f+asMmLVkxKeAPRQ9aI=
      "], {{0., 0.}, {1., 1.}}, {0, 255},
      ColorFunction->RGBColor], {{{12., 0.}, {0., -8.}}, {4., 16.}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CellFrameLockClosedIcon" -> GraphicsBox[
  {Thickness[0.13717421196608792`], FaceForm[{GrayLevel[0.3], Opacity[1.]}],
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.519999980926514, 
     4.2300004959106445`}, {6.519999980926514, 6.450000286102295}, {
     6.519999980926514, 8.050000429153442}, {5.21999979019165, 
     9.350000381469727}, {3.619999885559082, 9.350000381469727}, {
     2.0199999809265137`, 9.350000381469727}, {0.7099999785423279, 
     8.050000429153442}, {0.7099999785423279, 6.450000286102295}, {
     0.7099999785423279, 4.2300004959106445`}, {0., 4.2300004959106445`}, {0.,
      0.}, {7.289999961853027, 0.}, {7.289999961853027, 
     4.2300004959106445`}, {6.519999980926514, 4.2300004959106445`}}, {{
     2.129999876022339, 6.450000286102295}, {2.129999876022339, 
     7.270000457763672}, {2.799999952316284, 7.940000414848328}, {
     3.619999885559082, 7.940000414848328}, {4.440000057220459, 
     7.940000414848328}, {5.110000133514404, 7.270000457763672}, {
     5.110000133514404, 6.450000286102295}, {5.110000133514404, 
     4.2300004959106445`}, {2.129999876022339, 4.2300004959106445`}, {
     2.129999876022339, 6.450000286102295}}}]},
  AspectRatio->Automatic,
  ImageSize->{10., 12.},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{0., 7.289999961853027}, {0., 9.350000381469727}}],

"CellFrameLockOpenIcon" -> GraphicsBox[
  {Thickness[0.13717421196608792`], FaceForm[{GrayLevel[0.3], Opacity[1.]}],
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
    0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZiAIMEWy5GByDt0PpawAGJ/+DMGUlkPkO1iCyY
n5bGBqIr+g/Jg+iGQ195kPkJ/YcEkfkPFheIIOuH8WHmw/hA+yXA/CoRKWx8
uHoof8VMSQUQvcD9IUS/8WYlZPfA+Ae+ajAg8x8E7nhmj6QfxoebD+XDwgMG
0PkwADRf1gELHz08wXwAQwRVlQ==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{10., 12.},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{0., 7.289999961853027}, {0., 9.350000381469727}}],

"CellFrameResetIcon" -> GraphicsBox[
  {Thickness[0.08216926817838803], FaceForm[{RGBColor[
   0.30196078431372547`, 0.30196078431372547`, 0.30196078431372547`], Opacity[
   1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZiAIMFMyWVHYD0h//1aiB6wetAWRBd/vqiJohO
6D/ED6K3fl0B5jeIrPttD6RlYvjB6hteBz4A8Re4J2o4MCDAAY0YKRDfYYec
MIieUGCrAKIfaMRwgugDZ3zA9h4osJUG0S80YjSh9oPNeRC4QxEs/1VDFUwH
7hCAukcJbE9U/yOQvQ1paeJgvgXXcRBfwdgYbD7DV40/9hD3sYH5/Yc+gvgP
FhcIQdQbH94Pct/DKhkw/8KZOyC+wjp3iPkzZr60h3hFC+zPQ1/B5hxwTwTz
d3xdAXYfSvgBAEzXVL4=
    "]]},
  AspectRatio->Automatic,
  ImageSize->{15., 15.},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{0., 13.0}, {-0.5, 12.5}}],

"CellStructureIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 19.}, {17., 18.}, {18., 18.}, {
     18., 5.}, {17., 5.}, {17., 4.}, {19., 4.}, {19., 19.}, {17., 19.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5., 12.}, {15., 12.}, {15., 17.}, {5., 17.}, {5., 12.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 
     13.}, {14., 13.}, {14., 16.}, {6., 16.}, {6., 13.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5., 6.}, {15., 6.}, {15., 11.}, {5., 11.}, {5., 6.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 
     7.}, {14., 7.}, {14., 10.}, {6., 10.}, {6., 7.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CellStructureIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17., 19.}, {17., 18.}, {18., 
     18.}, {18., 5.}, {17., 5.}, {17., 4.}, {19., 4.}, {19., 19.}, {17., 
     19.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5., 12.}, {15., 12.}, {15., 17.}, {5., 17.}, {5., 12.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 
     13.}, {14., 13.}, {14., 16.}, {6., 16.}, {6., 13.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5., 6.}, {15., 6.}, {15., 11.}, {5., 11.}, {5., 6.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 
     7.}, {14., 7.}, {14., 10.}, {6., 10.}, {6., 7.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"MergeCellsIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5.999800205230713, 10.}, {3.999800205230713, 10.}, {3.999800205230713, 
     13.}, {7.999800205230713, 13.}, {7.999800205230713, 14.}, {
     2.999800205230713, 14.}, {2.999800205230713, 9.}, {5.999800205230713, 
     9.}, {5.999800205230713, 10.}}, {{15.999800205230713`, 9.}, {
     12.999800205230713`, 9.}, {12.999800205230713`, 10.}, {
     14.999800205230713`, 10.}, {14.999800205230713`, 13.}, {
     10.999800205230713`, 13.}, {10.999800205230713`, 14.}, {
     15.999800205230713`, 14.}, {15.999800205230713`, 9.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{13., 
     8.}, {13., 7.}, {15., 7.}, {15., 4.}, {11., 4.}, {11., 3.}, {16., 3.}, {
     16., 8.}, {13., 8.}}, {{4., 4.}, {8., 4.}, {8., 3.}, {3., 3.}, {3., 
     8.}, {6., 8.}, {6., 7.}, {4., 7.}, {4., 4.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIuKA0CTN7qDiD63xYNEF3jyKACpm2zVJH5Dfv+64Jp
RwYlbHyY+ge/M2WRzWNgmSYFoiWg9gDVK4PoBYemKoLoF38h6mDy6O6B8R1Y
pgkhu8ehVVsSmc/w5e9/eyT3oPNh6mHug5kHcx/Dn0xRZPc12GYpILsPJo/i
HgDC0kEg
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"DivideCellsIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{2., 
     12.}, {2., 10.}, {3., 10.}, {3., 11.}, {12., 11.}, {12., 10.}, {13., 
     10.}, {13., 12.}, {2., 12.}}, {{12., 7.}, {13., 7.}, {13., 5.}, {2., 
     5.}, {2., 7.}, {3., 7.}, {3., 6.}, {12., 6.}, {12., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}}}, {{{13., 15.}, {13., 14.}, {15., 14.}, {15., 10.}, {16., 
     10.}, {16., 15.}, {13., 15.}}, {{15., 7.}, {16., 7.}, {16., 2.}, {13., 
     2.}, {13., 3.}, {15., 3.}, {15., 7.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx1zDEKg0AQRuFRSbBMYZEixWQQCSJibrBn8AiB1Ll/p5AMxAf/wjB8y9u9
vz7ruzGzdp/TPrXlWcp3+28/haMcezr7CZ6FAz2d/QMehQM9nX0PD8KBnnax
Q1jd8/0VvgkHejr7y7/9XHXCgZ7O/wxuhQM97WUDWycgDA==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"GroupCellsIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{14., 15.}, {14., 14.}, {15., 14.}, {15., 10.}, {15., 9.}, {15., 
     5.}, {14., 5.}, {14., 4.}, {16., 4.}, {16., 9.}, {16., 10.}, {16., 
     15.}, {14., 15.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.5, 
     13.5}, {9.5, 13.5}, {9.5, 11.5}, {3.5, 11.5}, {3.5, 13.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
     2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{10., 14.}, {3., 14.}, {3., 
     11.}, {10., 11.}, {10., 14.}}, {{9., 12.}, {4., 12.}, {4., 13.}, {9., 
     13.}, {9., 12.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.5, 
     7.5}, {9.5, 7.5}, {9.5, 5.5}, {3.5, 5.5}, {3.5, 7.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
     2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{10., 8.}, {3., 8.}, {3., 
     5.}, {10., 5.}, {10., 8.}}, {{9., 6.}, {4., 6.}, {4., 7.}, {9., 7.}, {9.,
      6.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{13., 10.}, {11., 10.}, {11., 11.}, {
     12., 11.}, {12., 14.}, {11., 14.}, {11., 15.}, {13., 15.}, {13., 
     10.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{13., 4.}, {11., 4.}, {11., 5.}, {
     12., 5.}, {12., 8.}, {11., 8.}, {11., 9.}, {13., 9.}, {13., 4.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"UngroupCellsIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}}}, {{{13., 11.}, {13., 15.}, {11., 15.}, {11., 16.}, {14., 
     16.}, {14., 11.}, {13., 11.}}, {{14., 8.}, {14., 3.}, {11., 3.}, {11., 
     4.}, {13., 4.}, {13., 8.}, {14., 8.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.5, 
     13.5}, {10.5, 13.5}, {10.5, 11.5}, {4.5, 11.5}, {4.5, 13.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
     2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 14.}, {4., 14.}, {4., 
     11.}, {11., 11.}, {11., 14.}}, {{10., 12.}, {5., 12.}, {5., 13.}, {10., 
     13.}, {10., 12.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.5, 
     7.5}, {10.5, 7.5}, {10.5, 5.5}, {4.5, 5.5}, {4.5, 7.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
     2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 8.}, {4., 8.}, {4., 
     5.}, {11., 5.}, {11., 8.}}, {{10., 6.}, {5., 6.}, {5., 7.}, {10., 7.}, {
     10., 6.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{2., 
     9.}, {3., 9.}, {3., 10.}, {2., 10.}, {2., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
     9.}, {5.000999927520752, 9.}, {5.000999927520752, 10.}, {4., 10.}, {4., 
     9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 
     9.}, {7., 9.}, {7., 10.}, {6., 10.}, {6., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 
     9.}, {9., 9.}, {9., 10.}, {8., 10.}, {8., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{10., 
     9.}, {11., 9.}, {11., 10.}, {10., 10.}, {10., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12., 
     9.}, {13., 9.}, {13., 10.}, {12., 10.}, {12., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
     9.}, {15., 9.}, {15., 10.}, {14., 10.}, {14., 9.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"InsertInputIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 8.}, {18., 8.}, {18., 
     9.}, {19., 9.}, {19., 14.}, {18., 14.}, {18., 15.}, {20., 15.}, {20., 
     8.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4.0360002517700195`, 15.}, {4.827000141143799, 15.}, {4.827000141143799, 
     20.999000549316406`}, {4.0360002517700195`, 20.999000549316406`}, {
     4.0360002517700195`, 15.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJpIGZigIBYXRkHIHWguNQYSC+Y+c0NzJ8u/swIRE+Q
XywLpBv+rwgGyTMsOZslD1K3ubALzM9gOK+AzHfw26iEzC9oXKIMosWamMB8
CdmVYH5Q4idDZH7B0/+6IFqjVEkJG78s/TNYPUO+IpjfMsUV7L4FHL8VQbRo
UxOYnxCyCcxf9G4lmP9gcjqYrxN9Eczf8/gLyL0ML88/AfNP7IpA4TN0bJFH
5h8JuiYHooV0roD5V66KyUHcvwnMfxYRDgofhonTJoD5bPcOgcPvhk8KiO/w
PCIczJ/hpIvCh/nPgN9bEhsfGh+o8QMAZM5uaQ==
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4., 9.}, {17., 9.}, {17., 14.}, {4., 14.}, {4., 9.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 
     10.}, {16., 10.}, {16., 13.}, {5., 13.}, {5., 10.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{11., 8.}, {11., 12.}, {10., 12.}, {10., 8.}, {
     7.187000036239624, 8.}, {10.61599999666214, 3.}, {14., 8.}, {11., 
     8.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"InsertInputIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 8.}, {18., 8.}, {18., 
     9.}, {19., 9.}, {19., 14.}, {18., 14.}, {18., 15.}, {20., 15.}, {20., 
     8.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4.0360002517700195`, 15.}, {4.827000141143799, 15.}, {4.827000141143799, 
     20.999000549316406`}, {4.0360002517700195`, 20.999000549316406`}, {
     4.0360002517700195`, 15.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJpIGZigIBYXRkHIHWguNQYSC+Y+c0NzJ8u/swIRE+Q
XywLpBv+rwgGyTMsOZslD1K3ubALzM9gOK+AzHfw26iEzC9oXKIMosWamMB8
CdmVYH5Q4idDZH7B0/+6IFqjVEkJG78s/TNYPUO+IpjfMsUV7L4FHL8VQbRo
UxOYnxCyCcxf9G4lmP9gcjqYrxN9Eczf8/gLyL0ML88/AfNP7IpA4TN0bJFH
5h8JuiYHooV0roD5V66KyUHcvwnMfxYRDgofhonTJoD5bPcOgcPvhk8KiO/w
PCIczJ/hpIvCh/nPgN9bEhsfGh+o8QMAZM5uaQ==
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4., 9.}, {17., 9.}, {17., 14.}, {4., 14.}, {4., 9.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 
     10.}, {16., 10.}, {16., 13.}, {5., 13.}, {5., 10.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 8.}, {11., 12.}, {10., 12.}, {10., 
     8.}, {7.187000036239624, 8.}, {10.61599999666214, 3.}, {14., 8.}, {11., 
     8.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"InsertOutputIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 8.}, {18., 8.}, {18., 
     9.}, {19., 9.}, {19., 14.}, {18., 14.}, {18., 15.}, {20., 15.}, {20., 
     8.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4., 9.}, {17., 9.}, {17., 14.}, {4., 14.}, {4., 9.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 
     10.}, {16., 10.}, {16., 13.}, {5., 13.}, {5., 10.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, {{{11., 8.}, {11., 12.}, {10., 12.}, {10., 8.}, {
     7.187000036239624, 8.}, {10.61599999666214, 3.}, {14., 8.}, {11., 
     8.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQPdu2QdwDSDY4GRg5I/M8rH4L5d1K0wHyp25nG
IPrKDl45EP0o8ASYf4bnowyI3uetbgKiT2xLkgbRT5aHwfiSyPwNbAXiyPyA
889EkfUHKJ8SQTafIXu1MLL9BX8kwHx+lmdg9wWcFgDxDeIn2iLzG3L3nTdE
4jMc+64M5heoLwDzffjmGoBog08HwfZ9qLMC8xdseAh2T0LGRn1k91ZM9wPz
XzzPkkTmN1xNl0bmfxD6BA6PGcdWg/kOCzjB4XXC1whs/gRdRXB4PqnpB/EF
dnZuAPO7JEQMkcK/ITPjIDIfEj8AIIRtnQ==
      "], CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQTT+lIUHRgYGnL3nTd0QPAZrvrbgvnr0o3B/Bv+
ew1A9IlpFxRANFdzAJj/1SMPzHd4fFQfSCfMYjkqD+I/qJEH8RmOdUfLgegV
nmv0QPQHoU8yILpjpiWYP0PfRxpEZ+z7rwuiXzzPkkTmb7g7WRyZD9QvCtYn
YwXWf6G3TQRM+68F8ycwSQmDaI1ORbD9HzIYhJDcx9CwwlQQRB8o8wO73+FL
jgCIdjHfCeYvaGcF8y0STA2h+sH8vrxDyHwXM1M9I2T5l5f2Qvh7ksH8Q2ds
jEG0QLY22L4TSqshfMnPghD7JE1ANMN+PrB713zOBfMdvKrB/okQWAHmH3j4
EuzfOR8fgfkT1nSDw8Pg/n8w/8S2JElkvsYnR2lk/pLbL2SQ9R9JCAHHB0fE
ShC/ofTfYXB8xVjnmyDH54Jj0ibI8T2rYC3Y/bD0YHTfHsyHpRej+/uNkPjw
8EFJXwBqOJ5w
      "]}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGZiAIOGCA1NBxDjAos+iN6YMEUDRLfuDtMD0Vpe
u9VBdJQJA5j/Y/pcNWT+is4Nqsh8h7O/VUC0ULArmH/haT2If8Cb/RyYn/GP
GcRv2OMSAbZvQftRZRCteUTQAERXNB4B8xetnYHCPxKbbQyiH2Q4qGLjR52Z
a4DMD9n8Cmy+hOxJMH+JgxPEPo7basj8krC/6kj8hhkx+8D+f3F6HYifwC8t
Bw4f1TxnA2Q+zP4qplla2PgyWpog/z5Y1mmgicRHDW8AyOBYKA==
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGZiAAOFxUb6DkDaobLCxAGJ/yor2xhE71ybYYCN
f2rXDSNk9ej8Hb1qBsh8ho4vILphu6ArmD+hdCOIPvDsXSaYn5DbCqbFzvSB
aYH4CDD98ehZMP0hyglM2+QJGyDzQ4s0Ufjcae5gvkCPF5hfeCYXzC94F4XC
d7DT0APRbx5Yg/kN83jBfFFbbjB/wun/umB/u+zQR+I7MHvyIfMZmD37wPou
NBrrQdRbgGmHFzPB9L69D8HqDlxkAOvbsnsbmO+wdxIK/8ZkdQNkPiw8rzgo
6WDjw+IDph6djx6fYD4A3LV9yw==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"InsertOutputIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20., 8.}, {18., 8.}, {18., 
     9.}, {19., 9.}, {19., 14.}, {18., 14.}, {18., 15.}, {20., 15.}, {20., 
     8.}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     4., 9.}, {17., 9.}, {17., 14.}, {4., 14.}, {4., 9.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 
     10.}, {16., 10.}, {16., 13.}, {5., 13.}, {5., 10.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 8.}, {11., 12.}, {10., 12.}, {10., 
     8.}, {7.187000036239624, 8.}, {10.61599999666214, 3.}, {14., 8.}, {11., 
     8.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
       0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQPdu2QdwDSDY4GRg5I/M8rH4L5d1K0wHyp25nG
IPrKDl45EP0o8ASYf4bnowyI3uetbgKiT2xLkgbRT5aHwfiSyPwNbAXiyPyA
889EkfUHKJ8SQTafIXu1MLL9BX8kwHx+lmdg9wWcFgDxDeIn2iLzG3L3nTdE
4jMc+64M5heoLwDzffjmGoBog08HwfZ9qLMC8xdseAh2T0LGRn1k91ZM9wPz
XzzPkkTmN1xNl0bmfxD6BA6PGcdWg/kOCzjB4XXC1whs/gRdRXB4PqnpB/EF
dnZuAPO7JEQMkcK/ITPjIDIfEj8AIIRtnQ==
      "], CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQTT+lIUHRgYGnL3nTd0QPAZrvrbgvnr0o3B/Bv+
ew1A9IlpFxRANFdzAJj/1SMPzHd4fFQfSCfMYjkqD+I/qJEH8RmOdUfLgegV
nmv0QPQHoU8yILpjpiWYP0PfRxpEZ+z7rwuiXzzPkkTmb7g7WRyZD9QvCtYn
YwXWf6G3TQRM+68F8ycwSQmDaI1ORbD9HzIYhJDcx9CwwlQQRB8o8wO73+FL
jgCIdjHfCeYvaGcF8y0STA2h+sH8vrxDyHwXM1M9I2T5l5f2Qvh7ksH8Q2ds
jEG0QLY22L4TSqshfMnPghD7JE1ANMN+PrB713zOBfMdvKrB/okQWAHmH3j4
EuzfOR8fgfkT1nSDw8Pg/n8w/8S2JElkvsYnR2lk/pLbL2SQ9R9JCAHHB0fE
ShC/ofTfYXB8xVjnmyDH54Jj0ibI8T2rYC3Y/bD0YHTfHsyHpRej+/uNkPjw
8EFJXwBqOJ5w
      "]}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGZiAIOGCA1NBxDjAos+iN6YMEUDRLfuDtMD0Vpe
u9VBdJQJA5j/Y/pcNWT+is4Nqsh8h7O/VUC0ULArmH/haT2If8Cb/RyYn/GP
GcRv2OMSAbZvQftRZRCteUTQAERXNB4B8xetnYHCPxKbbQyiH2Q4qGLjR52Z
a4DMD9n8Cmy+hOxJMH+JgxPEPo7basj8krC/6kj8hhkx+8D+f3F6HYifwC8t
Bw4f1TxnA2Q+zP4qplla2PgyWpog/z5Y1mmgicRHDW8AyOBYKA==
     "]]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGZiAAOFxUb6DkDaobLCxAGJ/yor2xhE71ybYYCN
f2rXDSNk9ej8Hb1qBsh8ho4vILphu6ArmD+hdCOIPvDsXSaYn5DbCqbFzvSB
aYH4CDD98ehZMP0hyglM2+QJGyDzQ4s0Ufjcae5gvkCPF5hfeCYXzC94F4XC
d7DT0APRbx5Yg/kN83jBfFFbbjB/wun/umB/u+zQR+I7MHvyIfMZmD37wPou
NBrrQdRbgGmHFzPB9L69D8HqDlxkAOvbsnsbmO+wdxIK/8ZkdQNkPiw8rzgo
6WDjw+IDph6djx6fYD4A3LV9yw==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CommentIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1,
       3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
      9., 10.}, {15., 10.}, {15., 13.}, {9., 13.}, {9., 10.}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQHvhebOECYClAazG+Y/g7MP/CxCMw/sPiDIlhe
+ziYnyDErAxWl/UHwk9TUwHLrzI0BfPNPVXB+jx9wPyG1xPVkPlAoIEiL5Kn
iaz/gfd2LWTzF8y8qY1sf8PbPzrI7nO4z6+H7P6EDEF9B1T/GYDpsHcQ/go2
sDzDTT+wfQ477umCzT00FeI+7Xaw+Qxr7oD5B+bqa0PNMQObP3GtJjIf5h8Y
/0BekBqy/oSMiyrI5iekVCsj269wV0UJ2X1AfyuguV/BAQDUF1py
      "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOpnE8DhCmAphunMoBohuy/oD5DxqmsoJohbsq
SiD6gEwUM4hOSKlWBqtfI8MI5mdcVIGawwBWlxekhswHAg1kfsLEtZrI+g/M
1ddGNp9Bu10H2X6HHfd0kd3HsIJN3wHV/QZQWgDiHkGwfEJaGlje4T6/HkTf
MU6w/97+0YHaDzZvwcybYPsVNhSxge313q4F1rdpLtj+BpE8TWQ+zD9w+dcT
1ZD1J5h7qiKbn5CmpoJsf4IQszKy+w4s/qCI7P6G6e8U0Pyn4AAAFjFOYw==

      "]}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5.454700469970703, 9.993800163269043}, {4.986700475215912, 10.31680017709732}, {5.896700471639633,
      11.721800208091736`}, {4.499700427055359, 12.322800159454346`}, {4.667700469493866, 
     12.837800025939941`}, {6.127700507640839, 12.409800291061401`}, {6.216700434684753, 
     14.005800247192383`}, {6.782700419425964, 14.005800247192383`}, {6.870700478553772, 
     12.409800291061401`}, {8.332700252532959, 12.837800025939941`}, {8.499700546264648, 
     12.322800159454346`}, {7.10170042514801, 11.721800208091736`}, {8.012700319290161, 
     10.31680017709732}, {7.542700290679932, 9.993800163269043}, {6.498700380325317, 
     11.30180013179779}, {5.454700469970703, 9.993800163269043}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     16.45469856262207, 9.993800163269043}, {15.986698567867279`, 10.31680017709732}, {16.896698564291,
      11.721800208091736`}, {15.499698519706726`, 12.322800159454346`}, {15.667698562145233`, 
     12.837800025939941`}, {17.127698600292206`, 12.409800291061401`}, {17.21669852733612, 
     14.005800247192383`}, {17.78269851207733, 14.005800247192383`}, {17.87069857120514, 
     12.409800291061401`}, {19.332698345184326`, 12.837800025939941`}, {19.499698638916016`, 
     12.322800159454346`}, {18.101698517799377`, 11.721800208091736`}, {19.01269841194153, 
     10.31680017709732}, {18.5426983833313, 9.993800163269043}, {17.498698472976685`, 
     11.30180013179779}, {16.45469856262207, 9.993800163269043}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CommentIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.3254901960784314, 0.7215686274509804, 0.796078431372549], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1,
       3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
      9., 10.}, {15., 10.}, {15., 13.}, {9., 13.}, {9., 10.}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQHvhebOECYClAazG+Y/g7MP/CxCMw/sPiDIlhe
+ziYnyDErAxWl/UHwk9TUwHLrzI0BfPNPVXB+jx9wPyG1xPVkPlAoIEiL5Kn
iaz/gfd2LWTzF8y8qY1sf8PbPzrI7nO4z6+H7P6EDEF9B1T/GYDpsHcQ/go2
sDzDTT+wfQ477umCzT00FeI+7Xaw+Qxr7oD5B+bqa0PNMQObP3GtJjIf5h8Y
/0BekBqy/oSMiyrI5iekVCsj269wV0UJ2X1AfyuguV/BAQDUF1py
      "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOpnE8DhCmAphunMoBohuy/oD5DxqmsoJohbsq
SiD6gEwUM4hOSKlWBqtfI8MI5mdcVIGawwBWlxekhswHAg1kfsLEtZrI+g/M
1ddGNp9Bu10H2X6HHfd0kd3HsIJN3wHV/QZQWgDiHkGwfEJaGlje4T6/HkTf
MU6w/97+0YHaDzZvwcybYPsVNhSxge313q4F1rdpLtj+BpE8TWQ+zD9w+dcT
1ZD1J5h7qiKbn5CmpoJsf4IQszKy+w4s/qCI7P6G6e8U0Pyn4AAAFjFOYw==

      "]}]}, 
   {FaceForm[{RGBColor[0.3254901960784314, 0.7215686274509804, 0.796078431372549], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     5.454700469970703, 9.993800163269043}, {4.986700475215912, 10.31680017709732}, {5.896700471639633,
      11.721800208091736`}, {4.499700427055359, 12.322800159454346`}, {4.667700469493866, 
     12.837800025939941`}, {6.127700507640839, 12.409800291061401`}, {6.216700434684753, 
     14.005800247192383`}, {6.782700419425964, 14.005800247192383`}, {6.870700478553772, 
     12.409800291061401`}, {8.332700252532959, 12.837800025939941`}, {8.499700546264648, 
     12.322800159454346`}, {7.10170042514801, 11.721800208091736`}, {8.012700319290161, 
     10.31680017709732}, {7.542700290679932, 9.993800163269043}, {6.498700380325317, 
     11.30180013179779}, {5.454700469970703, 9.993800163269043}}}]}, 
   {FaceForm[{RGBColor[0.3254901960784314, 0.7215686274509804, 0.796078431372549], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
     1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     16.45469856262207, 9.993800163269043}, {15.986698567867279`, 10.31680017709732}, {16.896698564291,
      11.721800208091736`}, {15.499698519706726`, 12.322800159454346`}, {15.667698562145233`, 
     12.837800025939941`}, {17.127698600292206`, 12.409800291061401`}, {17.21669852733612, 
     14.005800247192383`}, {17.78269851207733, 14.005800247192383`}, {17.87069857120514, 
     12.409800291061401`}, {19.332698345184326`, 12.837800025939941`}, {19.499698638916016`, 
     12.322800159454346`}, {18.101698517799377`, 11.721800208091736`}, {19.01269841194153, 
     10.31680017709732}, {18.5426983833313, 9.993800163269043}, {17.498698472976685`, 
     11.30180013179779}, {16.45469856262207, 9.993800163269043}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"ExtendSelectionIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.7490196078431373, 0.7490196078431373, 0.7490196078431373], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     7., 9.}, {18., 9.}, {18., 16.}, {7., 16.}, {7., 9.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ7IGZigAE9ByDhYM4p5YDEP1XxUgJEJzydoAuiv/z/
Lw6iGbXZUfgZ1vHayPwDX19oguj9C49KQs0D89ecKJMB0RZc4hrI8guOLFBD
1v/hyg8VZP4GqXwUPhCoILsPxkdyP5i/7auGNLL+njwhGWTzYfwJOcvVkPkP
VNjA7rtRJSIPNk+bHcwXiEpRROZbJKSi8D0eo/ILXqah8C+c8TFA5j/w90Xh
J0xE5ReI+BkguyfgoZUhsnsvLP1tiOwfGB/mXxgfFh4CLGZGyHyFTbUo/AsL
jxoh6wcCY2TzYXxYfMH4sPgUuNkHMw8c3wH9j8D2w9IDTB6WXmD6YekJxoel
NxifAZoeYe6D8ZHcr4fsP5h+mP9h5sP4FZMjtJH5Crd/aiKHL8PVH2A+LPxh
fHj8QPnw+IPy4fEL0w+Lfygfnj6gfHj6gfJh6QvmHlj6g7kXlj5h/oHxYf6F
8WHhAUv/DMj5GwAsQNIj
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 10.}, {6., 
     15.}, {3., 12.5}, {6., 10.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 10.}, {19., 
     15.}, {22., 12.5}, {19., 10.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"ExtendSelectionIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.6941176470588235, 0.8431372549019608, 1.], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     7., 9.}, {18., 9.}, {18., 16.}, {7., 16.}, {7., 9.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ7IGZigAE9ByDhYM4p5YDEP1XxUgJEJzydoAuiv/z/
Lw6iGbXZUfgZ1vHayPwDX19oguj9C49KQs0D89ecKJMB0RZc4hrI8guOLFBD
1v/hyg8VZP4GqXwUPhCoILsPxkdyP5i/7auGNLL+njwhGWTzYfwJOcvVkPkP
VNjA7rtRJSIPNk+bHcwXiEpRROZbJKSi8D0eo/ILXqah8C+c8TFA5j/w90Xh
J0xE5ReI+BkguyfgoZUhsnsvLP1tiOwfGB/mXxgfFh4CLGZGyHyFTbUo/AsL
jxoh6wcCY2TzYXxYfMH4sPgUuNkHMw8c3wH9j8D2w9IDTB6WXmD6YekJxoel
NxifAZoeYe6D8ZHcr4fsP5h+mP9h5sP4FZMjtJH5Crd/aiKHL8PVH2A+LPxh
fHj8QPnw+IPy4fEL0w+Lfygfnj6gfHj6gfJh6QvmHlj6g7kXlj5h/oHxYf6F
8WHhAUv/DMj5GwAsQNIj
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6., 10.}, {6., 
     15.}, {3., 12.5}, {6., 10.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 10.}, {19., 
     15.}, {22., 12.5}, {19., 10.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"IconizeIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17.5, 5.}, {7.5, 5.}, {
     5.570000648498535, 5.}, {4., 6.570000052452087}, {4., 8.5}, {4., 14.5}, {
     4., 16.429999351501465`}, {5.570000648498535, 18.}, {7.5, 18.}, {17.5, 
     18.}, {19.430000066757202`, 18.}, {21., 16.429999351501465`}, {21., 
     14.5}, {21., 8.5}, {21., 6.570000052452087}, {19.430000066757202`, 5.}, {
     17.5, 5.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{7.5, 17.}, {6.121999979019165, 
     17.}, {5., 15.878000020980835`}, {5., 14.5}, {5., 8.5}, {5., 
     7.121999740600586}, {6.121999979019165, 6.}, {7.5, 6.}, {17.5, 6.}, {
     18.878000259399414`, 6.}, {20., 7.121999740600586}, {20., 8.5}, {20., 
     14.5}, {20., 15.878000020980835`}, {18.878000259399414`, 17.}, {17.5, 
     17.}, {7.5, 17.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGAAYV4gZmKAggYDBwhDC0QnCUToI/OBQA9Ez3u/XAOZDwTq
yPwMgQhVNP0qDqjmg/nnvwcbosozGCHrh/GRzDdCth9Jvxaa+TD3KiLzGxQ2
yKHJy6D5RwbNPhlk9yDph7lXEZm/4P1yJTR5FTT/wMTVkfkw+5H0Y3U/EGgi
84HqtdDkddD8o4Nmnw6ye5D0w9ylicxPEIhQR5NXQ/OPGpr5asj2I+nHdD8A
dYhHvw==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"IconizeIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17.5, 5.}, {7.5, 5.}, {
     5.570000648498535, 5.}, {4., 6.570000052452087}, {4., 8.5}, {4., 14.5}, {
     4., 16.429999351501465`}, {5.570000648498535, 18.}, {7.5, 18.}, {17.5, 
     18.}, {19.430000066757202`, 18.}, {21., 16.429999351501465`}, {21., 
     14.5}, {21., 8.5}, {21., 6.570000052452087}, {19.430000066757202`, 5.}, {
     17.5, 5.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{7.5, 17.}, {6.121999979019165, 
     17.}, {5., 15.878000020980835`}, {5., 14.5}, {5., 8.5}, {5., 
     7.121999740600586}, {6.121999979019165, 6.}, {7.5, 6.}, {17.5, 6.}, {
     18.878000259399414`, 6.}, {20., 7.121999740600586}, {20., 8.5}, {20., 
     14.5}, {20., 15.878000020980835`}, {18.878000259399414`, 17.}, {17.5, 
     17.}, {7.5, 17.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGAAYV4gZmKAggYDBwhDC0QnCUToI/OBQA9Ez3u/XAOZDwTq
yPwMgQhVNP0qDqjmg/nnvwcbosozGCHrh/GRzDdCth9Jvxaa+TD3KiLzGxQ2
yKHJy6D5RwbNPhlk9yDph7lXEZm/4P1yJTR5FTT/wMTVkfkw+5H0Y3U/EGgi
84HqtdDkddD8o4Nmnw6ye5D0w9ylicxPEIhQR5NXQ/OPGpr5asj2I+nHdD8A
dYhHvw==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"Ctrl=Icon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{16.5, 19.}, {
     17.328000009059906`, 19.}, {18., 18.328000009059906`}, {18., 17.5}, {18.,
      7.5}, {18., 6.671998977661133}, {17.328000009059906`, 6.}, {16.5, 6.}, {
     9.5, 6.}, {8.67199993133545, 6.}, {8., 6.671998977661133}, {8., 7.5}, {
     8., 17.5}, {8., 18.328000009059906`}, {8.67199993133545, 19.}, {9.5, 
     19.}, {16.5, 19.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{16.5, 18.}, {16.776000022888184`, 
     18.}, {17., 17.776000007987022`}, {17., 17.5}, {17., 7.5}, {17., 
     7.224000930786133}, {16.776000022888184`, 7.}, {16.5, 7.}, {9.5, 7.}, {
     9.223999977111816, 7.}, {9., 7.224000930786133}, {9., 7.5}, {9., 17.5}, {
     9., 17.776000007987022`}, {9.223999977111816, 18.}, {9.5, 18.}, {16.5, 
     18.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{5., 14.}, {5., 11.}, {5., 
     9.894999980926514}, {5.894999980926514, 9.}, {7., 9.}, {11., 9.}, {
     12.105000019073486`, 9.}, {13., 9.894999980926514}, {13., 11.}, {13., 
     14.}, {13., 15.105000019073486`}, {12.105000019073486`, 16.}, {11., 
     16.}, {7., 16.}, {5.894999980926514, 16.}, {5., 15.105000019073486`}, {
     5., 14.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 13.}, {11., 13.}, {11., 
     14.}, {7., 14.}, {7., 13.}}, {{7., 11.}, {11., 11.}, {11., 12.}, {7., 
     12.}, {7., 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"Ctrl=IconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{16.5, 19.}, {
     17.328000009059906`, 19.}, {18., 18.328000009059906`}, {18., 17.5}, {18.,
      7.5}, {18., 6.671998977661133}, {17.328000009059906`, 6.}, {16.5, 6.}, {
     9.5, 6.}, {8.67199993133545, 6.}, {8., 6.671998977661133}, {8., 7.5}, {
     8., 17.5}, {8., 18.328000009059906`}, {8.67199993133545, 19.}, {9.5, 
     19.}, {16.5, 19.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{16.5, 18.}, {16.776000022888184`, 
     18.}, {17., 17.776000007987022`}, {17., 17.5}, {17., 7.5}, {17., 
     7.224000930786133}, {16.776000022888184`, 7.}, {16.5, 7.}, {9.5, 7.}, {
     9.223999977111816, 7.}, {9., 7.224000930786133}, {9., 7.5}, {9., 17.5}, {
     9., 17.776000007987022`}, {9.223999977111816, 18.}, {9.5, 18.}, {16.5, 
     18.}}}]}, 
   {FaceForm[{RGBColor[0.9921568627450981, 0.4627450980392157, 0.], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{5., 14.}, {5., 11.}, {5., 
     9.894999980926514}, {5.894999980926514, 9.}, {7., 9.}, {11., 9.}, {
     12.105000019073486`, 9.}, {13., 9.894999980926514}, {13., 11.}, {13., 
     14.}, {13., 15.105000019073486`}, {12.105000019073486`, 16.}, {11., 
     16.}, {7., 16.}, {5.894999980926514, 16.}, {5., 15.105000019073486`}, {
     5., 14.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{7., 13.}, {11., 13.}, {11., 
     14.}, {7., 14.}, {7., 13.}}, {{7., 11.}, {11., 11.}, {11., 12.}, {7., 
     12.}, {7., 11.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"TextBold" -> (GraphicsBox[
  {Thickness[0.09090909090909091], #,
   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQPGO4JOwBpBzkxXhDd52EvAqK9vu7kBtELFvwA
8yXe8oL5MaI8Ysh8DxtbCWT+jsrjkiD6gYUrD4juOL5SCkTnXdjMB6ITRHuk
QbSK1SQBEB2w/y+Y3zDPVwiZP0GxTwRF3uuVOIi2eMIM5gtsVQOb+0FXAGJf
lBNYvEDyEVhdQv4HMP/EH3awew+EOMoA6YajFxvA/hXgNkXhv2OLB7sn8lUL
mP9DUIQfRK9etBjMf7rzFjh8UMILAKisSdE=
     "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQKPV6SDkDawUFYHkRPKHaTAtEJ/5gVQLRC4mEw
/4HIXRT+gcciSsh8A6/fYP6M0kIwv+HmXmUQXTDjDNj8Bd3RKmBzD2qA+R8O
/ATzH4S9EQfRDLM8VMHiEeJiyHyJLnlRZP6zxmIRMF/SGMQ/YG4lBOYLyHKC
5bs+bRAG8+fdA5nfcPRiA5jvcHEiCv/BHmUU/oEVS2RBdIBwohgyf8cSPwkQ
faFZTs4BPbwA7NhK9A==
     "], CompressedData["
1:eJxTTMoPSmViYGDQBmIQDQQNev//2wPpI5wZXA5A+sDKJiYQ/WZCHZjfUObP
AqJDFl4D8xf8TWUF0RFKOdwg2kHEnh1EH+XM4AHzZ2pxgOiSQE8+ZP6mP+0C
yHyDs7uVkfkM77JVoPaBzduw7RGY7yAxFWyfwxJ5VTD9vAfsnoJGFzA/4chG
sHsP8MWA+TD/GPikofAvPP0P5u/5FSPmgMRPmKYoicw3SM6TBtEPcq6B+R+i
nGTB9lY3g/kLOKIVwPZffQ5234ot5opgc9acVkbmNzTrKyHzDRaZgGkB6Xtg
/Q6/csH0jedaYFpBcJs8iA7IfC8Htl93ApjeEJANtn/B+atgmqPtJNh9E761
ofA3BImB+QL3msB0gcd+GbD7rzOCzX1wUwfMv7FHGWyfAG8CWF+DbiLEvfPO
wsIBzN9QO1ccmb9gyTkRZH7AG30hSDikg/l/jAXB8bvD3AJs/uF7D8Dp4YOu
ANgfPaHzOcHuNXomBaIlpv8Hx/OTxs9iyHxYfKHzwekTAJRRq0A=
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{14., 18.}, {14., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 11.5}, {-0.5, 15.5}}]&),

"TextItalic" -> (GraphicsBox[
  {Thickness[0.09090909090909091], #, FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 
    3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
    0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGZigAEOByChcLuSC0TzMGmD6AaTzoNg/pLZR7hB
tMhNPzB94cwZHhDNcV0ZTFtwXecF0S4Pf4H5EZZb+ED0C7WNYPqGbxI/iM5I
WyYAog22eIiC6I7pfMog+sPKQgg/KwbML8iYCOavKJgL5ic8Xgrmc+hegvBT
dkPU57CrgN2z8ChEvtEUhb+iIBaFb3H3CJjPENYH5keksamC6AVHFMB8DTZF
MJ9Bd5MIiP6hYaMK9a8w2PxVgWD+hrn5QmDzOhNR+B2ODGoOkPBUwMaHqX8Q
/FgOHB4TfSH2NYqC+RG7NMF8h/ZpsiBaguUb2L0OveKykHA8BOYrcKyRAavf
FgzmP/gbAuZn2K4Ch88E121iYPeuuSMIdr9SNJi/5YQZOPwvfA8Wg8QnH5j/
4ZKvGIQ+C44ngXXuYD4wPYD5Bp2OYH7AY1Uw/0ONPZifIHCDD5nvkTQBha+w
4RM4PThsKwbze6a/A6cfB9N7EPd8rgXzgelBHEQXZAiC+Q0iehJAuoE3Yic4
/SnE9EtC3YPKZ2PkgIYvB1Y+SD0A7Ceacg==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{14., 18.}, {14., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 11.5}, {-0.5, 15.5}}]&),

"TextUnderline" -> (GraphicsBox[
  {Thickness[0.09090909090909091], 
   {#, 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{1., 
     2.}, {10., 2.}, {10., 3.}, {1., 3.}, {1., 2.}}}]}, 
   {#, 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJrIGZiAIMH9SdEHSBMDQck/q+6LHUQfWrZT2EQ/fRC
EpivkXhYCES/rbEH8x12q4P5Qs0MYH6GaI8giPbiOaQGoguc7MB8Pl0jFH7K
0wBVZP6DQAtpZP4B94cSIHrDtzYwf0GekDiIvhAkBrbvwJkzYHd2FEqD3bdg
eh6YPq/ODxY/UGYHVvem8bM4Ml+As0samZ8w5Zss2P9hfWD9FzSt5MHiInpi
YPWxb8F8hU1zweacsFRWAOs/tVASme8QZyWDzA95rKqKzGe4+gPMb5j1HWL+
rk5weAS8iATzZ828CeYrmO2RA9GHvmqAw/PCn3aw+9rEIiHhb7ZHGjl+YHx4
/D39r4SND1PPke8I5t9VcQPzI6oPK0LslwTzN3C1gfl6d5+A3cMxywPMP6Kw
Aczf8VATzN9ywgyFLxBRqYrMX1BgK4PMf/A3BByfDc3rweGR8DQAHE8CHSVg
/z9QMACHvwRnF9i/DkkC4HgHxr8U1D8CIPpVWI4YMn+FIp8gMp/B+AgX2Lyq
KZB0VHOBDeyesn0iYPm7W1nAdGs22ByHySuZweobpkog84Hul0bmw9IrjN8z
XQ/s/4ZTRswQ/++ExJ+lKxOI5tP9BOYfWB7OCKLlW7XB4cvg2PTPHkjtKQkG
8xv0/n+3R4ofGJ8BLT+C+QDMNs9L
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{14., 18.}, {14., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 11.5}, {-0.5, 15.5}}]&),

"TextColor" -> (GraphicsBox[
  {Thickness[0.09090909090909091], 
   {#, 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{9.75, 4.}, {1.25, 4.}, {
     1.11199951171875, 4.}, {1., 3.888000003993511}, {1., 3.75}, {1., 1.25}, {
     1., 1.1120002269744873`}, {1.11199951171875, 1.}, {1.25, 1.}, {9.75, 
     1.}, {9.88799999654293, 1.}, {10., 1.1120002269744873`}, {10., 1.25}, {
     10., 3.75}, {10., 3.888000003993511}, {9.88799999654293, 4.}, {9.75, 
     4.}}}]}, 
   {FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.5]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}}}, {{{9., 2.}, {2., 2.}, {2., 3.}, {9., 3.}, {9., 2.}}, {{9.75,
       4.}, {1.25, 4.}, {1.1119999885559082`, 4.}, {1., 
      3.8879997730255127`}, {1., 3.75}, {1., 1.25}, {1., 
      1.1119999885559082`}, {1.1119999885559082`, 1.}, {1.25, 1.}, {9.75, 
      1.}, {9.88800048828125, 1.}, {10., 1.1119999885559082`}, {10., 1.25}, {
      10., 3.75}, {10., 3.8879997730255127`}, {9.88800048828125, 4.}, {9.75, 
      4.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.860800266265869, 
      8.394499778747559}, {4.871800243854523, 10.744499683380127`}, {
      4.784800171852112, 10.744499683380127`}, {3.8568003177642822`, 
      8.394499778747559}, {5.860800266265869, 
      8.394499778747559}}, CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQQH9P7/twfSAuvYJR1A/LrfjCC6QUwSzGfgmcwM
ogN2dYL5Dd4nWED0jaXRUmD+5z5WEJ2w7z6EP381G4gumMosA6IX+MtxgOgV
ckdlQfSWH4aiYHWODFog+sHVMDFkfsKrFnkQfaJipRzYPb1uCiB6g5wr2LwZ
t1eA+RYPd4HtO5HyCsznWMcO5n/I0lYE0Q694RD3i3eA+QLNDGD+haf/IXyo
f+H8ZgYJEO3ybJ0YVj5UfeMHVrD4h78iYL6BxXMwX2CDEZjvtzcITDvsiAPT
Ezz2SyKHn0nfVzD9I/wnCj9i4lopZP6Osn9gfsCLm2C+RlyVNIjumbMIEg+O
CuDwWHK6HmJ+fxOYr7U9EMx/EPgDzP8SIS4JiY9mcPjHi/KA3Xsn8Ac4nB+E
zudF5juIZfGA6CtLo8Hh75C3mBvs3lA/sP4Hsd5gfkLGRbD5B/5P4AKHo8ox
sPsOXDPhgtjHjMIH+l8Kme9g+QUSP91/wXyDLR2w9MYDjW9IelzZBHZfgrU8
xJ8yr/nA/j/ABeZzGKUJIMcPnA+NP3j6RueD1AMAlJWwiQ==
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{14., 18.}, {14., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 11.5}, {-0.5, 15.5}}]&),

"TextBackgroundColor" -> (GraphicsBox[
  {Thickness[0.09090909090909091], 
   {FaceForm[{RGBColor[
    0.8196078431372549, 0.8196078431372549, 0.8196078431372549], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     10., 5.}, {1., 5.}, {1., 14.}, {10., 14.}, {10., 5.}}}]}, 
   {#, 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{9.75, 4.}, {1.25, 4.}, {
     1.11199951171875, 4.}, {1., 3.888000003993511}, {1., 3.75}, {1., 1.25}, {
     1., 1.1120002269744873`}, {1.11199951171875, 1.}, {1.25, 1.}, {9.75, 
     1.}, {9.88799999654293, 1.}, {10., 1.1120002269744873`}, {10., 1.25}, {
     10., 3.75}, {10., 3.888000003993511}, {9.88799999654293, 4.}, {9.75, 
     4.}}}]}, 
   {FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.5]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}}}, {{{9., 2.}, {2., 2.}, {2., 3.}, {9., 3.}, {9., 2.}}, {{9.75,
       4.}, {1.25, 4.}, {1.1119999885559082`, 4.}, {1., 
      3.8879997730255127`}, {1., 3.75}, {1., 1.25}, {1., 
      1.1119999885559082`}, {1.1119999885559082`, 1.}, {1.25, 1.}, {9.75, 
      1.}, {9.88800048828125, 1.}, {10., 1.1119999885559082`}, {10., 1.25}, {
      10., 3.75}, {10., 3.8879997730255127`}, {9.88800048828125, 4.}, {9.75, 
      4.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.860800266265869, 
      8.394499778747559}, {4.871800243854523, 10.744499683380127`}, {
      4.784800171852112, 10.744499683380127`}, {3.8568003177642822`, 
      8.394499778747559}, {5.860800266265869, 
      8.394499778747559}}, CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQQH9P7/twfSAuvYJR1A/LrfjCC6QUwSzGfgmcwM
ogN2dYL5Dd4nWED0jaXRUmD+5z5WEJ2w7z6EP381G4gumMosA6IX+MtxgOgV
ckdlQfSWH4aiYHWODFog+sHVMDFkfsKrFnkQfaJipRzYPb1uCiB6g5wr2LwZ
t1eA+RYPd4HtO5HyCsznWMcO5n/I0lYE0Q694RD3i3eA+QLNDGD+haf/IXyo
f+H8ZgYJEO3ybJ0YVj5UfeMHVrD4h78iYL6BxXMwX2CDEZjvtzcITDvsiAPT
Ezz2SyKHn0nfVzD9I/wnCj9i4lopZP6Osn9gfsCLm2C+RlyVNIjumbMIEg+O
CuDwWHK6HmJ+fxOYr7U9EMx/EPgDzP8SIS4JiY9mcPjHi/KA3Xsn8Ac4nB+E
zudF5juIZfGA6CtLo8Hh75C3mBvs3lA/sP4Hsd5gfkLGRbD5B/5P4AKHo8ox
sPsOXDPhgtjHjMIH+l8Kme9g+QUSP91/wXyDLR2w9MYDjW9IelzZBHZfgrU8
xJ8yr/nA/j/ABeZzGKUJIMcPnA+NP3j6RueD1AMAlJWwiQ==
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{14., 18.}, {14., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 11.5}, {-0.5, 15.5}}]&),

"TextAlignCenter" -> (GraphicsBox[
  {Thickness[0.06666666666666667], #, FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
    2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAMHCKUBpbVw8GE0Aw4+TL0AlFaC0mo4+Cpo
6tH5MPUw8yXQ7EXny6CpR+fD1MPM50BzDzpfgADN4QAACMEPig==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{18., 18.}, {18., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 15.5}, {-0.5, 15.5}}]&),

"TextAlignJustified" -> (GraphicsBox[
  {Thickness[0.06666666666666667], #, FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
    2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAMHCKUBpbVw8GE0Aw6+BhpfCU0dOl8FTT06
XwmNL4GmH50vg6YenS+BxudA04/OF0BTj87ncAAA5RIPOg==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{18., 18.}, {18., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 15.5}, {-0.5, 15.5}}]&),

"TextAlignLeft" -> (GraphicsBox[
  {Thickness[0.06666666666666667], #, FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
    2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAMHCKUBpbVw8GE0Aw6+BhpfCUqr4eCroKlH
5yuh8SXQ7EXny6CpR+dLoPE50NyDzhdAU4/O53AAANzyDyo=
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{18., 18.}, {18., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 15.5}, {-0.5, 15.5}}]&),

"TextAlignRight" -> (GraphicsBox[
  {Thickness[0.06666666666666667], #, FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
    2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAMHCKUBpbVw8GE0Aw4+TL0AlFZCU4fOV0FT
j86HqYeZL4GmH50vg6YenQ9TDzOfA00/Ol+AAM3hAAAQ4Q+a
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{18., 18.}, {18., 18.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 15.5}, {-0.5, 15.5}}]&),

"CodeTextIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.8980392156862745, 0.8980392156862745, 0.8980392156862745], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 5.}, {6., 5.}, {
     4.8949995040893555`, 5.}, {4., 5.894999980926514}, {4., 7.}, {4., 17.}, {
     4., 18.105000495910645`}, {4.8949995040893555`, 19.}, {6., 19.}, {18., 
     19.}, {19.105000019073486`, 19.}, {20., 18.105000495910645`}, {20., 
     17.}, {20., 7.}, {20., 5.894999980926514}, {19.105000019073486`, 5.}, {
     18., 5.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, {{{16., 16.851097106933594`}, {16., 16.158097088336945`}, {
      18.05999994277954, 16.158097088336945`}, {18.05999994277954, 
      8.084096908569336}, {16., 8.084096908569336}, {16., 
      7.391097068786621}, {19., 7.391097068786621}, {19., 
      16.851097106933594`}, {16., 16.851097106933594`}}, {{12., 
      7.391097068786621}, {15., 7.391097068786621}, {15., 
      8.084096908569336}, {12.940999984741211`, 8.084096908569336}, {
      12.940999984741211`, 16.158097088336945`}, {15., 16.158097088336945`}, {
      15., 16.851097106933594`}, {12., 16.851097106933594`}, {12., 
      7.391097068786621}}, CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQQflh9TdmBguPDj1AMDIM2gEOOvAqQN2H9cAvMb
Xl8E8Rfkdx4A8z9c8lUF0g0uTKsg/OXHQPIMFj6l+iB6gXsimM9zdB6Yf6Hs
H8h8Bp9fe8D8Auv5YP6jjPMQ+Z92YH5P1CMw34HruhKIvjXxNZifkJaGwr/w
fbIiMl/h9k8FED3l9nYwv2HyDDBf4lMAmL/hhBmYX8P0Ug9EP1BhA/M7WEJQ
+AqfJugi8zXmvdUB+y9YWQUbX0L6rRayenR+gJ8C2N0OhhzS2Pgw9Qc8eUSx
8TVKL+qgqUfhd6xr1UXmK3jEg/3ToBQN5ldcVwT7HwhkQHTbzTOQ8L27BMx3
WGMNjj+G64tlQfGpWlsH5h/4/FcORN+QWgfmC7Rqg/yzYY71PTA/wJwTFP4H
Srm+gfkOveJKyPyCiWtR+AsKbEHxu6D4/jtYekGkNwDBep1H
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CodeTextIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[1., 0.8392156862745098, 0.45098039215686275`], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 5.}, {6., 5.}, {
     4.8949995040893555`, 5.}, {4., 5.894999980926514}, {4., 7.}, {4., 17.}, {
     4., 18.105000495910645`}, {4.8949995040893555`, 19.}, {6., 19.}, {18., 
     19.}, {19.105000019073486`, 19.}, {20., 18.105000495910645`}, {20., 
     17.}, {20., 7.}, {20., 5.894999980926514}, {19.105000019073486`, 5.}, {
     18., 5.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, {{{16., 16.851097106933594`}, {16., 16.158097088336945`}, {
      18.05999994277954, 16.158097088336945`}, {18.05999994277954, 
      8.084096908569336}, {16., 8.084096908569336}, {16., 
      7.391097068786621}, {19., 7.391097068786621}, {19., 
      16.851097106933594`}, {16., 16.851097106933594`}}, {{12., 
      7.391097068786621}, {15., 7.391097068786621}, {15., 
      8.084096908569336}, {12.940999984741211`, 8.084096908569336}, {
      12.940999984741211`, 16.158097088336945`}, {15., 16.158097088336945`}, {
      15., 16.851097106933594`}, {12., 16.851097106933594`}, {12., 
      7.391097068786621}}, CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQQflh9TdmBguPDj1AMDIM2gEOOvAqQN2H9cAvMb
Xl8E8Rfkdx4A8z9c8lUF0g0uTKsg/OXHQPIMFj6l+iB6gXsimM9zdB6Yf6Hs
H8h8Bp9fe8D8Auv5YP6jjPMQ+Z92YH5P1CMw34HruhKIvjXxNZifkJaGwr/w
fbIiMl/h9k8FED3l9nYwv2HyDDBf4lMAmL/hhBmYX8P0Ug9EP1BhA/M7WEJQ
+AqfJugi8zXmvdUB+y9YWQUbX0L6rRayenR+gJ8C2N0OhhzS2Pgw9Qc8eUSx
8TVKL+qgqUfhd6xr1UXmK3jEg/3ToBQN5ldcVwT7HwhkQHTbzTOQ8L27BMx3
WGMNjj+G64tlQfGpWlsH5h/4/FcORN+QWgfmC7Rqg/yzYY71PTA/wJwTFP4H
Srm+gfkOveJKyPyCiWtR+AsKbEHxu6D4/jtYekGkNwDBep1H
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"TypesettingIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[0.2, 0.2, 0.2], 
   Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxV1G9IE3EYB/CVWQQhUkGSJDbNlu6f2nRToi3zRRh1GoGC2GEuZ8KcqCAy
ySTTwsTS2MwZwohmUV6yZBPJvbA6TGNIxTKrGdabosRIKhy0+z4NboPx3Wd3
+/15fs9ub2VdiXGjRCIpCr+FDL/YO+XZevqYFU69JaSB8z+ezBRyveZ9ptiW
+ZfIr8UJyGCeD3nVEFQLeS5tDB7+cRcO9Dhh91Ad3B9jg58V5cI7C7rpfktI
JWRv+0WYn+2GZ7ubYb80EV5crqfrv1xKIRe852EPnwN/MlbDrsFphdh2c0mU
tRUTciHNoSa4y6aEt5v7aD27RzOEHP/AwdyQCjYVv6U6TLrTaf3bslAH62G4
Km1VLXb/Ax7WL03Ai957MFOVj/Emt9rhFesU7CjrgLtuFmA9jNQK/56fi7Je
U6EQm6n0w6V/LsDaKwbUozy1E5ZxY/Bybw+NdypFJZ7f09gHs34n/GRmA/LS
6VGk9J2O5pFOIhtN9Ug+ZwZ5IndETeMFkI5p6ofkwc/ISL9E6hPpp+C+BoXY
bVPHYXnnGv2+LA2+NTAA+5ok8PorLczeWEBdAk6O+uf7CByvWMV+23ZYYFch
9Yf+sUZO59+CcVZav6HunqSn+J6t7oOZa7vgFSYP9jfXUKbwOEffsVmk5cuh
dPF5qw8G94stuZ8kw3hLLTCXWA77+HE4+bIdVmf/pOsNr+FIv/lexB3Avmxm
mO05CvuSObLRBZuuK7DeIPMXZnVu8pwunfZXiP1yz5vhhE1vYPWWh7SOjlol
rSdA+0ndjHrGx8Zgnl7DsOr/ecDKsT2of3z7ETipo5bO69EZOK7US/1ythU2
sLH0P7rtyBCfN6Ndk4kd2Z+EnkfRz6d//Icdyg==
     "], {{15.86689829826355, 4.}, {10.594898223876953`, 4.}, {
     10.594898223876953`, 4.921999931335449}, {13.024898052215576`, 
     7.494999885559082}, {10.594898223876953`, 9.826000213623047}, {
     10.594898223876953`, 10.724999904632568`}, {15.65889835357666, 
     10.724999904632568`}, {15.65889835357666, 9.926000595092773}, {
     11.66489839553833, 9.926000595092773}, {14.201898574829102`, 
     7.494999885559082}, {11.675898551940918`, 4.798000335693359}, {
     15.86689829826355, 4.798000335693359}, {15.86689829826355, 
     4.}}, CompressedData["
1:eJxV1gtQFHUcB/DNAEFQTkGF64D17vAJeBwJqGMuJTjqVIw64GCDJwKRKRIh
M1GOa2n5TAjxGXhkJT7yAWSXirOhkW8NbHB0kHOQ0czyiSKIxn2/6wzLDPOf
z/1+//d/d/9D0hZNz+glCMKB7n9X2f1nmzchVOou37RlREk9bI2aAYvJ42FD
yiRY+nkMvHLQWFjeaIHnF4XD9v9GwD9uMzMuGeGT+cFs/xs9nKYLYHs3BsAJ
h/zYX1UfODerP+3+Klym94WF5E6zq7xX35cOe6T1jFaN7b+fg0+IOvZfuB9+
1OXP9i8Xwlu3BHI8q7PNPccrjJwC92k0wcopExxbPZz1nc9MrvJBPecv326A
N2db2f+j3fDJaTFs33u5if1x/cSIORrbt3rAV84z3/6Hw4j1arWo67/YyP3g
+irfWY3MH0xPfTrEVTqC3dXxn4IjPe9Y0Z/XFvhoXgPsDP0Yjj9URS9NhpP6
rWN+8niX5czMTKu6v3CaLpZOMLm8XDn9Cn3cKLrKwtrF2Dfn90GwZAsNZf+B
sC7lBtZReTwQFg9UwtLcAbDFYxnjZ/rBFwtmMh7tDSf2C4edJk/YafZg3NsN
to1vxjoq7QIszPoVlus6QvB7XjG9/n4Ix5dhYt4tWPaPYP22RlisbDL2tLPg
Eiz//RdsrzsDS431sK3kOPNPXKBvHmHccQ4Wwis1lhfshIWOnzi+aU+wD1Lq
B4zH2WCh+Xkwypkt6rpugKWWDM5ztA8s//uM9SamB6E0zma/STUGdT2Qp5zt
fA1eMpH1NgXBSuld1suS9BxnGX3snUDk7/4IVrZPCcDvuVmwUNE2uKeV0jKN
5ew4WNmRw7jYPAjli6V0XQEspRUyv8gAC4072P6yEwMRTz/C+PwPYeV+vdpf
MCys+Idx/TV//B7gps6vFJYqg+iSXDoqiuuhT/XnPBK4rjGxcPcDwHXfLTI/
ZhXzcwez/aEH2V6cL/N1l1lf15vt7TXwnLW+8EP84RKNlScNGgsNfbmfbu7s
zzMMVibrYFvJW4wvDWT/xtmMnx/K/osWMh4Zw/z0T3le1iWwveqVzL+bxPys
IvU5yYJFt42wrHyitr+N+cbVnM/oUjp3k8ZC5C8ayxNvsP3izczfEYL9Ed9b
z3zP2bCzfIWo7s/AnuOV41thu34R8z0sPA8z59ENn8G24lmc37Hzg9j+u6K6
Xzxv5fGMr8qBRY84xpNqNJaPmnC+nSMnM98nUt9zPML0m3rOr4n5Rd/ieXE+
fQPPpzLcG8+X03iVNo+BxagqIyzOMajrzffLtEzYnlND5y+EJVsrXZ4H2w57
8X1YVwDn+EfAQvvnrN/9QeC41sK6pK/5PrRtgBN9as3q+rK9AfyuClcr6NZE
WA6oYr6jjM7+Db6302Mo+r/4J9vf9xUsjW3heKs9h6E83A4rbRWwkOKH57Bw
wfvD8fvTcDixJXQE2ne8DUvNviPV+cKWJvMo1F+xFY5NHReG+JaTfA8Icjh8
tpPt17ZFqPuF5y7ALdqirie8Xe8bqc7P5azMTA98r5Q9ZxA/lZ9qVfcPz+Gt
zl1WdTzwuOpbsOzfBPcaNezl9xfnIOF6ivr9/hJun/EF7wO+V2Cr515+76/g
eyrkTjgNOzv2wHX519hemcHoKjdnP6Afl8CWyi7W9wrkd0oQXsd8q6ZqLITl
aSzXlMOOh12a+8k+QwfvQ/3dcS70bo85nooo+Nmu++zv4Bx40po7vH9Er4HX
LrjJ+QYe5Lk8fZ3xufXwrPSrvH/segg/6Lqk3ke8cK4qSy+w/9t+cPcF4uX9
Cp7qU8v2ekfAzy85GA+xwnb9ftaPjVbvrz9w/Inj1PtkseY+e2x7gca47/4P
nnhqXg==
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"TypesettingIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[
   0.5098039215686274, 0.3058823529411765, 0.8823529411764706], Opacity[1.]}],
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxV1G9IE3EYB/CVWQQhUkGSJDbNlu6f2nRToi3zRRh1GoGC2GEuZ8KcqCAy
ySTTwsTS2MwZwohmUV6yZBPJvbA6TGNIxTKrGdabosRIKhy0+z4NboPx3Wd3
+/15fs9ub2VdiXGjRCIpCr+FDL/YO+XZevqYFU69JaSB8z+ezBRyveZ9ptiW
+ZfIr8UJyGCeD3nVEFQLeS5tDB7+cRcO9Dhh91Ad3B9jg58V5cI7C7rpfktI
JWRv+0WYn+2GZ7ubYb80EV5crqfrv1xKIRe852EPnwN/MlbDrsFphdh2c0mU
tRUTciHNoSa4y6aEt5v7aD27RzOEHP/AwdyQCjYVv6U6TLrTaf3bslAH62G4
Km1VLXb/Ax7WL03Ai957MFOVj/Emt9rhFesU7CjrgLtuFmA9jNQK/56fi7Je
U6EQm6n0w6V/LsDaKwbUozy1E5ZxY/Bybw+NdypFJZ7f09gHs34n/GRmA/LS
6VGk9J2O5pFOIhtN9Ug+ZwZ5IndETeMFkI5p6ofkwc/ISL9E6hPpp+C+BoXY
bVPHYXnnGv2+LA2+NTAA+5ok8PorLczeWEBdAk6O+uf7CByvWMV+23ZYYFch
9Yf+sUZO59+CcVZav6HunqSn+J6t7oOZa7vgFSYP9jfXUKbwOEffsVmk5cuh
dPF5qw8G94stuZ8kw3hLLTCXWA77+HE4+bIdVmf/pOsNr+FIv/lexB3Avmxm
mO05CvuSObLRBZuuK7DeIPMXZnVu8pwunfZXiP1yz5vhhE1vYPWWh7SOjlol
rSdA+0ndjHrGx8Zgnl7DsOr/ecDKsT2of3z7ETipo5bO69EZOK7US/1ythU2
sLH0P7rtyBCfN6Ndk4kd2Z+EnkfRz6d//Icdyg==
     "], {{15.86689829826355, 4.}, {10.594898223876953`, 4.}, {
     10.594898223876953`, 4.921999931335449}, {13.024898052215576`, 
     7.494999885559082}, {10.594898223876953`, 9.826000213623047}, {
     10.594898223876953`, 10.724999904632568`}, {15.65889835357666, 
     10.724999904632568`}, {15.65889835357666, 9.926000595092773}, {
     11.66489839553833, 9.926000595092773}, {14.201898574829102`, 
     7.494999885559082}, {11.675898551940918`, 4.798000335693359}, {
     15.86689829826355, 4.798000335693359}, {15.86689829826355, 
     4.}}, CompressedData["
1:eJxV1gtQFHUcB/DNAEFQTkGF64D17vAJeBwJqGMuJTjqVIw64GCDJwKRKRIh
M1GOa2n5TAjxGXhkJT7yAWSXirOhkW8NbHB0kHOQ0czyiSKIxn2/6wzLDPOf
z/1+//d/d/9D0hZNz+glCMKB7n9X2f1nmzchVOou37RlREk9bI2aAYvJ42FD
yiRY+nkMvHLQWFjeaIHnF4XD9v9GwD9uMzMuGeGT+cFs/xs9nKYLYHs3BsAJ
h/zYX1UfODerP+3+Klym94WF5E6zq7xX35cOe6T1jFaN7b+fg0+IOvZfuB9+
1OXP9i8Xwlu3BHI8q7PNPccrjJwC92k0wcopExxbPZz1nc9MrvJBPecv326A
N2db2f+j3fDJaTFs33u5if1x/cSIORrbt3rAV84z3/6Hw4j1arWo67/YyP3g
+irfWY3MH0xPfTrEVTqC3dXxn4IjPe9Y0Z/XFvhoXgPsDP0Yjj9URS9NhpP6
rWN+8niX5czMTKu6v3CaLpZOMLm8XDn9Cn3cKLrKwtrF2Dfn90GwZAsNZf+B
sC7lBtZReTwQFg9UwtLcAbDFYxnjZ/rBFwtmMh7tDSf2C4edJk/YafZg3NsN
to1vxjoq7QIszPoVlus6QvB7XjG9/n4Ix5dhYt4tWPaPYP22RlisbDL2tLPg
Eiz//RdsrzsDS431sK3kOPNPXKBvHmHccQ4Wwis1lhfshIWOnzi+aU+wD1Lq
B4zH2WCh+Xkwypkt6rpugKWWDM5ztA8s//uM9SamB6E0zma/STUGdT2Qp5zt
fA1eMpH1NgXBSuld1suS9BxnGX3snUDk7/4IVrZPCcDvuVmwUNE2uKeV0jKN
5ew4WNmRw7jYPAjli6V0XQEspRUyv8gAC4072P6yEwMRTz/C+PwPYeV+vdpf
MCys+Idx/TV//B7gps6vFJYqg+iSXDoqiuuhT/XnPBK4rjGxcPcDwHXfLTI/
ZhXzcwez/aEH2V6cL/N1l1lf15vt7TXwnLW+8EP84RKNlScNGgsNfbmfbu7s
zzMMVibrYFvJW4wvDWT/xtmMnx/K/osWMh4Zw/z0T3le1iWwveqVzL+bxPys
IvU5yYJFt42wrHyitr+N+cbVnM/oUjp3k8ZC5C8ayxNvsP3izczfEYL9Ed9b
z3zP2bCzfIWo7s/AnuOV41thu34R8z0sPA8z59ENn8G24lmc37Hzg9j+u6K6
Xzxv5fGMr8qBRY84xpNqNJaPmnC+nSMnM98nUt9zPML0m3rOr4n5Rd/ieXE+
fQPPpzLcG8+X03iVNo+BxagqIyzOMajrzffLtEzYnlND5y+EJVsrXZ4H2w57
8X1YVwDn+EfAQvvnrN/9QeC41sK6pK/5PrRtgBN9as3q+rK9AfyuClcr6NZE
WA6oYr6jjM7+Db6302Mo+r/4J9vf9xUsjW3heKs9h6E83A4rbRWwkOKH57Bw
wfvD8fvTcDixJXQE2ne8DUvNviPV+cKWJvMo1F+xFY5NHReG+JaTfA8Icjh8
tpPt17ZFqPuF5y7ALdqirie8Xe8bqc7P5azMTA98r5Q9ZxA/lZ9qVfcPz+Gt
zl1WdTzwuOpbsOzfBPcaNezl9xfnIOF6ivr9/hJun/EF7wO+V2Cr515+76/g
eyrkTjgNOzv2wHX519hemcHoKjdnP6Afl8CWyi7W9wrkd0oQXsd8q6ZqLITl
aSzXlMOOh12a+8k+QwfvQ/3dcS70bo85nooo+Nmu++zv4Bx40po7vH9Er4HX
LrjJ+QYe5Lk8fZ3xufXwrPSrvH/segg/6Lqk3ke8cK4qSy+w/9t+cPcF4uX9
Cp7qU8v2ekfAzy85GA+xwnb9ftaPjVbvrz9w/Inj1PtkseY+e2x7gca47/4P
nnhqXg==
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"TeXIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[1]}],
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{19., 19.}, {5., 19.}, {
     3.8949995040893555`, 19.}, {3., 18.105000019073486`}, {3., 17.}, {3., 
     7.}, {3., 5.8949995040893555`}, {3.8949995040893555`, 5.}, {5., 5.}, {
     19., 5.}, {20.105000019073486`, 5.}, {21., 5.8949995040893555`}, {21., 
     7.}, {21., 17.}, {21., 18.105000019073486`}, {20.105000019073486`, 
     19.}, {19., 19.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 18.}, {19.550999999046326`, 
     18.}, {20., 17.550999999046326`}, {20., 17.}, {20., 7.}, {20., 
     6.448999404907227}, {19.550999999046326`, 6.}, {19., 6.}, {5., 6.}, {
     4.448999404907227, 6.}, {4., 6.448999404907227}, {4., 7.}, {4., 17.}, {
     4., 17.550999999046326`}, {4.448999404907227, 18.}, {5., 18.}, {19., 
     18.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxt1w9MVVUcB/CrToNlExVQQORy+SO8J/AgVCC1k39KQ2siEzYF30NFZ2Rg
acSwjsWcMJ1vloY47YlmOmeQRKOFef1TMlJoKon2Zk9oCcowTVPDSfd+z/2x
+5xu7rcP9777zv2dc37n98Lz3slYMUSSpMHa/3wjav9cfFES06I6dPsELfLU
YBuce/8RnLe+P1Fcz4jRY8iOM/Clul3wxbpy+KbjOjx8Wjq86lxorLjPF16+
/k3Yv/usTY958kb4lK0cfpxWC7sr5sO2mW64cP9IeHm6jwV/7z+ZoMcl91Ph
2unvw34/FsJj+6zwt0O+gturhsHtvl1ezm5Osnpdr9sFVzoTYDnwJiyXboTn
3ImYqEfXyouw/VwOXNkvY3yb+0rgno58L5eW1Hv5jaYHsHwrD75WEZdojAcu
mL9M5LtmCNzh2Q37+Z+wis9fhg/wfN32hJkFmC9PxXHcP2+PmD/Xb8lxegxV
b+F+l6USro/fK8z/gn9fmg87L4yP12NVvwwfGjQVvpvShvH+mpPu5drWdYiR
BT7PdGHLHNzvo+xBvlJup8DFFfEi39dk2Pn9L4gxBQ8xHvWtWLjJXR8n5vMI
YnFkFuKhlQsRtfWB95UX/If4t8OB2P7TecTCR61WsyW/WC8vX78N62HOxHuG
R8Bqz3Q8//GIw1h/dlsFXHl4BtxVdBPmX/ZgvRcn2zHean4Qlh60wWcW22OM
8Yr19l4knL2pXazf5rv6/pK2XIhHvtbuPwm7K97Wrezud04Q+TyE690OB7xm
fqduPvlMIpy0ZjTma8eHfdFi3KnwS8EqPK0wF25JKoOXykVw7v1UL3c5rkeZ
XdZXAv+zbEmieG4svPNwErzki1uRmPejPnBD/Nfwx33NNiO/8JMRH3i5caji
5cq0fciHO7kGTrH4Jojn9cLtQUVincTE4fs9IW7kv7GsNErcP5fWQ5Qxf5jP
qbNfw+fZkb1wyu2HEXjuieG4P7v5WIT4fDnc5F4nrn821FiPKXQdZrOfixDz
OdqoB50K8la0WtSL1edh57LjcG1WsyLmT+wHHn3Ky34tu8L0SPvpaTfUnFaE
A5Bf29g2OFdeAHuSb8MhO8rE9ZnjIsQ8XYF5yQrdvPFqsKjvV5t1s4t1c2Gf
G/P0/KjdW4phVtiiW6v/TlirT1FmV13yjTZbq6/wsBulsBJowXp86jyR2KCj
itlSyyPFfD9PliNMzxuw8X0DNsYjqUF3FNN4tXr8qWJ6H4nXT1JM76t98Fi4
KR+SbPENN+fLxaplcz49RRbZnG+1MzPMPB9kmi9eGz7uWab5ls6WhOiR1oPa
eSkY4zDWC2uNhmk98cxRQfi7sd5Y7PNj9UjrUbs+Ro+0XtlHQYF6pPXMFk0L
0COtd35lg78eB/ZD5vZA8f7GfpnSgOfRfuIvduD7aL+xzFEYH+1Had0MvA/t
V2nMZrwv7Wf15T9DzZZ6rWFm2xePlMXzRL2QF66AqZ5ITQ0w1RuVdcBUj8hU
r8hUz7inEaZ65wlbC1M9tLujYaqX6qSt+vgG6imv3Tdej1RvufU7/X0G6rH0
+g94X6rX6vBvkA+q56z1IPJF9V7qPYL5pPNAXaUiv3ReaOsB+afzhNv9YTpv
tPkLFPkQ5xHL7goQ+RTnlbRlt+FtXqbzjkznIau+B9N5qY2X1oPwv1n4fjpv
+eUMjJfOY/bu53gfOq+lgBy8L53n0qw05IPOe9oP1A+QqV+g/fS0qd9g/a9g
vqgfUU+cg6lfsedMxX6mfobxy8JGv8PTHAps9EP2Te0w9UsuZw3uN/opST05
BaZ+y1P1M76P+jFXwGKY+jUW/gfGS/2c2t2G9UP9npb/ULP5k0/Gma3lH/mi
fpI9HAxTv8nCl4p6YfSjfNILIt9Gv0qmfnbgutHvavMJUz/MNvTC1C9r4xHr
1+in1a2viv1s9NvcOhnjp35cOh2J96N+nR0Iw/tTP+9aORr5oX5fLtkJ0+8B
7TryS78XmKUcpt8Tas8TmH5v2JPtmC/j94j3efI//3QEwA==
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[0.65]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ1IGZiAIMHTCeVHCBMMM0TH6EGomfMlFQH0S3FbMog
esLri9oQfpsqMn+G4jmw+gmHvmqC6Ajx72D+j5UbwfwDK1TA5vyoywLzN5wP
BfM3uCuC+Ssq28H8DIEbGiDaY8o2MF8jph/Mr5jzCMwXWOeuATUfhT+jXEYD
WX1CritE32SIeQt+FIJpjuvKYPteNM+DiEvlQ+0/DuG7boPI33wDccfDXxD5
86JayP69ENKog8zv8NICq/uhcQfs74Kj+3SQw7PgqJ0WMj/h8GWw+TcWfwCH
64JFi8H8GntTFbC7PxWA+Ts+14L5GjttwPwzZ86oQNzLDuY/WCqtCjUPEn5p
aWC+Au8CML9CZB2YbzGpG4XP0RWPon7FD0MwX0JfFszXeMIMiffXF1Ug8XUV
7C8G7XYwP+LgCjBf5bYlmK+yswbMV2h9DfYPQ4eJKrJ/UdIXAM7akvI=
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"TeXIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{19., 19.}, {5., 19.}, {
     3.8949995040893555`, 19.}, {3., 18.105000019073486`}, {3., 17.}, {3., 
     7.}, {3., 5.8949995040893555`}, {3.8949995040893555`, 5.}, {5., 5.}, {
     19., 5.}, {20.105000019073486`, 5.}, {21., 5.8949995040893555`}, {21., 
     7.}, {21., 17.}, {21., 18.105000019073486`}, {20.105000019073486`, 
     19.}, {19., 19.}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 18.}, {19.550999999046326`, 
     18.}, {20., 17.550999999046326`}, {20., 17.}, {20., 7.}, {20., 
     6.448999404907227}, {19.550999999046326`, 6.}, {19., 6.}, {5., 6.}, {
     4.448999404907227, 6.}, {4., 6.448999404907227}, {4., 7.}, {4., 17.}, {
     4., 17.550999999046326`}, {4.448999404907227, 18.}, {5., 18.}, {19., 
     18.}}}]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
      3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxt1w9MVVUcB/CrToNlExVQQORy+SO8J/AgVCC1k39KQ2siEzYF30NFZ2Rg
acSwjsWcMJ1vloY47YlmOmeQRKOFef1TMlJoKon2Zk9oCcowTVPDSfd+z/2x
+5xu7rcP9777zv2dc37n98Lz3slYMUSSpMHa/3wjav9cfFES06I6dPsELfLU
YBuce/8RnLe+P1Fcz4jRY8iOM/Clul3wxbpy+KbjOjx8Wjq86lxorLjPF16+
/k3Yv/usTY958kb4lK0cfpxWC7sr5sO2mW64cP9IeHm6jwV/7z+ZoMcl91Ph
2unvw34/FsJj+6zwt0O+gturhsHtvl1ezm5Osnpdr9sFVzoTYDnwJiyXboTn
3ImYqEfXyouw/VwOXNkvY3yb+0rgno58L5eW1Hv5jaYHsHwrD75WEZdojAcu
mL9M5LtmCNzh2Q37+Z+wis9fhg/wfN32hJkFmC9PxXHcP2+PmD/Xb8lxegxV
b+F+l6USro/fK8z/gn9fmg87L4yP12NVvwwfGjQVvpvShvH+mpPu5drWdYiR
BT7PdGHLHNzvo+xBvlJup8DFFfEi39dk2Pn9L4gxBQ8xHvWtWLjJXR8n5vMI
YnFkFuKhlQsRtfWB95UX/If4t8OB2P7TecTCR61WsyW/WC8vX78N62HOxHuG
R8Bqz3Q8//GIw1h/dlsFXHl4BtxVdBPmX/ZgvRcn2zHean4Qlh60wWcW22OM
8Yr19l4knL2pXazf5rv6/pK2XIhHvtbuPwm7K97Wrezud04Q+TyE690OB7xm
fqduPvlMIpy0ZjTma8eHfdFi3KnwS8EqPK0wF25JKoOXykVw7v1UL3c5rkeZ
XdZXAv+zbEmieG4svPNwErzki1uRmPejPnBD/Nfwx33NNiO/8JMRH3i5caji
5cq0fciHO7kGTrH4Jojn9cLtQUVincTE4fs9IW7kv7GsNErcP5fWQ5Qxf5jP
qbNfw+fZkb1wyu2HEXjuieG4P7v5WIT4fDnc5F4nrn821FiPKXQdZrOfixDz
OdqoB50K8la0WtSL1edh57LjcG1WsyLmT+wHHn3Ky34tu8L0SPvpaTfUnFaE
A5Bf29g2OFdeAHuSb8MhO8rE9ZnjIsQ8XYF5yQrdvPFqsKjvV5t1s4t1c2Gf
G/P0/KjdW4phVtiiW6v/TlirT1FmV13yjTZbq6/wsBulsBJowXp86jyR2KCj
itlSyyPFfD9PliNMzxuw8X0DNsYjqUF3FNN4tXr8qWJ6H4nXT1JM76t98Fi4
KR+SbPENN+fLxaplcz49RRbZnG+1MzPMPB9kmi9eGz7uWab5ls6WhOiR1oPa
eSkY4zDWC2uNhmk98cxRQfi7sd5Y7PNj9UjrUbs+Ro+0XtlHQYF6pPXMFk0L
0COtd35lg78eB/ZD5vZA8f7GfpnSgOfRfuIvduD7aL+xzFEYH+1Had0MvA/t
V2nMZrwv7Wf15T9DzZZ6rWFm2xePlMXzRL2QF66AqZ5ITQ0w1RuVdcBUj8hU
r8hUz7inEaZ65wlbC1M9tLujYaqX6qSt+vgG6imv3Tdej1RvufU7/X0G6rH0
+g94X6rX6vBvkA+q56z1IPJF9V7qPYL5pPNAXaUiv3ReaOsB+afzhNv9YTpv
tPkLFPkQ5xHL7goQ+RTnlbRlt+FtXqbzjkznIau+B9N5qY2X1oPwv1n4fjpv
+eUMjJfOY/bu53gfOq+lgBy8L53n0qw05IPOe9oP1A+QqV+g/fS0qd9g/a9g
vqgfUU+cg6lfsedMxX6mfobxy8JGv8PTHAps9EP2Te0w9UsuZw3uN/opST05
BaZ+y1P1M76P+jFXwGKY+jUW/gfGS/2c2t2G9UP9npb/ULP5k0/Gma3lH/mi
fpI9HAxTv8nCl4p6YfSjfNILIt9Gv0qmfnbgutHvavMJUz/MNvTC1C9r4xHr
1+in1a2viv1s9NvcOhnjp35cOh2J96N+nR0Iw/tTP+9aORr5oX5fLtkJ0+8B
7TryS78XmKUcpt8Tas8TmH5v2JPtmC/j94j3efI//3QEwA==
     "]]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    0.65]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 
     3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ1IGZiAIMHTCeVHCBMMM0TH6EGomfMlFQH0S3FbMog
esLri9oQfpsqMn+G4jmw+gmHvmqC6Ajx72D+j5UbwfwDK1TA5vyoywLzN5wP
BfM3uCuC+Ssq28H8DIEbGiDaY8o2MF8jph/Mr5jzCMwXWOeuATUfhT+jXEYD
WX1CritE32SIeQt+FIJpjuvKYPteNM+DiEvlQ+0/DuG7boPI33wDccfDXxD5
86JayP69ENKog8zv8NICq/uhcQfs74Kj+3SQw7PgqJ0WMj/h8GWw+TcWfwCH
64JFi8H8GntTFbC7PxWA+Ts+14L5GjttwPwzZ86oQNzLDuY/WCqtCjUPEn5p
aWC+Au8CML9CZB2YbzGpG4XP0RWPon7FD0MwX0JfFszXeMIMiffXF1Ug8XUV
7C8G7XYwP+LgCjBf5bYlmK+yswbMV2h9DfYPQ4eJKrJ/UdIXAM7akvI=
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"DrawIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 15.5}, {18., 6.5}, {18., 
     5.121999740600586}, {16.878000020980835`, 4.}, {15.5, 4.}, {6.5, 4.}, {
     5.121999740600586, 4.}, {4., 5.121999740600586}, {4., 6.5}, {4., 15.5}, {
     4., 16.878000020980835`}, {5.121999740600586, 18.}, {6.5, 18.}, {15.5, 
     18.}, {16.878000020980835`, 18.}, {18., 16.878000020980835`}, {18., 
     15.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 
      3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
      0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{12.5, 17.}, {10.5, 
      17.}, {10.5, 18.}, {12.5, 18.}, {12.5, 17.}}, {{6.076000213623047, 
      16.939001083374023`}, {5.796000003814697, 17.89900016784668}, {
      6.02400016784668, 17.965999603271484`}, {6.26099967956543, 18.}, {6.5, 
      18.}, {8.5, 18.}, {8.5, 17.}, {6.5, 17.}, {6.3560004234313965`, 17.}, {
      6.2129998207092285`, 16.979000091552734`}, {6.076000213623047, 
      16.939001083374023`}}, {{16.218000411987305`, 16.816999435424805`}, {
      15.99899959564209, 16.937000274658203`}, {15.75100040435791, 17.}, {
      15.5, 17.}, {14.5, 17.}, {14.5, 18.}, {15.5, 18.}, {15.918999671936035`,
       18.}, {16.33300018310547, 17.89499855041504}, {16.697999954223633`, 
      17.694000244140625`}, {16.218000411987305`, 16.816999435424805`}}, {{5.,
       14.071000099182129`}, {4., 14.071000099182129`}, {4., 15.5}, {4., 
      15.739999771118164`}, {4.034000396728516, 15.976999282836914`}, {
      4.099999904632568, 16.20400047302246}, {5.059999942779541, 
      15.92300033569336}, {5.019999980926514, 15.786999702453613`}, {5., 
      15.645000457763672`}, {5., 15.5}, {5., 14.071000099182129`}}, {{18., 
      13.643000602722168`}, {17., 13.643000602722168`}, {16.996999740600586`, 
      15.607000350952148`}, {17.993999481201172`, 15.678999900817871`}, {
      17.99799919128418, 15.620000839233398`}, {18., 15.5600004196167}, {18., 
      15.5}, {18., 13.643000602722168`}}, {{5., 10.071000099182129`}, {4., 
      10.071000099182129`}, {4., 12.071000099182129`}, {5., 
      12.071000099182129`}, {5., 10.071000099182129`}}, {{18., 
      9.643000602722168}, {17., 9.643000602722168}, {17., 
      11.643000602722168`}, {18., 11.643000602722168`}, {18., 
      9.643000602722168}}, {{4.057000160217285, 5.968999862670898}, {
      4.019000053405762, 6.1419997215271}, {4., 6.321000099182129}, {4., 
      6.5}, {4., 8.071000099182129}, {5., 8.071000099182129}, {5., 6.5}, {5., 
      6.392000198364258}, {5.011000156402588, 6.284999847412109}, {
      5.034000396728516, 6.180999755859375}, {4.057000160217285, 
      5.968999862670898}}, {{17.77400016784668, 5.460999965667725}, {
      16.86499786376953, 5.87600040435791}, {16.954998016357422`, 
      6.072999954223633}, {17., 6.282999515533447}, {17., 6.5}, {17., 
      7.642999649047852}, {18., 7.642999649047852}, {18., 6.5}, {18., 
      6.138000011444092}, {17.923999786376953`, 5.788999557495117}, {
      17.77400016784668, 5.460999965667725}}, {{7.785999774932861, 4.}, {6.5, 
      4.}, {6.198999881744385, 4.}, {5.90500020980835, 4.052999973297119}, {
      5.625, 4.1579999923706055`}, {5.9760003089904785`, 5.094000339508057}, {
      6.142999649047852, 5.0320000648498535`}, {6.319000244140625, 5.}, {6.5, 
      5.}, {7.785999774932861, 5.}, {7.785999774932861, 4.}}, {{
      11.785999298095703`, 4.}, {9.785999298095703, 4.}, {9.785999298095703, 
      5.}, {11.785999298095703`, 5.}, {11.785999298095703`, 4.}}, {{15.5, 
      4.}, {13.785999298095703`, 4.}, {13.785999298095703`, 5.}, {15.5, 5.}, {
      15.572999954223633`, 5.}, {15.645000457763672`, 5.005000114440918}, {
      15.71500015258789, 5.015000343322754}, {15.854000091552734`, 
      4.025000095367432}, {15.73799991607666, 4.007999897003174}, {
      15.620000839233398`, 4.}, {15.5, 4.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIA2TS0HIHXgqK4SiD52cYEGiOZY/kIBRLcU
7lYD0Qaap+XB4kZtKiBaoDJCDiy+U0YRRBdwSMuAaIXnPhIg+kEeI5ifUMAH
5m/IYIDwpRjA/AgTBgVkeRh/w9lTYNqihRdMN3x4qgyi3y0SAtvTcPSeKpBu
MGDeAeZfudytDqKtb80Gu/9f1COw+4HyYH1pb/w1QfSnRUIgdzeImHwE80+4
MYP9se6sF9j/BRbTwOpzc5eC+VJammC+i+A0MD/nUTvYfJTwAgDIC0Yf
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZiAAOHKd8MHYD0Aq5rxiD6n/FEMM3ittUIRGvs
ZjcB0ZeEksB8mSfKYL5C6SaIviXnwOrfiFmA+Q947XRBtENmvzJYPvyUDli8
9aUSiD7BqQHlZ4L5AfOztUF0g4c8mJ/gu1kNLG/opgDmn4kF8x1eqYD5BWpM
UH4KmL/BiAXMZ+A9AOZ/SFcC8w9o3lIF28+sDpFPXAymNzCng+mGb2nqIPqC
2S2I+GVuDRD9hGWLAZBueCk2A+yveX4MYH+dTGMF+bshYkYPiN8ws1MBHA4o
4QcA6NBObA==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"DrawIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 15.5}, {18., 6.5}, {18., 
     5.121999740600586}, {16.878000020980835`, 4.}, {15.5, 4.}, {6.5, 4.}, {
     5.121999740600586, 4.}, {4., 5.121999740600586}, {4., 6.5}, {4., 15.5}, {
     4., 16.878000020980835`}, {5.121999740600586, 18.}, {6.5, 18.}, {15.5, 
     18.}, {16.878000020980835`, 18.}, {18., 16.878000020980835`}, {18., 
     15.5}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 
      3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 
      0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
      0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
      0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{12.5, 17.}, {10.5, 
      17.}, {10.5, 18.}, {12.5, 18.}, {12.5, 17.}}, {{6.076000213623047, 
      16.939001083374023`}, {5.796000003814697, 17.89900016784668}, {
      6.02400016784668, 17.965999603271484`}, {6.26099967956543, 18.}, {6.5, 
      18.}, {8.5, 18.}, {8.5, 17.}, {6.5, 17.}, {6.3560004234313965`, 17.}, {
      6.2129998207092285`, 16.979000091552734`}, {6.076000213623047, 
      16.939001083374023`}}, {{16.218000411987305`, 16.816999435424805`}, {
      15.99899959564209, 16.937000274658203`}, {15.75100040435791, 17.}, {
      15.5, 17.}, {14.5, 17.}, {14.5, 18.}, {15.5, 18.}, {15.918999671936035`,
       18.}, {16.33300018310547, 17.89499855041504}, {16.697999954223633`, 
      17.694000244140625`}, {16.218000411987305`, 16.816999435424805`}}, {{5.,
       14.071000099182129`}, {4., 14.071000099182129`}, {4., 15.5}, {4., 
      15.739999771118164`}, {4.034000396728516, 15.976999282836914`}, {
      4.099999904632568, 16.20400047302246}, {5.059999942779541, 
      15.92300033569336}, {5.019999980926514, 15.786999702453613`}, {5., 
      15.645000457763672`}, {5., 15.5}, {5., 14.071000099182129`}}, {{18., 
      13.643000602722168`}, {17., 13.643000602722168`}, {16.996999740600586`, 
      15.607000350952148`}, {17.993999481201172`, 15.678999900817871`}, {
      17.99799919128418, 15.620000839233398`}, {18., 15.5600004196167}, {18., 
      15.5}, {18., 13.643000602722168`}}, {{5., 10.071000099182129`}, {4., 
      10.071000099182129`}, {4., 12.071000099182129`}, {5., 
      12.071000099182129`}, {5., 10.071000099182129`}}, {{18., 
      9.643000602722168}, {17., 9.643000602722168}, {17., 
      11.643000602722168`}, {18., 11.643000602722168`}, {18., 
      9.643000602722168}}, {{4.057000160217285, 5.968999862670898}, {
      4.019000053405762, 6.1419997215271}, {4., 6.321000099182129}, {4., 
      6.5}, {4., 8.071000099182129}, {5., 8.071000099182129}, {5., 6.5}, {5., 
      6.392000198364258}, {5.011000156402588, 6.284999847412109}, {
      5.034000396728516, 6.180999755859375}, {4.057000160217285, 
      5.968999862670898}}, {{17.77400016784668, 5.460999965667725}, {
      16.86499786376953, 5.87600040435791}, {16.954998016357422`, 
      6.072999954223633}, {17., 6.282999515533447}, {17., 6.5}, {17., 
      7.642999649047852}, {18., 7.642999649047852}, {18., 6.5}, {18., 
      6.138000011444092}, {17.923999786376953`, 5.788999557495117}, {
      17.77400016784668, 5.460999965667725}}, {{7.785999774932861, 4.}, {6.5, 
      4.}, {6.198999881744385, 4.}, {5.90500020980835, 4.052999973297119}, {
      5.625, 4.1579999923706055`}, {5.9760003089904785`, 5.094000339508057}, {
      6.142999649047852, 5.0320000648498535`}, {6.319000244140625, 5.}, {6.5, 
      5.}, {7.785999774932861, 5.}, {7.785999774932861, 4.}}, {{
      11.785999298095703`, 4.}, {9.785999298095703, 4.}, {9.785999298095703, 
      5.}, {11.785999298095703`, 5.}, {11.785999298095703`, 4.}}, {{15.5, 
      4.}, {13.785999298095703`, 4.}, {13.785999298095703`, 5.}, {15.5, 5.}, {
      15.572999954223633`, 5.}, {15.645000457763672`, 5.005000114440918}, {
      15.71500015258789, 5.015000343322754}, {15.854000091552734`, 
      4.025000095367432}, {15.73799991607666, 4.007999897003174}, {
      15.620000839233398`, 4.}, {15.5, 4.}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIA2TS0HEN1hogSij11coAGiPTLfK4DolsLd
aiB6w9ob8iCaw6hNBURP+JsqB6INdsoogugPPRoyIFrhuY8EiE74zAfmJxTw
gfkGb3khfCkGMH/GNzYFZHk4f/ZUWRBd4SYC5jd8eAo2Xy9VEkw3HL2nDKQb
Co7uA/OvXO5WB9HVcxaB3f8v6hHY/UB5kDqGtDf+miDaKFUS5O4GEZOPYD4H
JxfYH+vOeoH9v+HXHLD63NylYH7UG30w30VwGpi/Zkkf2HyU8AIAPMJKPg==

     "]]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZiAAOHKd8MHYD0Aq5rxiD6n/FEMM3ittUIRGvs
ZjcB0ZeEksB8mSfKYL5C6SaIviXnwOrfiFmA+Q947XRBtENmvzJYPvyUDli8
9aUSiD7BqQHlZ4L5AfOztUF0g4c8mJ/gu1kNLG/opgDmn4kF8x1eqYD5BWpM
UH4KmL/BiAXMZ+A9AOZ/SFcC8w9o3lIF28+sDpFPXAymNzCng+mGb2nqIPqC
2S2I+GVuDRD9hGWLAZBueCk2A+yveX4MYH+dTGMF+bshYkYPiN8ws1MBHA4o
4QcA6NBObA==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"HyperlinkIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[0.2, 0.2, 0.2], 
   Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQQHTHOVHYD0ApscNSDdsJTtAoifsGFKKojP4LD1
mSSIDrgoKA+iGcLXSIDFK2/IgugLfgxg/oIt5jLIfAWvailkfsLV52IguuHg
C7D4gaT/wmBzzGrkkPkBZ6UVkPlz9N+A+QqFa0RA9Ja4TkUw/+RTURBt4FGg
AaIlAm+BxRvC5oL5D+YEgvUF/FCC8IWKwO7lyf0G8dcfCWkQPTfqsxKYf1EQ
bN+LtK9gcxg+iAmC6I7GJWBzGo7+40d2L4xv0LFFApn/wI8B7E6GOZtFkPmw
8IDzZT3B7mG4Jgb2x4Xnr8Dhm7BXSBxET3jyCWyvxyMJsLhQ1TcVEL1m0xqw
+KzdYmB/ePi4gdzfYM3YizX+UOIXADA3dg4=
     "], {{13.646300792694092`, 13.353399991989136`}, {13.84130048751831, 
     13.548399925231934`}, {14.158300876617432`, 13.548399925231934`}, {
     14.35330057144165, 13.353399991989136`}, {14.548301219940186`, 
     13.158400058746338`}, {14.548301219940186`, 12.841400027275085`}, {
     14.35330057144165, 12.646399974822998`}, {10.353300750255585`, 
     8.646399974822998}, {10.25530070066452, 8.548400163650513}, {
     10.127300709486008`, 8.500400066375732}, {10.000300705432892`, 
     8.500400066375732}, {9.87230071425438, 8.500400066375732}, {
     9.744300704449415, 8.548400163650513}, {9.646300703287125, 
     8.646399974822998}, {9.451300710439682, 8.841400146484375}, {
     9.451300710439682, 9.158400058746338}, {9.646300703287125, 
     9.353400111198425}, {13.646300792694092`, 
     13.353399991989136`}}, CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQ3JBMNHIC0gRSDEYguYL1siMxXuPQfTD/gvmyA
zN/gcEgPme8QHq0Loj8U7oKoL+TSAdECFdZgvgUjrzaIDlhrCTZndzanOlhe
MlgfRBtqvVQF0Ql/doDN6X9SBOYbeBiAzZEOnAXmK1S1gd2n8LcMLG5w4QqY
b6Ejogt1D5g/oe8JCh/JvWB+x19XsDs4vrvC/AumkcIDzG9ofKKPzHeQFwHz
NSSuQsLjQxnY3BUNbWB+A0M/2F9rpqhqgeiQH0lg/guPdWD/JwTcAfMT7riB
3bcjjlMT7L70YrA5Dl94wOIT6qzB9n14zgUWL6jYBeYHnI2GuccIzb1GDgBL
8WX1
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRangePadding -> {{0, 0}, {1, -1}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"HyperlinkIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[
   0.2901960784313726, 0.5843137254901961, 0.8], Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQQHTHOVHYD0ApscDSDdsJTtAoifsGFKKojP4LD1
mSSIXvGiQxFEM4SvkYCof6MAoi/4MYD5AbekUfgKXtVyyPyEq8+lQHTDwRdg
+kDSf3Gw+WY1csj8gLMQc2D8OfoQexQKIfZuiesEu0Ph5FOwuww8CsDulAi8
BfZHQ9hcMP/BnEAlsHk/lMD8As6dYHN4cr+pge39IyEPoudGfQarc7goCLbv
RdpXiD8/iImC6I7GJTD3CKO5F8w36Ngigcx/4McgAtY/Z7MEMh8WHjD+hD6I
uQzXIPa8KIbYm7BXCOyOCU8+gd3l8QjiTqEqiLvXbFoD1jdrtxjYXx4+biB1
DdaMvVjjDyV+AQZwd5k=
     "], {{13.646300792694092`, 14.353399991989136`}, {13.84130048751831, 
     14.548399925231934`}, {14.158300876617432`, 14.548399925231934`}, {
     14.35330057144165, 14.353399991989136`}, {14.548301219940186`, 
     14.158400058746338`}, {14.548301219940186`, 13.841400027275085`}, {
     14.35330057144165, 13.646399974822998`}, {10.353300750255585`, 
     9.646399974822998}, {10.25530070066452, 9.548400163650513}, {
     10.127300709486008`, 9.500400066375732}, {10.000300705432892`, 
     9.500400066375732}, {9.87230071425438, 9.500400066375732}, {
     9.744300704449415, 9.548400163650513}, {9.646300703287125, 
     9.646399974822998}, {9.451300710439682, 9.841400146484375}, {
     9.451300710439682, 10.158400058746338`}, {9.646300703287125, 
     10.353400111198425`}, {13.646300792694092`, 
     14.353399991989136`}}, CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQ3JBMNHIC0gRSDMYguYL1siMxXuPTfCEQ/4IaI
w/gRChB9ML5DeLQ+iP5QuAuivpBLD0QLVFiD+RaMvLogOmCtJVjf7mxOTbC8
ZDBYn6HWS3UQnfBnB1hd/5MiMN/Aw0AHREsHzgLzFaraIO74WwY23+DCFTDf
QkdEH+oeMH9C3xMUPpJ7wfyOv65gmuO7K8y/YHcihQeY39AIMQfGd5CH2KMh
cRXijg8Qd6xogLirgaEf7M41U1TB7g75kQTmv/BYB/ZXQsAdiD/vuIHN2REH
CYcbmyHh4vCFB6xuQh0k3D48h4RjQQUkXAPORsPcY4zmXmMHAG2xZKo=
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"HyperlinkAddIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGZiAIMDHULiDkBa4fdpbhDdpXVDFET/8YrkBNEf
Us1FQHSI3n92ED2DsUYImX9A8iIvMj/BhIEDRG8RvsCLzJ9RVy2EzJd4CTH3
gEsE2J4dayH2KjCeBbvjACvEXQtuzJcG0S/WpSqB6CfJPRIgukK6F8zfYBAJ
1nfjqhiYP2ethDCI9pjyTQFENwiqsoHoCX+fSoLNc9JlAtEBMq/Foe5hAKsL
9BRF5iO5F8xnWZgOdifD8gwwvSDm3397pPCA8ZPOeYgi85VnvgLb88FDD2zv
hIZnYHc0cKuA3bUjCOLOAwaSYHf/uKsE9oeHexHYHAObuWC+Qd5isL9v6BZA
/H1tCzhcUOIPAAGraGs=
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.646500110626221, 6.646500110626221}, {
     6.744500108063221, 6.54850011318922}, {6.872500106692314, 
     6.500500112771988}, {7.00050014257431, 6.500500112771988}, {
     7.127500116825104, 6.500500112771988}, {7.255500137805939, 
     6.54850011318922}, {7.353500127792358, 6.646500110626221}, {
     11.35349988937378, 10.64650011062622}, {11.548500061035156`, 
     10.841500282287598`}, {11.548500061035156`, 11.15850019454956}, {
     11.35349988937378, 11.35349988937378}, {11.15850019454956, 
     11.548500061035156`}, {10.841500282287598`, 11.548500061035156`}, {
     10.64650011062622, 11.35349988937378}, {6.646500110626221, 
     7.353500127792358}, {6.451500117778778, 7.158500075340271}, {
     6.451500117778778, 6.841500103473663}, {6.646500110626221, 
     6.646500110626221}}}]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGZiAAOH/we1HCBMAxB9a0a0JjK/ZjOXBojO2lOi
D6JP7OdRB9FbTpTpgWgPLU5lEG1gXAwxZ/4dRRD9Ybkb2JwHh5PA/AaRdWB9
Cv79YL5DgqoaiF6zuwxs/pkzPLog+sgrYbC+F79XgvnCvk9g7gHbh+ReMH/e
zm4dZP6PT//B+lYcg4jD+AE8h7SQ+QpREHPvvIPYc+E7xN4j+yHu2HEC4q4d
wgZgd26QmQV2N4f3Tog/NhSB+QueBIH1Hfj6AsRv0FSDhEOAOSRcVuyGhNOB
M5BwS1gPCccCW0i4fvj0H8y/oAQJdxgf5l44//FSsLs8rkFoWPygxB8Ajhpw
4w==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"HyperlinkRemoveIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGZiAIMDHULiDkBa4fdpbhDdpXVDFET/8YrkBNEf
Us1FQHSI3n92ED2DsUYImX9A8iIvMj/BhIEDRG8RvsCLzJ9RVy2EzJd4CTH3
gEsE2J4dayH2KjCeBbvjACvEXQtuzJcG0S/WpSqB6CfJPRIgukK6F8zfYBAJ
1nfjqhiYP2ethDCI9pjyTQFENwiqsoHoCX+fSoLNc9JlAtEBMq/Foe5hAKsL
9BRF5iO5F8xnWZgOdifD8gwwvSDm3397pPCA8ZPOeYgi85VnvgLb88FDD2zv
hIZnYHc0cKuA3bUjCOLOAwaSYHf/uKsE9oeHexHYHAObuWC+Qd5isL9v6BZA
/H1tCzhcUOIPAAGraGs=
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGZiAAOH/we1HCBMAxB9a0a0JjK/ZjOXBojO2lOi
D6JP7OdRB9FbTpTpgWgPLU5lEG1gXAwxZ/4dRRD9Ybkb2JwHh5PA/AaRdWB9
Cv79YL5DgqoaiF6zuwxs/pkzPLog+sgrYbC+F79XgvnCvk9g7gHbh+ReMH/e
zm4dZP6PT//B+lYcg4jD+AE8h7SQ+QpREHPvvIPYc+E7xN4j+yHu2HEC4q4d
wgZgd26QmQV2N4f3Tog/NhSB+QueBIH1Hfj6AsRv0FSDhEOAOSRcVuyGhNOB
M5BwS1gPCccCW0i4fvj0H8y/oAQJdxgf5l44//FSsLs8rkFoWPygxB8Ajhpw
4w==
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}}}, {{{12., 11.367500305175781`}, {11.368000030517578`, 
     11.999500274658203`}, {9., 9.632500290870667}, {6.631999969482422, 
     11.999500274658203`}, {6., 11.367500305175781`}, {8.368000030517578, 
     8.999500513076782}, {6., 6.632500171661377}, {6.631999969482422, 
     5.999500274658203}, {9., 8.367500305175781}, {11.368000030517578`, 
     5.999500274658203}, {12., 6.632500171661377}, {9.632000207901001, 
     8.999500513076782}, {12., 11.367500305175781`}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"HyperlinkCopyIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIGZigAEtBwgtQoAWcEBVj84XQePLoImj8yXQ1KPz
ZdD4Smj60fkKaOrR+UpofBU0/eh8NTT16HwVBwAwaRCO
     "]]}, 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}}, {{{6.809100151062012, 14.}, {7.309100151062012, 15.}, {
      10.691100120544434`, 15.}, {11.191100120544434`, 14.}, {
      6.809100151062012, 14.}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOk7Q1HIC0/t0nOg4QvjqI1rn7RA9EM3RcUQPR
B0om64PlX6mA+UBgAKIfXE9UReZL8DKo4OAbgmgVXgYFHHyw+gMtNrLI/Mfx
26SR+fUq4VLI7rnHuUIS2b0POFeII/snw5sDzN8h5wrmP9gsCeY3H+jSBtEm
ElfBfKUNn7RA9IamiRIget/8KDC/TuW6JNR+Laj7pJH5QP+rIfMZOkTUUeQj
tqsjmyfALaqBbF+CQ7EGsnsmfKnWQHYvSvwAAIgBUZQ=
      "], {{15.000101089477539`, 1.}, {3.0001001358032227`, 1.}, {
      3.0001001358032227`, 15.}, {5.000100255012512, 15.}, {5.000100255012512,
       14.}, {4.000100135803223, 14.}, {4.000100135803223, 2.}, {
      14.000100135803223`, 2.}, {14.000100135803223`, 14.}, {
      13.000100135803223`, 14.}, {13.000100135803223`, 15.}, {
      15.000101089477539`, 15.}, {15.000101089477539`, 1.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"HyperlinkCopyAddressIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
      2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}}}, {{{6.809100151062012, 14.}, {7.309100151062012, 15.}, {
      10.691100120544434`, 15.}, {11.191100120544434`, 14.}, {
      6.809100151062012, 14.}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQOk7Q1HIC0/t0nOg4QvjqI1rn7RA9EM3RcUQPR
B0om64PlX6mA+UBgAKIfXE9UReZL8DKo4OAbgmgVXgYFHHyw+gMtNrLI/Mfx
26SR+fUq4VLI7rnHuUIS2b0POFeII/snw5sDzN8h5wrmP9gsCeY3H+jSBtEm
ElfBfKUNn7RA9IamiRIget/8KDC/TuW6JNR+Laj7pJH5QP+rIfMZOkTUUeQj
tqsjmyfALaqBbF+CQ7EGsnsmfKnWQHYvSvwAAIgBUZQ=
      "], {{15.000101089477539`, 1.}, {3.0001001358032227`, 1.}, {
      3.0001001358032227`, 15.}, {5.000100255012512, 15.}, {5.000100255012512,
       14.}, {4.000100135803223, 14.}, {4.000100135803223, 2.}, {
      14.000100135803223`, 2.}, {14.000100135803223`, 14.}, {
      13.000100135803223`, 14.}, {13.000100135803223`, 15.}, {
      15.000101089477539`, 15.}, {15.000101089477539`, 1.}}}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQJCozqDhCmGoieHGyihsxvulCsCqQbjihsANEM
Kq8fqYDoFGt5ML9j+XQlEH3m+2UwHTH/tSKIXlOkAebP+LsUzH/w0w5MG0zf
D6YDdsQpgGizIxvB5vgkBYDNvRDLDbb32e+VYP70lU1g/pOlt8F8mHthfK1D
bBrIfB7b22D+u+VsKHwVNkZlZH5MfxPYfUpiq8D8Cc7cYH5XTQCYz7BqI9id
ESUpYHManLulQfQnC1ewex1M48D82yb6YPc5JDwF87mEroD5C6T0ZUH0nFB5
TRD94sIjsH//WG0A8z22FYPNt5Fi0ALbY2mihMyHuRfGn/d+OdgdNzhXaCDH
D0r8AQAGqmHO
      "], {{7.655200242996216, 5.654999732971191}, {7.71120023727417, 
      5.598999977111816}, {7.784200191497803, 5.571000099182129}, {
      7.8572001457214355`, 5.571000099182129}, {7.930200099945068, 
      5.571000099182129}, {8.003200054168701, 5.598999977111816}, {
      8.059200048446655, 5.654999732971191}, {10.345200181007385`, 
      7.940999984741211}, {10.456200122833252`, 8.052000045776367}, {
      10.456200122833252`, 8.233000040054321}, {10.345200181007385`, 
      8.34500002861023}, {10.233200192451477`, 8.456000089645386}, {
      10.052200198173523`, 8.456000089645386}, {9.941200137138367, 
      8.34500002861023}, {7.655200242996216, 6.059000015258789}, {
      7.5432000160217285`, 5.947999954223633}, {7.5432000160217285`, 
      5.767000198364258}, {7.655200242996216, 
      5.654999732971191}}, CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQQOUg5KDkA6od9JHETf2BwJ4fM0iYJoDiERMH+B
1HphsDxnhiKIVuAKFwKLT7KSA9ENQs3cIJrhhIQsiD5QY88Jpg9Ol3aAWMUB
1qfxTxKFH7pBDJnfYMIgAqYdE3iR+Qc+/xVE5if0Tge758CbeRD1kyXA7j2w
9yCYdoizApu7wC5cCqz+6QUwzfBzAdg9E2ZKyoDoBx9KIO49tRDMV6gykwfR
BXtKIPL58eBwYVgzB2Kv2WqwuQ8qXoLtX/DCA8x3ePhLCJkPcy9cPuEpP9id
Tz6BzWvImMiDHB4w/gHR31LIfIe1L8HudRCIgITHgzlgdx0o28fngB5/ALqQ
Zdo=
      "]}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"ChatControlIcon" -> GraphicsBox[
  {EdgeForm[{GrayLevel[0], Thickness[0.05]}], FaceForm[{GrayLevel[1], Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEzv90yTdJIEIITV7Qga1xqnO3
jiKcD6GV0PimcL5Ld87z35mmqOYdgMmLoPFN4XyYPhR5XOJI+oozJr6t+a8I
51e+VDPkALoXRR/cPwh+7vPfKz9e0kSVB9L6d1XYGkWFMMQBtjo+0A==
    "]]},
  ImagePadding->1,
  ImageSize->{18, 18}],

"ChatControlIconHover" -> GraphicsBox[
  {EdgeForm[{RGBColor[0.18824, 0.49412, 0.6549], Thickness[0.05]}], FaceForm[{RGBColor[
   0.4902, 0.82353, 1.], Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEzv90yTdJIEIITV7Qga1xqnO3
jiKcD6GV0PimcL5Ld87z35mmqOYdgMmLoPFN4XyYPhR5XOJI+oozJr6t+a8I
51e+VDPkALoXRR/cPwh+7vPfKz9e0kSVB9L6d1XYGkWFMMQBtjo+0A==
    "]]},
  ImagePadding->1,
  ImageSize->{18, 18}],

"ChatBubbleIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[
    0.09803921568627451, 0.4549019607843137, 0.6901960784313725], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
       0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEaDhBaB0pzoPBfB/6zR5X/AOJPOGSqhcxHMgfG
50Dhw8xBmIddHZo5WOzB5S5UdwN9CaUNobQSmjw6HyUcYPYi2Y+pDgCE1CY3

      "], CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEaDhBaC0SvkZHSRObD6A2Y4hpofCU0vgKU1kHj
6yHzM9LSwOob0tLEkPUf+BsiimaeCBqfA4XfO50Zzf0MaO5kQNPHgKwPSR6X
OAcaH8VcePgg9GF3J3K4AQCANR92
      "]}]}, 
   {RGBColor[0.09803921568627451, 0.4549019607843137, 0.6901960784313725], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{4., 9.5}, {11., 9.5}}},
     CurveClosed->{0}]}, 
   {RGBColor[0.09803921568627451, 0.4549019607843137, 0.6901960784313725], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{4., 7.5}, {11., 7.5}}},
     CurveClosed->{0}]}, 
   {RGBColor[0.09803921568627451, 0.4549019607843137, 0.6901960784313725], 
    Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{4., 5.5}, {11., 5.5}}},
     CurveClosed->{0}]}},
  AspectRatio->Automatic,
  ImageSize->{{19., 16.}, {19., 16.}},
  PlotRange->{{-0.5, 18.5}, {0.5, 15.5}}],

"InstallIcon" -> GraphicsBox[
  {Thickness[0.1111111111111111], 
   {FaceForm[{RGBColor[1, 1, 1], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGZiAIMEgYhP9kBagWWahAOI3lD0DsQ32RQricy/
4btIygFJ/YffmdIg/oYTZV9BfJZVhjIgvoN55y9k/oL3y/8iq+doZhAA0R+q
rggh8xc4Mqgj8wsm9oL5GnefwOQ1oPJCyPwTStLCaPIiyPphfCTzRZDtl2CZ
BnYnzH0Wm2JlHZDcD/S3HAr/d6Y8svo/VyQUHJDCB8aHhR9MPSx8X/zOBLvX
gUOHE+z+haxgvkJIMgeIjuhvArvLgY2RA9m/MP6KglpBZL5G3C8BZP1A/wgg
m48SvwA2XGiA
     "]]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}}}, {{{7.5, 2.}, {1.5, 2.}, {1.2239999771118164`, 2.}, {1., 
     1.7760000079870224`}, {1., 1.5}, {1., 1.2240000367164612`}, {
     1.2239999771118164`, 1.}, {1.5, 1.}, {7.5, 1.}, {7.776000022888184, 
     1.}, {8., 1.2240000367164612`}, {8., 1.5}, {8., 1.7760000079870224`}, {
     7.776000022888184, 2.}, {7.5, 2.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{10., 14.}, {10., 14.}},
  PlotRange->{{-0.5, 9.5}, {-0.5, 13.5}}],

"CloudIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdk19IU1Ecx4+rrAj7a3m3Ob3+KV21TdcWPkTdQMSMQkRQg+wmRRFowzLM
l10aBeWKkLUg9uDaQN2D2Iu0WjRhE2tCtaCkwuZCrIiYYGV7aO18z324deHy
4XPPOb/z+/3uOSUd55tOryCE5GTfg9lXRfCI9t9WIUth0rNTULglsmigHJ0b
sVByydYqSmduykzpue+A88UX4cvVk9VYH5DAsXQI38OnGjCv9ZtpD3zYbwRf
98Nt2pu7KWdU1+GC24s8lq/q4fytHj3m1bmY5/GVlAnHLJzsDe2gnGrOQZ58
cF855ZobB+DhwIsSyrPRP2z/47Fi1ONsYP5gtJBS0j1EvoS7o6EcvryAOsLm
iJqy1vUTdZDp7xsoez1J5p0WwvpXaFS6qcunV/qMxYQ8iTO4FvUFNWXYNz67
BesXPyFP8ugdPHHSy3x+Dn473s782A+4eEjHPPw+H3X7NrM6hloYT6zmQP/R
Uoy/rEUdg01uODncxjz9AR7+egEuqkuRF/ENwKW0h7n3DOIJ+yvRX+FKRwHy
fDvBvO3aNuzzuGI74qWWtsKfDMAFox0+GMuw8YmCf5z86lHLjv1SNat42VGn
aCFFiHM3g3k1GlIuj+M8cHkE/yMybzcrx6VYxqSMl3XDf74LdaSWOKWTN1H0
tdHtNcj9RX22Z/mIl4h2Yn79q03sHPSNaymnQmVwcZ0fnvhirZL7CSf36uGJ
OoeW5fuUnbvpLtTVn7vRKq/XUbY3dzN/3k3/kzQkuuCfk+Po08rUJXZ/bevR
R+/HIjh37gg9b1J8IQC39fZVII58v10jKr3Scf//AiXW+oI=
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.353500366210938, 
     9.439498901367188}, {11.999500274658203`, 12.085498809814453`}, {
     11.999500274658203`, 2.793498992919922}, {12.999500274658203`, 
     2.793498992919922}, {12.999500274658203`, 12.085498809814453`}, {
     15.64650011062622, 9.439498901367188}, {16.353500366210938`, 
     10.146498918533325`}, {12.499500274658203`, 14.00049877166748}, {
     8.6465003490448, 10.146498918533325`}, {9.353500366210938, 
     9.439498901367188}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxVlAtIFFEUhscyH5m4ZOWr9qGu7S6r+3AFMbLBR2urZaixIlFDUaaFBpIt
hjWlGEWmCJqB2KIiGhVRlmGUk6lgSpmJmqmsYmaSIrYRWUk7/00YB4afb869
55z/zJ2RHctNObGeoignx2123OsoXHTMRDjtUBtVG+JQtjApwsAzPRO2k9f7
yjbwmepNCl5P5rlEEE5SCplbrlEJ2fe6JNSh3ORVO/JbTSoNr1fq6vVCPmsy
reGN00Hg8p5B8KzbGx2vlnse0L6iFS2vzya/grWB37COWkjEPlG8MYzXRe42
2OZ9Sc0rW1QGPvj3M/oUdWnI+u7DYLcuLzDDzsBXpGwPie8bh+9IazOY/tmA
uViGlwgPHAlBvcrN8MmWZAbzemolFiytvxyIvGkkzj3fIIOWlpD90WYJr+kp
rmDKo2EHr9WfEuCPfh0Dnn2ZA990lQjcr1wmvqeMAbwqzq1DnAunvOEnVwam
lL2u8OFuChVytaReKWA2oaIXPqiKKBGvcZlx8MH25mxDf+2FQeCeWF9e/2TE
EJYM+KDemBk+OWUzOH3OGcwu3QH3rzyCb4ptBT+sO07YMxn5FvWdYqxftMMf
nRO0HfN764Y8dIcLnkv355E6bAjY+vgjWFSWCmYu7kJf9Hwp2DY3BWaMS2Aq
3ghf0rIPyE9b2sDM95uYI6uOlSOvpcAf67rHwGxyrR+eu8/K/+cHM0N2MPW0
GGzzo8gcmfw17DxmJn0NiMn58DkvI/tbyJwCPKXQUZNMGKdfvML5SPOeJOu6
5tF3pFdisDAu9niCPqTiKpzPalM2ed/+FN4zu3eQfBdbs1XCuDrLSyfc39TU
qRPmX42v1jecztAK+ysfNWmE/VsnbKHCuKO+Wuh/la2pdrx3blqG9dyQAfNm
DknQp7VADp/a/Hdgjm3E+bAaNKg3kuaEeoofv8DaLe2YQ98DOfqTfrkBbrmb
TL6LkaPgpIUCsPV3FFiVlUv+N8G3cD5aqWj875j23chfKS82kP6H4X9c1whW
TPliPjXvGXDHBT0/P/baASnYRT9Dzonw//oPauczfg==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CloudIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdk19IU1Ecx4+rrAj7a3m3Ob3+KV21TdcWPkTdQMSMQkRQg+wmRRFowzLM
l10aBeWKkLUg9uDaQN2D2Iu0WjRhE2tCtaCkwuZCrIiYYGV7aO18z324deHy
4XPPOb/z+/3uOSUd55tOryCE5GTfg9lXRfCI9t9WIUth0rNTULglsmigHJ0b
sVByydYqSmduykzpue+A88UX4cvVk9VYH5DAsXQI38OnGjCv9ZtpD3zYbwRf
98Nt2pu7KWdU1+GC24s8lq/q4fytHj3m1bmY5/GVlAnHLJzsDe2gnGrOQZ58
cF855ZobB+DhwIsSyrPRP2z/47Fi1ONsYP5gtJBS0j1EvoS7o6EcvryAOsLm
iJqy1vUTdZDp7xsoez1J5p0WwvpXaFS6qcunV/qMxYQ8iTO4FvUFNWXYNz67
BesXPyFP8ugdPHHSy3x+Dn473s782A+4eEjHPPw+H3X7NrM6hloYT6zmQP/R
Uoy/rEUdg01uODncxjz9AR7+egEuqkuRF/ENwKW0h7n3DOIJ+yvRX+FKRwHy
fDvBvO3aNuzzuGI74qWWtsKfDMAFox0+GMuw8YmCf5z86lHLjv1SNat42VGn
aCFFiHM3g3k1GlIuj+M8cHkE/yMybzcrx6VYxqSMl3XDf74LdaSWOKWTN1H0
tdHtNcj9RX22Z/mIl4h2Yn79q03sHPSNaymnQmVwcZ0fnvhirZL7CSf36uGJ
OoeW5fuUnbvpLtTVn7vRKq/XUbY3dzN/3k3/kzQkuuCfk+Po08rUJXZ/bevR
R+/HIjh37gg9b1J8IQC39fZVII58v10jKr3Scf//AiXW+oI=
     "]]}, 
   {FaceForm[{RGBColor[0.2901960784313726, 0.5843137254901961, 0.8], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
      0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.353500366210938, 
     9.439498901367188}, {11.999500274658203`, 12.085498809814453`}, {
     11.999500274658203`, 2.793498992919922}, {12.999500274658203`, 
     2.793498992919922}, {12.999500274658203`, 12.085498809814453`}, {
     15.64650011062622, 9.439498901367188}, {16.353500366210938`, 
     10.146498918533325`}, {12.499500274658203`, 14.00049877166748}, {
     8.6465003490448, 10.146498918533325`}, {9.353500366210938, 
     9.439498901367188}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxVlAtIFFEUhscyH5m4ZOWr9qGu7S6r+3AFMbLBR2urZaixIlFDUaaFBpIt
hjWlGEWmCJqB2KIiGhVRlmGUk6lgSpmJmqmsYmaSIrYRWUk7/00YB4afb869
55z/zJ2RHctNObGeoignx2123OsoXHTMRDjtUBtVG+JQtjApwsAzPRO2k9f7
yjbwmepNCl5P5rlEEE5SCplbrlEJ2fe6JNSh3ORVO/JbTSoNr1fq6vVCPmsy
reGN00Hg8p5B8KzbGx2vlnse0L6iFS2vzya/grWB37COWkjEPlG8MYzXRe42
2OZ9Sc0rW1QGPvj3M/oUdWnI+u7DYLcuLzDDzsBXpGwPie8bh+9IazOY/tmA
uViGlwgPHAlBvcrN8MmWZAbzemolFiytvxyIvGkkzj3fIIOWlpD90WYJr+kp
rmDKo2EHr9WfEuCPfh0Dnn2ZA990lQjcr1wmvqeMAbwqzq1DnAunvOEnVwam
lL2u8OFuChVytaReKWA2oaIXPqiKKBGvcZlx8MH25mxDf+2FQeCeWF9e/2TE
EJYM+KDemBk+OWUzOH3OGcwu3QH3rzyCb4ptBT+sO07YMxn5FvWdYqxftMMf
nRO0HfN764Y8dIcLnkv355E6bAjY+vgjWFSWCmYu7kJf9Hwp2DY3BWaMS2Aq
3ghf0rIPyE9b2sDM95uYI6uOlSOvpcAf67rHwGxyrR+eu8/K/+cHM0N2MPW0
GGzzo8gcmfw17DxmJn0NiMn58DkvI/tbyJwCPKXQUZNMGKdfvML5SPOeJOu6
5tF3pFdisDAu9niCPqTiKpzPalM2ed/+FN4zu3eQfBdbs1XCuDrLSyfc39TU
qRPmX42v1jecztAK+ysfNWmE/VsnbKHCuKO+Wuh/la2pdrx3blqG9dyQAfNm
DknQp7VADp/a/Hdgjm3E+bAaNKg3kuaEeoofv8DaLe2YQ98DOfqTfrkBbrmb
TL6LkaPgpIUCsPV3FFiVlUv+N8G3cD5aqWj875j23chfKS82kP6H4X9c1whW
TPliPjXvGXDHBT0/P/baASnYRT9Dzonw//oPauczfg==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"CloudSaveIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], FaceForm[{RGBColor[
   0.39215, 0.39215, 0.39215], Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
      0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{3., 11.}, {15., 11.}, {
     15., 4.}, {3., 4.}, {3., 11.}}, {{7., 14.}, {7., 13.5}, {7., 
     13.223999977111816`}, {7.223999977111816, 13.}, {7.5, 13.}, {15., 13.}, {
     15., 12.}, {3., 12.}, {3., 14.}, {7., 14.}}, CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQH6DhBaB0or4ODrIvMP+PeC+QfmS8lDxfWgtBwa
nwWZ33DgFCOaPAOyeTA+kn0wPg8yH2gOJ5p5HGj2wfj6yHygPfpo8gbI5sH4
SPbB+NrIfKA52mjmwcILwQcAXL0jfw==
     "]}]},
  AspectRatio->Automatic,
  ImageSize->{{19., 19.}, {21., 21.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{-0.5, 18.5}, {-0.5, 18.5}}],

"CloudPublishIcon" -> GraphicsBox[
  {Thickness[0.05555555555555555], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
     0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZiAIMHHus4HYD0grxJ3CC64e7kT/ZAOiHltyiI
z+Dy6wOIf+BUohgy32ELhziy+g1S+WA+w7y4HxD1DyXA5pr/+AniKxh6SILl
j/b/QeYviNP8h6ye6acC2B0vlt4WAtEGctdkwfzFExRB9IYWGzkQLXH9MJgv
kPEIhV9wzkMeWb3H/lgFEL3jxDUwPaN0IpjumLoYhX9jcYACsvoVBbJgWmXl
ZB7k8Am5cwxMX154lAtErxWt5kLmo4QnAIMMXm4=
     "]]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}, CompressedData["
1:eJxTTMoPSmJiYGCwBBLMQJqRhZmReUQgBkYG6ppAuYGD05tDBQ0Jn1LFkUPC
p8MGDfXQxnQ/tQqugQ0ZAN2vES8=
      "]}, {{{10.399200439453125`, 14.620800971984863`}, {10.436200439929962`,
       14.612800971604884`}, {10.461200438439846`, 14.596800971776247`}, {
      10.503200441598892`, 14.588800974190235`}, {10.45020043477416, 
      14.595800971612334`}, {10.403200439643115`, 14.603800971060991`}, {
      10.386200439184904`, 14.619800971937366`}, {10.403200439643115`, 
      14.620800971984863`}, {10.382200438529253`, 14.62180097203236}, {
      10.399200439453125`, 14.620800971984863`}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQKL7+rOQDpxhAhPRD9gPMFmM+wnw/Mt3G+A+b/
n8wO5psdOgbmeyzgBPMjinai8MPcN4H5XqcFwPwZl+aB+fkXBcF8r4I+MH/H
XWEwX2BPK5h/0pQXzL/BXgvmb9/EA+YfiiwF8+/sQJXX+CAG5m9hrAHzpzFJ
ofC/7FEG89etzgXzOxn0wfx7myPB/I2G5mB+zGeIexy+6ED06xwG8/0U5cF8
lPABAHj7RXs=
      "], {{12.499200344085693`, 14.69380097091198}, {12.500200271606445`, 
      14.69380097091198}, {12.500200271606445`, 14.69380097091198}, {
      12.500200271606445`, 14.69380097091198}, {12.500200271606445`, 
      14.69380097091198}, {12.499200344085693`, 14.69380097091198}, {
      12.498200416564941`, 14.69380097091198}, {12.499200344085693`, 
      14.69380097091198}, {12.499200344085693`, 14.69380097091198}, {
      12.499200344085693`, 14.69380097091198}}, {{13.038200378417969`, 
      12.772801041603088`}, {13.043200254440308`, 12.73180103302002}, {
      13.014200448989868`, 12.727800965309143`}, {13.071200370788574`, 
      12.722800970077515`}, {13.069200277328491`, 12.722800970077515`}, {
      13.066200256347656`, 12.720800876617432`}, {13.064200401306152`, 
      12.720800876617432`}, {13.04520034790039, 12.720800876617432`}, {
      13.026200294494629`, 12.720800876617432`}, {13.006200313568115`, 
      12.720800876617432`}, {13.028200387954712`, 12.739800930023193`}, {
      12.988200426101685`, 12.772801041603088`}, {13.038200378417969`, 
      12.772801041603088`}}, CompressedData["
1:eJyNvXlcjdv7/7+R5JCzJYRolygJoci8zSFkzhwnZA4h80bIWOYMh40ohNCh
0wkbIU4IIYRCRzIlIfP33q/Xuvvt+/Hwez8+/lmPp2uN15qvde07+5GTe48q
rlKpNpirVMZQ+pfZ+m4lrRR6eqW6GENDxa/gDcXvg1Xv7SobQ7/Ix2C/Ox3B
obefgzUO88A255+BM8+fA6+q+xGs/f4RvH3xW7D+v+o2xtD/y2vGf1XDxrQ8
QwUfcr0s5r9rDDgv8Sk5ZZIivcp2ro1peX5HNoBjzfMoT46gXMXyVTsTwX13
FzC/D1fAmg5fWD/PO+BvrT6zPhuywQG1PpD/eKjIX5dxEZyW9YL5XTkP9ran
vnRHz4B1C+4p8lfl3qZ+5maBHfPusH6dS1QxhvEWD5i+9GdF+/VN6kLuNuUV
2+tSB7zdN4f6rFy7iml/GMrXAoccyCT/V72Kon9tvyH/+Ie3mF+JQnBkgxS5
/8Dpqy+SnX+Ac7LPKPLTm11g+zW9we7VLzO/Q2PBXv9yfOnX+FOef5byRSPB
c28lMv3cEeCchHjmP3YYuINdHPUxdAg4cdh+xt+zDhxRbxfzP2kAt7y8FxyY
cRGcmsX4as1NcPSDaLDPgAfgTP8DYLde98HOnZheveu50GekPB7APvY7GX9u
FvXbd52oXwa4YHQ/cLi7qirq+7AP++dsZQXr3FzANhP7M/91zcERd3tT3qgf
2LdmV7n/wQE+LVn+127gtKaev+TY8DBwrLkb+/vPtWBtgSv191kP9v5YmfH/
2QRe1f97HcgdvoOTfzOnvvqUrGYMy27KpzxlEthLXxryVO0isGF5HuSp45eD
vb3/A2dWuQG2GP8S7HbzLTjlxBPGr/gVLI1X5t/dzBbp7R8z/Sa1glXJNuBk
vzRw3kR3BetHNLJl/S6D1V3qgzWTzyryK7A6Bvar/xPlS+OF9cl9D5bGH9N3
uweWxic40O0AODj6L9bn/U62b9Mxob954BjzWHDs77PB0nhjeSWCwdGD1rM+
Ef+AW3qFM/+l8dXYn8GUtzsEdszrz/rleIH19045G0NpfoB9Pm4Ghz+awvqG
TQGnbhgFtokYSrm7Dux7tQVYe3OyaI8HWBpP7M9hdSjvNYj1L2cLjh0Vyvjz
3jihvkfPgLUFMWBpvNgy/X6w7nguyz/v72TaP+kjF4Bj/xhKXt0JLK0PYLdL
zcGprQeA1Wf/ro34z6aCfXfHgcNDn4Izm+2pzf5cUB39UnEo0hvWJYCdt1rU
NmW3TrXA+lV/g9WVvRSc/Fsnxq+QyvTValD+90tw/DFvcOb40jWoj/rgwPvV
wBHFq1J+tnIN5mcO1h1tA1a1/lwL7as4Bxxw/T+wYcxxsG+PG2DNrudgtykx
tYR+7aDPiZvAqi6HIU89sfuXLO3PNdj+ULDbHiuk1/VdB8473w7seWk2WBsV
AI4fNpb5dV4M9pvlC5bGP1hv1pH1cdlvx/Y0U7Df9dqsv2M02G1aZZbf8whY
66Vm/SbGMf2ZcpR//Res2WoBVn/6wPhdvzqiXgN+0xjD2EG3wHrnemD93ZsK
TvW4Cg7s5gX2m3no/8QRUQPA2vyzLO+QL9htazI42sVXUX68a3twYK0P4PDU
xmAf7/8oX1Secp9vYL/kUkz/wJn6zytA+5L9+pI7pLP9Hdgf0vrM/qqzkv1h
O5f6sIsD646PE/15k+NpwyhwTrOnzG+iO9ir61fqe5Oa5XlYyvOnBvMvA1Z/
uAK2Oe8I9ukXy/GX35bjeVM42HPaALC0v9Rg++YqWDVWB5b2a45/j9XML20r
58fddWC31CSw/t48zp/6P8HqV0zvtrcV628XxPnt2pfj68tEzkfLnmB5/kr7
E9gQ15QcvNJO6JvrR/OF4IgYttfn5y6Ffgw5yRzfvjlCv7lg57w7YM/Xlui/
9JFnapn2r+7HeQX7Fp4DW2TbgwsDDArOfLqB8cX4kvYDsK/teI637dPAAVem
cnxGDuf8++QPVrfrCU4eOB2ck90G7NxmKefD4gbg4E+R4PDbTpxfE+LBqtyK
HA+PMjk+573B+HyVWcYe5e2OA9sGOIDzrKY6Mj9HcLhvADjmjjtYd8APbBjo
YS/6A1z4pIk929MY7PqS+Un7i6PQhz31Ya0oT5r/4KT69Rl/eV5NY1h2bWsF
T+jmxfrOSgd7VdWB9TH/gqNdIljfuifAfl3+ZP02HQNnlo4G+xTEgGMPHhL1
2w92P3eR9d+xA6wKuwWObbwbnHb0Deubt4nldyzlgPxqrgBHzFWTdweBA3bW
BWsLJoDjXNuD/a6PBus+93QQ+gaHzB4Fjh02lvGLzWV6++GCE0X+7mDvbbcd
hL7B+SOyFBx7p4D5NWwKTj5Sgv9v7oYwMq00Qp+Z9RA2b29LvUXaIZzh4Eq5
PXnI+x4KufPGvgj1DcoibPc2GKHBwxJh7l8hCi4eth5hnvoS6hU6e6+Cbx49
rOCPq3IU/OXJR3Dgtwiw5eimGDc+V+eAsx5xXOofBBhZt3P+HI5Tj9VGNvR8
twes6z/PyJlfLU+DM8OmGNntYSj3Fam/kF//qZ/BqvHjjay918iM+9QbsHH+
c55dmo3yrg3WcF/tOudXrKq2vg5YP2Q+5Mv3unIdekzuP5X7auCNXohvljCI
69IPjpsLIXNZXqda4EtHFjP/HTXA+36Gkz9WBoc4bua8X20u9KNnecNeYByr
/FeJ8m6Ae9se5L7y+DT4txax3Feyz4DnBCco5I03c13MHEn5hZBElp9/Fny3
1Cm2N+ZfRXzNhevgcZqzbI9XKudpYknuO1n7wVbPy3Jdr7aD61KZCjxX3V0H
rmRlXVvoE9wuqSHX/YYzOY/bkqX5SPlbz9qi/8DHirXkvjNlwi/Zdv1Yngvj
mF+Ht8HgvOfjuA5eC6XcYjDXlYvbmf/ZZuDcFae4T7Ymr+t1me1L8ARviLoL
1k5vB27ZPoPy0f3AKW73mN/E/qK/UrhvOvmB32T+y/SXR4Edx11le2dOBEvz
HefivNEbZf2BVbnkZ6WdFWzdqpqTafs7JDXkOT52BDjtaH1wZrkh4O3fa/Hc
7dcXHDqbLO1XCg6s003oz5M8pz04rlhLlv9KC/b9U8t7RSH14VWVnJndBvxq
RSuwpkNzBUvrG/ibZWvRnopc19OHM35EdXDhiBG8p0R/wD747JEf82/2lPto
H3fRvgzwqtTG5NUXeY67Q7m26z8a9pct7zEzDylYGq8KTn26QcE+PdZqTPXh
t28F+NuTJoy/eqmCtdMXgaX1lv1xeAbPre2HML/dQWCvwB6yfjWm+vf51wcs
nWfA0vmA+Vv+4Dmr5m+i/QWcT5VP4hyUXkqM35/HwPcbJXE+upfnuXTLAY7X
yGs4x1mo9zO/v+cqWLu0C3i78yHm970UODKN80GfVxJsbZWmYGl/Y3kDea/K
LJ3D/B4VB4f0fMT4ESm4p10MSWT5TRLBVdezfEPeEnDrSbw3ao/PAUv7Ees/
qzM4r4zgmbYK1lXIwr3zXP3DzH/UFtohjpwnr5lua9qeTJ/xYLOE+0w/djLt
ECOyWN83g8Ahs7Pl8sEtt+SSvSvSjvHik6gv7SavVnxnfhs+gjOGluF4j/oM
lvYjjj/XbLBZtj3Hz5G91aj/ek6i/eC5wbx3a+670s7TsTPlns9hF4r86cP5
PWUbOKYf55Nqb4+q7I8AymfagvX7F5G/laKdqTZZdzmtiimrrh0A+3+YRXnp
FeCAbqFMP30K7XxbDrA+ZTzAkfvPMb3z77QzTih0EvqA3TKlpBXsFoauubTT
XqQdw1DrGXhu98bklqdsRHtp9wjZAZbmE+Xbd4MtRs+k3aX5OnBBk61g1aJp
Ir/jTH+Udu141/NM/9Ec7HnuIuO7ZsNOnnL/CuOXbwKOTrvM/EdVAXt3vMT0
Pi9hp4+9E+cs9F/JtDzd5ECw5nQs5bM6gwtPHqE8XANOqn+Y5c/Nrwj5qmjG
v34bHNpzB+Nv2gUOSvmT8R3WKFiaP2Bpf2P8M/MqUl+C10wHb4iiXUo1sDI4
OHg2+cMDa+QzcDrbHxoE3t4niLy0izXrM0zUxx6cWGIM5Ws+VDCG/kH+zO/n
MbDry5FyfmBpfLK+1T3BKSV7U378q5UxlM6vzP/UTbC035CHR4Cl/YT5O4eB
0zM8ZH2Ay7ZwY/zcELC0f8rlg6X5xvLP9wFnHq9C7qEF665ZMP4KO7ChPu1q
2kb/lYd+bV9yPOfHggtW5VAesgNsoX5Bdh0Ffub+9n9y2dGfyKWGg6X1RJ6/
4JzhHznfZnUGu7V9R3m/tuAY3X+sT7vWYGm9pbxPJXD8ohuU55qBdZ+vU/7h
gdoYBs4ga/udBU/olkyuH075rjsKlu6nTN99I9gv6BnzD9erFfW7dkDN/vnA
9PdjwHHFvlGedhDs+6eK+s48BPaqqnI2zc9980+xfm0Hq9f+EOtLGNgm4Anl
1T0V9dfVPve7MfTfeZA8RAOW7p9Mb1cJ7GzYRo4eYGkMHcetJl84WtaUdTGH
ylJfYeT4I+Ah79co5F6BZNWcvWDp/K7gjKErGX/SHnD8gBXkhlvAq3otJ79f
A/ZNXsb010PB8vorc2Ta8v8T606EKPLTnVsK7tBxmUL+zXMJ0y+ZC875K4Sc
/wdY3j9kDt6zkOnferI9i9ZSPkQD9r64nfLPv4Ol/VghVzW7QHlyKeq7zUXK
Y0uA88rcUsil87civ6Lx/9oSXLZFHrlGJbBrpVzm1zipDPvvd46v+V/B/kGO
XD9WfgcnhbQkj/5URuiP/OV3jA/b04HksQ5gaX9lfkM0YHl/kuX+XWjn1y3u
RfmkP8jLoixZv3EKtrVewPSH08Ger1dT3vYdWLqPkwd9ABftNwEO5aA/6zPk
cd3BGaXEu0SlceCi/ez5KrDPu6fkcqfB4b1K411D9/IJ2CuwHN9V7rpjvqSH
WpEbbgFL9x2mf+sJltYb8ouTYL8ad8i2L8HBDq/Inay5XpwzZ3nhGrD+pxqs
/as2WGPdhvJqlpz/iR3Jm+zB0nmb8U/2Ake7+IKl8wnzn8B3G2l9/iUXrgoQ
+e1ifpXGkcufAPtMncX8Wp7ielZqHtsv1jf9T74TGfJjWT+rDcy/ZBxYO2kP
43c5o+SD15n++16yWI+l/Z75XU4Dh0dtZn7FHoFVYXynMry5z/Wy4zLWNyKF
+VfVMf7Sy+Dg7tMoH5PE9fyTv9DPO7ChxBiW7/w79ofUpWTpvAiOcJ5IvlW3
vEIfggubbCVX9wRL5w1F+pwVp1ifI7XAvsmXKL9UB5w3Iovylq3A0n4i6t9F
wbpTvcGhs7OFfvqWZ/2fC/0MA8feKWD8M/PA0v7A+N4bwQEfPjN++RPg9KFl
+O4beQ2sn9+C77SzL4G9tvEdWffmvmjPPLK+EJx5fAvjH/oi8v+b8n+ccH5I
vn+F7/Yj2oMjou6ST/YC26yn34Jh60xwaOp75vd9mZVoD7n7RrB0PmD6knE8
n4R8o/zgdbDzyyeU9zsLTh1MvwPdk3SwX5eHlIvzVnQ/+kmoSpTGeczTRvhF
DLcBS+cFykNqVKB+/lGwdP9k/DIeYFW50y6iP5nfuYty+yuY6kM3sSNYWn/Y
/h3dwRF92F5DzWZgaT2qi3z7tWX+YRXAujEdmH9SQ8pdmoPzMruBtYPbgaX9
iFxqOFizfj/55A2wdP4h/1Ub51mLFnnkoRPB0nh2Rf7XDoA11mfA0n3GWqQH
S+O9ougfsPaPSeDAXZXqIX2fTRWp/+pgw+07YP3NR8x/fnXcB6Txzvxq+YPz
SudQ3n0jWL32NPnrEMavcYfx85aAtZOesvwVO3k/0f3H+PsjxX2lgLz3WiVF
/fbUxP0m0MGV9bMvB9Zu60d+MwiceXwg42v+AIdHDSDPnQpWB4wES/MPrBk9
E6wdHgE2DFhBDtnB8j5FMn3aQcpDEikv8xdYlXCf7PkcrP+ezfwrlsX9za1S
rtBvJd4Pt5Cl+xvYr3M+eWkXcOrQMvUR//sysNrKur7QD+VH64O1Q1+DfTo3
Asv3V11wc7DhRyPcb/MsW1O+rhtY2q8or0K/Gs247swvfSH9hmz6Mb52fRWh
P/L4rWBdz2FMfzZawbrKJ5n+5Ujml3MPrJ0QTPnkQNznU0PmMv323bzv115U
X+gPbDg4EZy57zPtA41CGD/fDfYFaX8B+53sBVZn7yJb+oEDrxyjvpzDwHkr
TjH/+zH0g9h/rr7oP+bnn8L6nbpJv4S3hWDZvhJ7x70B/r/UY7CqWUewruUp
2Hf0aV3Ahgs/6CdwrhM4s2YzvmvGNwBrBrfju2nPGsxP2LPyylQA+5XxAPtp
ioGl9YLvpA6v2L4xHfhOf/8K61txFd9Zrc9QP9Xjad9yP8L6T7wAlu7bjH/+
Fjh8z0Jyzj2wNmkKWHM0lfKbwxTpMzO7sfyWp+T2MH7JOLChPsejyjUbrBln
yfwrZDH/qir255cMtu/DZ87XaRfJO1+C9ZVPUh+lczh/yp+gPOiZgqX9WJ5/
fPcNeML0ESnU16dn8nxUxPd7VoLvuv0eM7/xVe2o/1tkbQX6HZy7yPy2O4DD
U48zffkmfGe3XsD53Gs87ZeT/qDccwzfmbt5Mb8KI/iuPNCD+U2pJuLXZPvt
+I4em25HvpzG+ov1LrPm3+yPuer/zb1K1zPtX30a2VDwgP1V7oerqf61Se/I
12+TxXossyo7C6zf+on9f/weuZol/TwGXJH3A7577z/H/WaTPTi4+3GFPPZO
HOXtWoOl8wfL272H+j/5FpzqZ813Zv+yrH9cUwXrzTrST2LqZ8TPU3fmu3db
tsdtmvDD2JLL/P3H8R076i7lO2hPNxxKB2uqHAcnhyQyv4R4YQ/nfuoz8zU4
QLMQ7PeFXGg5Xyn/MOt/cuGTGWxf2Xcsv8QY6nPxW7B0HqB+bn2jfX1zG9Y3
vxjeGwKuNAKrX6n4/jLCnvWfTHlOmQqsf/ZPjejPutRPKb5zd/kTHDvkB+s3
I4xs7sb3kuRldVmfBmCL0TN5vrDjO33snSCw/B4V2nMY2K0T34uif/qQdwwD
S/sTODN7Ad+3etZg/uJ9TepPcOpIyvXzv/I89Xi+aG8+/Q7zNrH8Yjw/6hcf
Acvnx9S4k6L+l8jiPbFwBP08dT/O8z3QagPzi3jI8sPWM796WXyH30i53jdH
Gf/NS3D8oQjWT7x3arfQD1Q9nnJ1i1j6RZrn/ZLdXq+mn2mtD6I9c+nXurtA
1jfPqxXywYEzejL+PPoJqJ97U56Ty/qXa00/0adpsr4VnFzSin6e4j1U08Zc
wdL9ln6Pd28qOC/xKds74Ar9Bk884fgqHU2/wmaU5/wVwvtK4yei/+Yo5KlH
J9UxbX/sQd7PfAqLO7B+vXmf20C/h8BPjvRjvFGenFKd9VvcAOxpU1HB6Y3M
RP5uDiz/q7OpXLo/0W+xeFUH9p+NaI8Dyx+sYf09LMGajdbMv0FZcPCeYgqW
1hf6MR4jx6c/BkvzkfXVnGX5ZiVZ3820b8jjxXrtaaYfRD8Q6f5C+8mGS+zv
XbQ/pJY9yvkq7BHq8Qc5v4Q9JPbhenBGoyTaJ8T7dbBDjEJukb2L9Tl8Atz3
3R6wX80rYNeXu5l/7m3OF2Hvz2v1mf07/AR5dEW0JykkUcFyffLW2oITB/A9
QjW+roK1Ba5g76oGxg/Q/pLl+mZmtwGnum0B+3jXBsv2Jrdq9E9Q+Xuz/u1+
B6cdrS/0yfH0asV3vn82LeR7+runfN8V4zGl5E2+L4v569XxEt9n46/yPfiv
JL53Tj8Hdt98Rrx3RoFj7sTRXmy/k/nb0n5rWLkN7L1tI99P+7J/nDduEO/P
XO9k+6O8/s29RntpXqtZXP+E/VR/eAZYtre62QUp4vt9maiIrxpPf4Sya+ez
/N5juP5spt+s/kEAx0eLQEX8IIcJCnnwJ3/Fe738vi2v7/5BlBsajyTvHE/9
Dhsrz3/qp4Dv//J7su7HYuo3sxvbmxAPjvypZv6XEtg/gzP5XtshQe4fvvcK
/wJJf/SfEP4IhvqThH8D94v/3CfTT7Eux3/CIV/6Y0ymP0mNF8LPT/iPDHlf
jv4O9o/BtcfRz9FHX9rBGMr+I/J60zWQ8fWD+jiYxpf9c/Kb0I9X+AupXAzV
WL/c2wrW9X4O9rloy/ffL68V8kCfbwqW1k/6s43+RH+bfb/VpP5fCn+cOuCx
H/6mP42/C/2pkqbQ3yaLcv38FvS7pT+WVsrP0YRVt47Sr0+7o4aR/RLTH1Pu
XdvIus03H4GFf1gRB0Z7GFmzpKeQX2qukOtutTSy/sOqHPq9LuyA8uNcS9Af
ql1PIxsuHiFL4wu8a39x+g8F6BTxhX9dUXyfq/+g/oOSS1E/PonghZ9/N5Xr
rK2sFfGLh1Vg/gnxYKeNlGeGHVXE182jX1nWI/pjqV8ZwG8yuzF+/FUFS+cH
+v/5e9OfyUuNdncNXMP2LXdTcGCdbgpOXTn4V6xTJ3YU7R8G7lhVy/ZEDkf8
OcHNGf/ESMgfH69CufdoIxs6dywl/L9GGTli0ozrSKc+7y/y09Hv+Dri675a
zgdL4x/8YsU8+sM9rIDwqttAjpeuX6GvSTN6sv87ZaP9TV93Z/87ZYLHadpS
vjUZbHuaepD2Q3Bv27oKPtDPjv54d2+C1/UqreAD/R7XNOVOVdkvqtZ/I0xx
21LTtH+tnq9S8IRuoTVN6/Pf8BlMf+aayE+LULvjEeNr2tJ/0Ocbwqkp1Zm+
Wg228/PvzP+5C/jcwA8OqJ9ZR/Dhg5znsQ/7UM9BzxxM+kPaj9+CdarJ4GtL
uU5I+we4x7unIr8lYOk8AZbWQ/CGqLtgzflIcMKhdMrVlxypj3tM75ujkIfH
lMG42HTzEVn4/253Zn01VRorOG90v1qm7bGJGAouWJXD+vqPAy+dnQ1Wb5oK
Dvok2iv8leX2hNedUctUH/ENZyrSJ8eRzdUvwAG1poNt1r9QpG+9JZf1Ff7w
1wZnUr4wBCytZ2D59w1m2VnM//Fp+k9/+AyWzgvg0yWc2J/ZP+mHOL8Fx8eG
UliXHcd1r8nyvrD+XYbSr1dfGnJ5PEnrKVjav4S/K38PovJPAafHdwe3nvSU
frYeZGk9BvtebQH+4VkS/RbgQz/DVpNqkvd1Ffl5K3hO8GzOpzPYtzTSfZx+
2b2djKxr0X47OLRuE8gPH+TvGnLUnY2sbdD2KH/nUG8E8ruxNArsZT8ccgv1
fnDyysFGNtTeuME0vl/Z0SfBNm/GG1n/fkQW5b4BKD+sNtf3aPNABYv4hteZ
HJdy+fJ6Hh07QtTf1lSu2/K9Fte/slMQf/f+dqb5q1alThPrL3nBNY6D2GUd
uW/XPwxOX83f8+jn/6Pgid2SWb+IoWCzhPsKPjfQg+eTtUMQjuxSHWHyco6n
O6Va8bwgfo8hjR+wRe5GMT6hV1VEzEoxHmfVFvXnvpO4RM4ffL9RCNi3kO2U
zvc830xuC/7heYHnn3zykPfXmD7xDwUH7luhYJ+Zh9hu4b+nv0c/3DsZf7E9
fmng3OEnxPnrjkJusHigYIuKDzl/+vB3WD4fK3M8W87n+Ur83uJiCH8X4nl5
FMLcFfydR+Fz+rVF3KS/Xk7Yu9qsH/03pfnl9Cv2ndoMYUQ9+rFpXjRFGB1L
ltZznsez6jC+8B9NLUu/1VS3gcy3Kf0sQ2eP4v3hLPMN7j4NoWf1Lghlf4n4
Y94IM0LXMX18d4Syv0F48UEIC0bs4nk+kn5xsr9HZrM/hB8B/Tmk9RSh7C/h
PGWCojxpfCCU7wvS/UERX1oPEYY4bmZ9L5H9giIR5iQEs5zS0dRXDP1AMh/p
xf2IfibyfUZ1RviRCP+R1JWst7UV5QYLcsT3vUL/uxRsWB6rYN/dvFfF6PZR
P/1PKeSayWcR2gTsRhgwh34a1q22KeSy/4xbPln2f/GteQXhhii2X1fnX4U+
csrRbyNw1ybGn/kaoexfk+xh6Wza3sBvNr/k5Pvsjwhf+nXJ6UNVDcCRP8N5
/1lLv8KgT5HiflTC2bQ/dNH0S5Ll0vqh4PDbzxWcfoJ+RiGzqa9gJ/pBuVai
/2PArPRfc9ujrN+Ce0I/dxFa5FZEfeIPMZ5NRHVn6otyab5SPoB61S9m+9SJ
9JdJftwaLPs7qV9phT6uMr5ZR7Ds3yXtN2D5fi7dD8hurFdhq2aMn/JQwZml
c+T5CPYKLMfQLkjkZyXsNbpfsuy/JY1nphP+XdJ6jPCb5Q+hH9ol3M+Z0z5h
v1P0928IpfEt2kP/ndADeoTRLhwXwU5k2Z9UTt/hraciffL9rsK+Qr9Iab1B
aHM+EqGrYTDtIVNo95H9T2V50kAPYT/Z90s2lHBivrejEMr+hsG9ybprXggD
fGj3mXstlPYlc/qJph2lP2j6avqlyv6l0n2I9dlG+5Y0P9ku59cIPavTbhS6
l/41+gYpCrlvjxsKubS//JJtWj1g/JpXhH7TWa7+8i9ZtpfFxmYpWDr/sl7C
Xpee9YL6EvYut+3vEcYVIyfHfWK6+f+wvWebwU5YaPmDem3sAPa6aEv/ja4t
aBd1b4DQdnJbhDan3Wi/XEY/Ian/EAb/aE877IgRTD+9HcKIPkEIV8V0Qxig
WYgwo9wQhDkr6O/jXG0YQ8MDlnOefjSpbvcQhtweo+DoB/Qrku2/icPGivyL
0Z7sP06RX8qJkQjTM/g79shBfdj+JydYjwRP/l5/An/3ri1wZTk/U1mfdr/X
Ef3Hdrag35bsHyOdTxH6JpdC+QG1PGg3tq3L7yT0b8X6XWlEe/09curSKLDn
DrZfOo+CzcaPF/lT7nuVdurg4NmMn089ph6dBB5SuAgc/rU57e0blon8Wb9v
rf4W/UN/oEAnfn8gIuou9df4iehP+g/J3zPQBSew3N7MJ71REsdDlfe0M+8v
jvL67qZfUHhtcrKfNUJpfOH/ty9uQD30uizbv8HSfijya8x0wr6eFNeU7Uxq
CI47VpZ6FfZxdWUL5jeX/myG5cwvPYN6j4m15/ccLnKcpY9sw3eQgdM5rp/2
5bvLYD/xHjCS7wznloLTssaC5fcE6TwCtmjB7z4YhlGePNAD4bNmf7Cf3q9h
visHsx/C+N2RVXWbuAj91DVNr3exATtOXsj0NTbVpb4mi/TrwdGD1ov2hoOl
8y3faVwXgzUdEqjP04Hg8Jh/+Q7zyR+cEX9Vbn9d9k8aWJqvYOuIhwqOjuX3
aaL7DQf7Xf+P+kgnS+dZ1n9+C0X8THd+h6bo+yvN+N0UOf8ADb+LYlbxodDf
Xy6m6cNTj1Ou5fddbKxYT/l7MNEH61E/4nsw6tFNwQE+3xTsnl8MoXMlF4Rx
y0qy3UudEE7Y9xtCi7U/kE4aX3wHrMT3MWk9ZL5B/C7Kj/Wdf8k+7/aAO+m7
KHjCvq4i//lgq3Y9qSfdaPDSA37U6/seYP8vE8GBu/idlJtlp3CclBijYDm9
/t48sLS/gh22hoI9behPt2/QekV+ZhX5jqpO7Ai+dmI3/br8xbzySaR+3Kqw
v9rRbyu+hBO49eVsvos+4rrx0Sqf9a9xB/ymRTm848YvugEufoYs3b+4ji6p
ynfg0SfBPeztwKF7YxRyzbjV4ISHfBfOKUN/zPTV5uDglD/BWxe/ZX9tXlCH
+nvNd2Ox/5hrn4n2eYMrRTysy/pw3ZXmgzw+wLUvsL3SeQi8qO9N5i/ez4Kj
PzC+gft3TkIh5414H+t/9Ss45Foy+LfxdVHfDbXPgTtNb0d9ZPwFbrFjGFj2
X44a1If6cBwAvt00mO39RP/p3OwF9Dvb4gJe2Hcd+NsT/n7h7eiN4CCHV7xX
TNwE9r7Ie0HtPLL8+4RuHze7sj28f/xjsQ28ff4ccO+Zh8BDkvl7qMPmsayP
gys4O+woWDqPgqu9OQjOCCUvXrAFbG1lDa7QLozlid/vXXhMP4S8JlXBpceP
B0fuL87z+nl/cFIIfx/ppe8CnruH990OXVuAw3vx3hqyoAo4cFclcPHcitSP
+H1f4I3y7I+oypA3uvSF60A3L7C0n3FduTkM3MP+Mdj2dKC4D6eAY3SjZX1w
Pojff71qsUYhl+6r9BuY/5X2Bo/uHD8b+fs+h61enM8uNrw/hNHPUjq/i/sv
v/dllkD9SPu1C9NTn/L6KseX7o9c/9ayvcHRXFcTSzwHy9+XyitzCxyqOgIe
9KcBnNaU36OS7uvgCTdugE8M6CrsJ99dhL6EPaQ619lztCslPW5d11S+b8kg
8JWSVvLvcemXsSUXdpTZ0dyHdu/ndyM6dJ1Tl+3dyveHyQvBxcP68H2i3HYj
az3OmfM7D/MOG1k3+sox2OOODTkt9L8PXO6VAdx/6izwsB43wEt6DlNwWO12
tEN7pdKv5I47+FsA0yccslHwxqjKfC/6lg6WxhfsmxnxlhhftTem8V1GrH/z
95xVyDu8pd1e2o/AW7/z9//j5pQAr9jL7zLI66ksl9fDZ6WjwYfN3cBV1/O7
DcNn+YLvN0riO5rPXHDhybfg+IfrwfbWP8E97HeCE9PxPqGT9AU+fLAeOGxh
EtjqOe2xE/fBb0pXdf1Y8I7DJyDvbTse/CD+qoKl/R18UFcb+SVYPBD5lQVv
rkc/rfwmVfkuYP+YfkfvaD8utMp3Nek/nbR+G1mb9UgPjl5yH/VZ22s50t8q
Sz+qA/12Qp4dRq5X6QD4t03IzzDD4RXiV6/yHjw7+IujSXm60yX4biDkRe9X
Xnr6pcn8r5+1KfsdiLU3ZY2Pd21w/KJeRtaPvA6W37N0FuPrQm73oqmRDW0K
6Bf8rHQA4meHNQRXW4/vEgU0vNQcXFoN1kQ28AabZ49A/PV3e4Ol8W1kbfFc
+hXP37MQ5cU/7AMe8h7104ct7AA+UyIK5Y+b0x685iu+b6DebdaxHvsrxcg5
Hae3A1cNeGJkH99C8qPj95D+pbpzPer/MernlNcfLN57/e6t7gS+38hMrCet
wM4G2N21B2JHgKemwA6ta1MwAdy8PezQ2lnR08HS/IRdfXX/eeAVqY0Rf9yc
xeAdfSDXDapJP2j5PTtv9EZwRmhvyBMb7xbyQeAbWfvBeWX6gJfdjgJfKYn4
xvEOzhmOdwbV+biTYP+ddcFjfRJF++3A9pPPguX1Mzf7DLh+W9r1pfUKvK7X
cpQ35xbTi+8p6GIbnpT7D/FHfTkEjnaJgLzelBiwtJ5A/sz/ADil5E1wp+nn
wAWrchScFPINfOExy7dpNdi4f+gel9su2kN/iH/9NvyS41zbgytO3ASO3N8O
/KbFGnB6ow7I70H8aup7KP0lLv22VJ4P4N1mS+gHKvZPmbVJU8DrYlaCZf8Q
L/1ycJADvrumi1vG+C3bwx7l97jcELC0nhlZ51G9C/N/pKHdQ4w38fvGPOm+
yfnG34sWzb+Wk+BvUzQ/pfuukdWFVo3Awr/G0OpyLVPWSOdZsPh9qNYpj36w
IbOzET/+YQX2rzh/df2XfrCJJaKE/soxPu25Bqt2v9OPNGQu6jOkR3mw8G/R
7htUwVS/RfkHXGmkKN+xjTk4sgH9UFXNSoLn/SgB9upYiuePhEKev63biPPc
S57PyvRB+U/96ZdasIr9tdWXv5vw6TwVLK+X4veP8nor3UfgT1S0Hsv29XpT
XoGFfVzSN8sL7n4cfCPrBfP70wDetph+trprtMe2sysQ9wv6SxUkCj9g/t5Y
Wu9uyedN8Lg553l+DG4u/LtiuJ8+ol2zIHEP7yfPadeTz8/BwV/AL9XLeL8R
/nj3Vi+ln7C4XxxtOBMc/dMHLK1XbF/UAGFPmkC+STtPtTc878q/F5PPv5nu
k8V9ZiL9boU/YoPt08AWatq5PKovB8v3lesndtPPd+dL1Ffen3065zszPf2a
ZXtfOzv6NRd6lqxjKpfuf+DpvaPA8u/f1JVDwYYSUWBpvaUfsPMhsDRfmT4k
sY6p/mKLketU2wEO+EA71B/X9/E+I37PJt833AzbwNWriPqK37/lJMSL/t0C
ltZLBTfOP/tLLvRcYuSi84z4faG0flzgeH8xE7z+7k3WV/h7RjZIUfTvv35p
HH97aAed8o1+2HmrnHkffs754fWuJrjvbo5P4Q+qG13rA8eXlbUYH2S315Z1
2F8fTVnX8NIXcR+mXDp/i/qUhbxxfjGuT/y9qPbuyJ/iPlcNfGzIDzG/ahnZ
kPT4hxhvjor0utmUhy004+8AgiDX/lhfinLHyii/5lYL0/J06spk/f7iSH/i
WNlfsjxfJt/g+uU5ifqR17+c4TNQ3r3V5mRhD3bKu6OwJ4jzp/F8iPI9ql/m
eBe/X9w3iPNdO4nyx+UyOF6PlDDeW3TDZrG/3M6Zy/Yn6pf+xTq/yMcKnuqU
qWD5vKpOLIn0B2KzxPimP/Q0Jz3v73tpp3LO6y/WC1/cE3LVpeT7Kuonn08m
aM7SzyKMv2Px/VPlaMJF/geyXJwHVS138HcuB1xskL7cKy1Yun9A7jC5Ldh9
8wKwXQf+rqrc2vlgaf8Cf7MkV46oDl74OUzct2wVLO0v4EkzyJc9+DsZuxf0
a3mlLgXe7jxRwZuiBoB/rifXMQwGS/uRghf2tfol/3OI3+EcPstGIa9TrQbY
aWNfBTd93Z1+LJF2CrY57wjuGtgDnJPgCa7ZZinf+Zt6ivrye2HhCztQv/34
HcJ1Mfwd0fRPjqasa/+2EP3jng99G7ptuw3ut9vdyBYLP9M/7exyNyNrh9W4
I/sjGrlw/jV+Z/P6CQcj6w31D4Pz10L/2mWz9zqatL+Id5uVRPlbvpOl9cE4
ngyfn3wU/o3v/y9cdJ9JK/tOwb1nvlZw1fPPFNzL+z/5vAs+9IC/e5L9F2W5
tF6Br658gPvPhG78zuk/FuQrJa1Ef98EG+rXpx9HjxtIfyGkJfil+pI4/3I8
SOu36f2n6Hzt1hb+orqPz3ketrdeoGDR3/+/LL4PV3QfkHlzvV3g64PJzaZt
FufvYLBf5E5wtvtk1Mcpj+fj9yNQv6L5HiPtBFqsvwuFfuBfqb1Vdgra32pS
TcX9SVoPIF+umoz+61gVrPrSapaRtY03/0R/ivO1zq9LdUX+S3rWQPwK7cIg
F/5GuuK5uA9p/Xe+xP1Y3CcM3S9mKPjDqmjkX+3NQSNPlu6DkEvnD6RvZkO/
vR/rl6G84mHrwd4foR/D2zJkaX1E+ducJ4Kl8wXi9+2M72wW6V+212xffATx
NdYLxH3+KOR1X8IvtOj+JY0PyA3LY8GpS50g79D1H3DbpIayfUjUr4/QF34n
p7O26ivbfxQ8zSmT96MAB9meIcaDBiyP9/cj7MFjfb7xPpRG/87ylS3E+kH/
znUx/F3sNufX/I5kj/Lg2xkfhH2G6+uc4C/8jiXnv2pl6nt+t1Osx9otuQq5
bC+R5dnutPd8fO7C31XWp//dkgMasLUVvzt6qjHWG9WCa/xuqbnWUewf1mK/
aQie6eAq1pdWv2RpPILvr+6kYHVlLwU7XuipjB/P3+1eH0y/2hS/vuCgT5Hg
DXd7g+fuWQhe1Jfcsv12sMNWr//Ju806gv13HgTL+6O0vjK+2B9bT9rD73Rm
83fFI7v8qeB9P8Pp3ziSrPscBu7QtQX3k20bwZZnmwn9bQCPqeUBTkzfCT4z
rI5CPs2J/fFbi1hw94+Vwc/cj4AfPbVWyOXxIsvl/TPaJQLcpHppsOtLfqdV
ut+xPUHUZ6NLXzA+h7xfAz4f90nYT6aBpfsf75fdydL9TJ6f4CfNnvJ+qVmo
4EabF4BDFtwDS+cLsJhPRnsW/di5vhexmH/G9RAs2y/MEu7Tb1nYK1q0zwC3
vrxXIRfridE+Bb/tyAarfsmbou6CZXuEPF8W9l0H7tM5H3KxHkr7gblxfGr7
7g4CB+7id26/BejqmYyHovXZr0Z/sGyPUycugV//6WFjuR9N4Pdgq1eZZqpf
w7m4meJ+3glyuw6zwa6V8LsHw/OEYLB0v0P9VtadAf5i+cPByNL9EBxbDL+z
0CVYDAZ7X8wwsiZ6ySCW5xBjZO2y22N4nr/mhfgtdgyjvWULfpdXZC+U5h/Y
rOJQcF4Z/i5Lrp//lalGNoyuRXtcQZkK4FaXR/F8/9rSyEX2Rsdx4Lxkj+5c
T62skf+COt3A4nvIfg/iu4v2tDSyptaFnsx/FX7XY6gUwfpI51VFeeL7x3md
9bT3aE7jd6GZ3T4OEO1zMXJa+64twIWrnO3Zv+6if/AdUk1BYk3T9EUs6m+c
r6as+20T7UGubfG7WKl/mrB9618Y2S+2YVPWf0SWkWOfJ3iCM47fU3B6xl9G
NrS1Y32cN+I7meqZ8+qzfUlTjKy5kVWH/fe5J34HO723E8dHSEukT7CoBjYc
soFctk8bxhw3/k75/7uvrfrbyEX2IsO6BLD1RNqLfA6eNnKRPct5HL7/XaSP
aBfkL41v1ke/5pkxfnDj/LYcL/y+u/fdkW3I/N5+UXxN95AaivqF/25kv3pT
aH9Tz/AzfoegyH7l41IH3yWQ74uGU22NLN3fS1K+vwK/YyDux5pPH/Cdgw5d
v/K+xb+XUHTfjf3jofh7GbTnaxyjbU3Tx/73J+Iblufxfr91NHjZ7ee8P37t
xu9YCnuTbnBDcJE9LK0qWDo/876dnifSs7/kv69wdSXna+ZEfodAtm+q/lzL
7xRaHeN72dlm+E6UpgO/UylzXvZPe1OW/av9Dr3Ad3KSPfhdK03KJHyHRHXm
Gv0aRoWCJ+zjd2IMLWPAccf493AUfy/p/wEtWxtG
      "]}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJx91XtIU1EcB/DrfGZiS6zWfE2dtlzqZISPKS2s1D/ERyEjxjIxERFdD8wk
7JKGKdFmKmIZaJI96GEiJSKyykRExGBm4R/OLCykUlRy5SPP99zhXX94YXz5
8Dv3nHvO2T03MKc484wjwzAOG7+8jZ+AsV1SNU0FSYXWIOJ743IjOZfRvZ/v
jSuI73SDQEJSHd65jaRJn+CLeninB/LTCPptKekTop1S6YPUxcGM1kDbj7ft
QI4t+5Fk60Qwe7c4AP2WecOmkYt2ZjyuwuocIaxOqIHZ6GpPkhZrOX0+TSxs
/BEfyLdtPjYrdHH7cH9+7S6SwvBOOcns2C5/ktqe6nCSHUlT8MP5W7BEuwPj
PvG9DWfnquAvo/dgY+NPuF7UDzcXZeK5zKmf4Rbxc7hw5i9cOfseHmp1jiB5
+dAS7JTlCZfWiTCPePc9cLO4GPa/JofnHgzAbEE8XNIXgHnqelLgIq9EWKZN
g/Py8mCxUxZcaaoJovM5CbffcQom2XkuP4KuGwuvPDpLbG7Tr/LdNViyxnfQ
hNXO5JJu4WKvii3NSF1eh/KdHJ2C/6k+oQbrp6/TYN9WwlwPYJ+STsMSFwd4
ubwAjtH9oak8j0x+uYDU93ahncYggC3SAfSrqPqAcVqamjDuR2u5jKRwvA02
NhbB+tqnsPqgDraMvIItaakybl8iUXcrpP+37+3UujLMay50HlZMXApB/xor
nK46BVusa7BRdATWeznivTUtyWCTRAh3+L/DuiVPiRXc/VLaPhgeHfmNfUmf
DoHnVs3BXD/0HHj8AnYTyGFh1k1YoVTCxsTt8LI5hraXVwXZmXu/bGarD+8m
ma+aDENdE+vCtZPyzC6s1gfz6x4COfVkGqw1vEG/rLkUZhsqqPNr4aHWozBT
YYK9n7nSeuEM3Nxvoe/H+jodf6wbZnKEriQrZ2tpXRwJF86oaL33Atzyawbv
Izs8DC+u1lML5DgXZVHXqXNVbnT9y6gbEuEbjUUws3wcttz38eOe3x1Z0LsX
da0B5xLbu4h1U2d/3Un7eeuN+pUCeu51DdL2J6ad0Z/0mIRbV8ZufTl/y+iW
/1eP4sbztvPmeQ/bvge8+237vPk9+QeTaFQd
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{18., 18.}, {20., 20.}},
  ImagePadding -> {{0., 0.}, {1., 1.}},
  PlotRange->{{0., 18.}, {0., 18.}}],

"DocsIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxV1F9IU1EcB/BTWrppNrLANxdpIupLcay4Ky9CwaAiZwxZgpt/QNuDOUZE
DDov9dCf6ZB6SWWVkkEPY0hIKgiNiMyiMgjEWIQkkWvSv4GY3fv73um5g7sf
n/1+5+7cc87v7m3tdnXkMMa2aNcp7drKsp9aVfuyh48fVCUHe/y6k5d3p7gW
Rd71XspXNr8hh6Oj5F9rYxQHZj3676yvJFGjx8TZHm7cr1KPttrvVOf9qpTp
0VFs5POr98jjWelVi3x/1tybL/+/PkKa34al+ZNFzLdTNjvdAB+zwpl6s+8c
gN1FGD+/VEReKEP+xAh88hDywy3whBOusMPb3Kgf+rSDYiyA/JEHcGcE/twF
+ydR/94B+xbhqAXu3mWheuV1IbldIbOZPngqCA+3wC/vwROH4X3zFmN+sM9m
pdi2XkDR1kQW3jk4Poi86yE8+AOO3yww1pOiuHUNPmqFz4Tg/hK46iKc64Yn
2+CuCGLKjzj7ypwv307zFDfOwR0K5p2phz9cMlkkkuWyvbef7Se3rudR/ryj
SrZXKa021S9e4LJToSsm57rDZOFp1C0iywNcfj7X+BA3PT+Lcml9hLPwPpfX
76nzMZfXV+sfLq2/ePJzCnnsz/TI3QTyxv6NPp9BHvsrAp1vYez/dLD/I4zz
odbEFzAe5yf5t/EL8jhfaiywBOP8RVfeLaMe5zO9+mgFxvlNh+p+ox7nWx17
8Sc7P/38p9fmMjD6w+5pX0U9+idUx/8hj/761jAOG/236Wx/Gu+jjf41LPX3
5vvrP0NK/6g=
     "]]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGZiAAOFnAoBBxBjqa2IAzJ/K5sxiDbIU5YA0Q5T
wkxA9IX6EyogWqDHC8wXuOekAaIb5jwyAtEBmevB/ATx7WD+hw0Bmsh8g517
NJHVF8ha6CKbx/HhmxGyfRyfHpoguwfOh7r3x/S/YPFpL06IgmiNk0fB+n3Y
/cRAdEfze0MQbcFcAeZzHM03AOu/cATMD8iO0gbRKg3mYP6E0//B7pe6MksI
RD9Yt1QNRN8qNgXLb/glowh296PjYL6Dq7sMsvkJSm/A4VXC6w/m77jFBXbn
rncnRVHCF+R+AJmmV08=
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQQOPmmqDkD6wLKZWiDa6rQAmL9L1QXMfy60SQVE
m6f+1ATRO0x9wfzo7F1g/pUULSUQ/SMqSQdEVzG8VwbRfzYYYOULzzqhArFP
EsRv4HP5pYIkfyAlSB1sf9McJ7D6fd3SaiD6yZpZusTwJaTjwPZZCIbpg+iM
2jyw+3xUVQ3A4gs6wXybH5/A/A/7/MD8A49ZjJD5H6YyGUHMm6cIojlcVhmC
6DeT28H8BZvmgPkaxdcVwLSXN5jvodwF5q/YchzMB4YvmL9h2ycwP+OPBJhv
oZgPNp9BJ1UORAeoC4D5Dk+YZcHuScoHq1/wgVUGRN/ZsxnsXobQg5Igess2
ITA/IVtKAuyfZ3x6YPXzzoqB6BIXT3D4Nez/Kwqi55yWB4fPAsU+MP/LTR49
ZL4GL4M+Mv+EZTDEPsZ7YPMO7JAFu+fBPyNJiPxmMJ+BuVMa7O5KDyOI/Caw
fyQK54D5N57+V0DmO/gsU0Lmu521VkHWD0uPMPOtTk9QQ7b/xi4LdWT3wfgw
98P4B5ZF6iLr36V6RBvZfHB6BwB8NbMk
      "], {{8.499800443649292, 17.02910041809082}, {8.738800406455994, 
      17.259100437164307`}, {8.773800373077393, 17.294100284576416`}, {
      9.003800392150879, 17.515100479125977`}, {9.0218003988266, 
      17.073100328445435`}, {9.012800455093384, 16.84310030937195}, {
      8.985800504684448, 16.304100275039673`}, {8.853800535202026, 
      16.437100172042847`}, {8.58880066871643, 16.605100393295288`}, {
      8.58880066871643, 16.605100393295288`}, {8.58880066871643, 
      16.605100393295288`}, {8.53480052947998, 16.914100170135498`}, {
      8.499800443649292, 17.02910041809082}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQDQQP/hlJOgDpA8tmaoHoB6vOSwBph3OXT4P5DE3F
ID6D5QQGbTC/RQ7MF4q3gPBv6YD1L/Ap1QXRCpurpUA0S76gAVg+croMiN7T
WwbmN7xZLwuiP7z+AOY/uMggB6JfvFxqCNH/Wx7snscsRmD1YbYKyPIdugvB
/B08D8H6OQ4/AfNDLjZC7HPiVwLRK5Rv6oPoVXcvK4Poig+pekC6weMHkyrY
3rAzYPfu36YE5kdk7wLxFzSu8QbzGwqtsfEZfP0uqoDdc32hDti9HSVg90a8
UgHLB1hNAvtniaIemH9AeacssvyC4yvB4aGTzAdRv1sdLJ8xYw2Y3yBuDtZv
wq+tRwz/g6YVWL9IfIUeNPzB5n9Z1wrmH/ixEcx/oH0UzHdIdAarD5giBg4f
B4t0ML9CWlcfGr9g/oLT8hB5KyFpEC3AuQqsf8GX2+D4FdnqBjHv0Q2w/JJv
ahD7FPsg9jH80yWG79BXCtavsL0QzN/gYQ/mn6mt1cHKP10P9v+WX3vA/APm
FeD4/8YyBcwXyG8E8wMy+8H8Be2tKHwP5S5UfrmuIohedbYLzP8x1QicXhYp
6mmCwzejQQlEG/G/1gDRKp8OgtVrWBwH8288/a+AzH/wb5McMp+BuRPs/mPq
+ZoQeaT8BgBUvtJS
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQS8kp9VHYC0wYKfhiD6kuViFRB9oX+hEYhewXFb
CURPYGMwBtE3nv5XQOYrtHnKIfMfaO6SQtbvkCopgWz+gWWVoiCaIz8Qwj/9
XxhE/5iea4DM1+Bl0EfmR7xS0UXWr7czRhvZ/M83ebSQ7d/xa48GsvuA5mkg
ux/Gh/kPxof5H6YfFj4w8z1+OKkj2w80Tx3ZfTA+zP0wPsx/MP0w/6OEPwD3
A2H5
      "]}]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
     8.835800170898438, 15.278999328613281`}, {8.994800180196762, 
     15.322999328374863`}, {9.012800171971321, 15.331999324262142`}, {
     9.171800196170807, 15.375999324023724`}, {8.96880017220974, 
     15.525999337434769`}, {8.747800171375275, 15.68599933385849}, {
     8.446800172328949, 15.640999346971512`}, {8.420800179243088, 
     15.561999320983887`}, {8.393800169229507, 15.499999329447746`}, {
     8.375800162553787, 15.411999329924583`}, {8.51780018210411, 
     15.428999334573746`}, {8.667800173163414, 15.375999324023724`}, {
     8.835800170898438, 15.278999328613281`}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     20., 16.}, {13., 16.}, {13., 17.}, {20., 17.}, {20., 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     20., 14.}, {13., 14.}, {13., 15.}, {20., 15.}, {20., 14.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     12., 7.}, {5., 7.}, {5., 8.}, {12., 8.}, {12., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     12., 9.}, {5., 9.}, {5., 10.}, {12., 10.}, {12., 9.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     16., 7.}, {16., 12.}, {17., 12.}, {17., 7.}, {16., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     18., 7.}, {18., 11.}, {19., 11.}, {19., 7.}, {18., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     14., 7.}, {14., 10.}, {15., 10.}, {15., 7.}, {14., 7.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"DocsIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
     0}}}, CompressedData["
1:eJxV1F9IU1EcB/BTWrppNrLANxdpIupLcay4Ky9CwaAiZwxZgpt/QNuDOUZE
DDov9dCf6ZB6SWWVkkEPY0hIKgiNiMyiMgjEWIQkkWvSv4GY3fv73um5g7sf
n/1+5+7cc87v7m3tdnXkMMa2aNcp7drKsp9aVfuyh48fVCUHe/y6k5d3p7gW
Rd71XspXNr8hh6Oj5F9rYxQHZj3676yvJFGjx8TZHm7cr1KPttrvVOf9qpTp
0VFs5POr98jjWelVi3x/1tybL/+/PkKa34al+ZNFzLdTNjvdAB+zwpl6s+8c
gN1FGD+/VEReKEP+xAh88hDywy3whBOusMPb3Kgf+rSDYiyA/JEHcGcE/twF
+ydR/94B+xbhqAXu3mWheuV1IbldIbOZPngqCA+3wC/vwROH4X3zFmN+sM9m
pdi2XkDR1kQW3jk4Poi86yE8+AOO3yww1pOiuHUNPmqFz4Tg/hK46iKc64Yn
2+CuCGLKjzj7ypwv307zFDfOwR0K5p2phz9cMlkkkuWyvbef7Se3rudR/ryj
SrZXKa021S9e4LJToSsm57rDZOFp1C0iywNcfj7X+BA3PT+Lcml9hLPwPpfX
76nzMZfXV+sfLq2/ePJzCnnsz/TI3QTyxv6NPp9BHvsrAp1vYez/dLD/I4zz
odbEFzAe5yf5t/EL8jhfaiywBOP8RVfeLaMe5zO9+mgFxvlNh+p+ox7nWx17
8Sc7P/38p9fmMjD6w+5pX0U9+idUx/8hj/761jAOG/236Wx/Gu+jjf41LPX3
5vvrP0NK/6g=
     "]]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGZiAAOFnAoBBxBjqa2IAzJ/K5sxiDbIU5YA0Q5T
wkxA9IX6EyogWqDHC8wXuOekAaIb5jwyAtEBmevB/ATx7WD+hw0Bmsh8g517
NJHVF8ha6CKbx/HhmxGyfRyfHpoguwfOh7r3x/S/YPFpL06IgmiNk0fB+n3Y
/cRAdEfze0MQbcFcAeZzHM03AOu/cATMD8iO0gbRKg3mYP6E0//B7pe6MksI
RD9Yt1QNRN8qNgXLb/glowh296PjYL6Dq7sMsvkJSm/A4VXC6w/m77jFBXbn
rncnRVHCF+R+AJmmV08=
     "]]}, 
   {FaceForm[{RGBColor[0.8666666666666667, 0.06666666666666667, 0.], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
      4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQQOPmmqDkD6wLKZWiDa6rQAmL9L1QXMfy60SQVE
m6f+1ATRO0x9wfzo7F1g/pUULSUQ/SMqSQdEVzG8VwbRfzYYYOULzzqhArFP
EsRv4HP5pYIkfyAlSB1sf9McJ7D6fd3SaiD6yZpZusTwJaTjwPZZCIbpg+iM
2jyw+3xUVQ3A4gs6wXybH5/A/A/7/MD8A49ZjJD5H6YyGUHMm6cIojlcVhmC
6DeT28H8BZvmgPkaxdcVwLSXN5jvodwF5q/YchzMB4YvmL9h2ycwP+OPBJhv
oZgPNp9BJ1UORAeoC4D5Dk+YZcHuScoHq1/wgVUGRN/ZsxnsXobQg5Igess2
ITA/IVtKAuyfZ3x6YPXzzoqB6BIXT3D4Nez/Kwqi55yWB4fPAsU+MP/LTR49
ZL4GL4M+Mv+EZTDEPsZ7YPMO7JAFu+fBPyNJiPxmMJ+BuVMa7O5KDyOI/Caw
fyQK54D5N57+V0DmO/gsU0Lmu521VkHWD0uPMPOtTk9QQ7b/xi4LdWT3wfgw
98P4B5ZF6iLr36V6RBvZfHB6BwB8NbMk
      "], {{8.499800443649292, 17.02910041809082}, {8.738800406455994, 
      17.259100437164307`}, {8.773800373077393, 17.294100284576416`}, {
      9.003800392150879, 17.515100479125977`}, {9.0218003988266, 
      17.073100328445435`}, {9.012800455093384, 16.84310030937195}, {
      8.985800504684448, 16.304100275039673`}, {8.853800535202026, 
      16.437100172042847`}, {8.58880066871643, 16.605100393295288`}, {
      8.58880066871643, 16.605100393295288`}, {8.58880066871643, 
      16.605100393295288`}, {8.53480052947998, 16.914100170135498`}, {
      8.499800443649292, 17.02910041809082}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQDQQP/hlJOgDpA8tmaoHoB6vOSwBph3OXT4P5DE3F
ID6D5QQGbTC/RQ7MF4q3gPBv6YD1L/Ap1QXRCpurpUA0S76gAVg+croMiN7T
WwbmN7xZLwuiP7z+AOY/uMggB6JfvFxqCNH/Wx7snscsRmD1YbYKyPIdugvB
/B08D8H6OQ4/AfNDLjZC7HPiVwLRK5Rv6oPoVXcvK4Poig+pekC6weMHkyrY
3rAzYPfu36YE5kdk7wLxFzSu8QbzGwqtsfEZfP0uqoDdc32hDti9HSVg90a8
UgHLB1hNAvtniaIemH9AeacssvyC4yvB4aGTzAdRv1sdLJ8xYw2Y3yBuDtZv
wq+tRwz/g6YVWL9IfIUeNPzB5n9Z1wrmH/ixEcx/oH0UzHdIdAarD5giBg4f
B4t0ML9CWlcfGr9g/oLT8hB5KyFpEC3AuQqsf8GX2+D4FdnqBjHv0Q2w/JJv
ahD7FPsg9jH80yWG79BXCtavsL0QzN/gYQ/mn6mt1cHKP10P9v+WX3vA/APm
FeD4/8YyBcwXyG8E8wMy+8H8Be2tKHwP5S5UfrmuIohedbYLzP8x1QicXhYp
6mmCwzejQQlEG/G/1gDRKp8OgtVrWBwH8288/a+AzH/wb5McMp+BuRPs/mPq
+ZoQeaT8BgBUvtJS
      "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQS8kp9VHYC0wYKfhiD6kuViFRB9oX+hEYhewXFb
CURPYGMwBtE3nv5XQOYrtHnKIfMfaO6SQtbvkCopgWz+gWWVoiCaIz8Qwj/9
XxhE/5iea4DM1+Bl0EfmR7xS0UXWr7czRhvZ/M83ebSQ7d/xa48GsvuA5mkg
ux/Gh/kPxof5H6YfFj4w8z1+OKkj2w80Tx3ZfTA+zP0wPsx/MP0w/6OEPwD3
A2H5
      "]}]}, 
   {FaceForm[{RGBColor[0.8666666666666667, 0.06666666666666667, 0.], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
     8.835800170898438, 15.278999328613281`}, {8.994800180196762, 
     15.322999328374863`}, {9.012800171971321, 15.331999324262142`}, {
     9.171800196170807, 15.375999324023724`}, {8.96880017220974, 
     15.525999337434769`}, {8.747800171375275, 15.68599933385849}, {
     8.446800172328949, 15.640999346971512`}, {8.420800179243088, 
     15.561999320983887`}, {8.393800169229507, 15.499999329447746`}, {
     8.375800162553787, 15.411999329924583`}, {8.51780018210411, 
     15.428999334573746`}, {8.667800173163414, 15.375999324023724`}, {
     8.835800170898438, 15.278999328613281`}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     20., 16.}, {13., 16.}, {13., 17.}, {20., 17.}, {20., 16.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     20., 14.}, {13., 14.}, {13., 15.}, {20., 15.}, {20., 14.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     12., 7.}, {5., 7.}, {5., 8.}, {12., 8.}, {12., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     12., 9.}, {5., 9.}, {5., 10.}, {12., 10.}, {12., 9.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     16., 7.}, {16., 12.}, {17., 12.}, {17., 7.}, {16., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     18., 7.}, {18., 11.}, {19., 11.}, {19., 7.}, {18., 7.}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
     14., 7.}, {14., 10.}, {15., 10.}, {15., 7.}, {14., 7.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"FindIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}}}, {{{19.5, 3.961899995803833}, {19.36200000345707, 
     3.961899995803833}, {19.224999994039536`, 4.013899993151426}, {
     19.119000017642975`, 4.118900001049042}, {13.462999820709229`, 
     9.775900602340698}, {13.253000259399414`, 9.985900163650513}, {
     13.253000259399414`, 10.326900243759155`}, {13.462999820709229`, 
     10.536900281906128`}, {13.673999786376953`, 10.747899770736694`}, {
     14.013999938964844`, 10.747899770736694`}, {14.223999977111816`, 
     10.536900281906128`}, {19.880999982357025`, 4.880900025367737}, {
     20.090999960899353`, 4.670899987220764}, {20.090999960899353`, 
     4.328900009393692}, {19.880999982357025`, 4.118900001049042}, {
     19.775000005960464`, 4.013899993151426}, {19.63799999654293, 
     3.961899995803833}, {19.5, 3.961899995803833}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
     15.269200325012207`, 14.115400314331055`}, {15.269200325012207`, 
     11.141400337219238`}, {12.858200311660767`, 8.730400085449219}, {
     9.884200096130371, 8.730400085449219}, {6.911199569702148, 
     8.730400085449219}, {4.500200271606445, 11.141400337219238`}, {
     4.500200271606445, 14.115400314331055`}, {4.500200271606445, 
     17.08940029144287}, {6.911199569702148, 19.50040054321289}, {
     9.884200096130371, 19.50040054321289}, {12.858200311660767`, 
     19.50040054321289}, {15.269200325012207`, 17.08940029144287}, {
     15.269200325012207`, 14.115400314331055`}}}]}, 
   {FaceForm[{RGBColor[
    0.6509803921568628, 0.6509803921568628, 0.6509803921568628], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
      3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZiAAMHRl1tByC9wHWaLoj+U3pAC5l/dkY0iN+Q
9fw2mP/iuAVY/uBXDz0Q/WXeHE0QnWcrZQCiO7YraIDoGvunYP6LT/ZqIPrC
d2dDEJ0Ru0cVRH+4FAvmR9yqBvMTBFaA+RuEN4D5Crdfgvkv3B6D+Q+WahtB
7K8Am/dkqbcRRP9vMN+HxwjMN1hZDHZPyOOtIP0Ny9KDwf7bIbcV7J4ZVoo6
ILph6mOw+5fY+ID5iwpiwXzFGkYQ3yGE7yzIvw3ygVUg/R/ceRbpQvQngvgc
irdnguVvznJDCT+U8AQAUYVacw==
     "]]}, 
   {FaceForm[{RGBColor[0.2, 0.2, 0.2], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0EDSxHlR2AtIPcNyMw/eKmDDKfYauaCJiefNIA
mT9B1FoHmW/A+lgNWX9DdqeSA5L5MP4DEVlNFPl1ZbrI+mF8mPkwPsx+mH6Y
+9DdD+MrNCUpgOgNyyqlkPkORzbyg+iEJ5tUkfkw+2D8uMWJhsj6265wmiCb
D+OvMPXVQuZ/mD5XH1k/jA8zH8aH2Q/TD3MfivsBETBeQg==
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"FindIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], 
   {FaceForm[{RGBColor[
    0.5372549019607843, 0.5372549019607843, 0.5372549019607843], Opacity[
    1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
      0}, {1, 3, 3}, {1, 3, 3}}}, {{{19.5, 3.961899995803833}, {
     19.36200000345707, 3.961899995803833}, {19.224999994039536`, 
     4.013899993151426}, {19.119000017642975`, 4.118900001049042}, {
     13.462999820709229`, 9.775900602340698}, {13.253000259399414`, 
     9.985900163650513}, {13.253000259399414`, 10.326900243759155`}, {
     13.462999820709229`, 10.536900281906128`}, {13.673999786376953`, 
     10.747899770736694`}, {14.013999938964844`, 10.747899770736694`}, {
     14.223999977111816`, 10.536900281906128`}, {19.880999982357025`, 
     4.880900025367737}, {20.090999960899353`, 4.670899987220764}, {
     20.090999960899353`, 4.328900009393692}, {19.880999982357025`, 
     4.118900001049042}, {19.775000005960464`, 4.013899993151426}, {
     19.63799999654293, 3.961899995803833}, {19.5, 3.961899995803833}}}]}, 
   {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
     15.269200325012207`, 14.115400314331055`}, {15.269200325012207`, 
     11.141400337219238`}, {12.858200311660767`, 8.730400085449219}, {
     9.884200096130371, 8.730400085449219}, {6.911199569702148, 
     8.730400085449219}, {4.500200271606445, 11.141400337219238`}, {
     4.500200271606445, 14.115400314331055`}, {4.500200271606445, 
     17.08940029144287}, {6.911199569702148, 19.50040054321289}, {
     9.884200096130371, 19.50040054321289}, {12.858200311660767`, 
     19.50040054321289}, {15.269200325012207`, 17.08940029144287}, {
     15.269200325012207`, 14.115400314331055`}}}]}, 
   {FaceForm[{RGBColor[
    0.39215686274509803`, 0.39215686274509803`, 0.39215686274509803`], 
    Opacity[1.]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0EDSxHlR2AtIPcNyMw/eKmDDKfYauaCJiefNIA
mT9B1FoHmW/A+lgNWX9DdqeSA5L5MP4DEVlNFPl1ZbrI+mF8mPkwPsx+mH6Y
+9DdD+MrNCUpgOgNyyqlkPkORzbyg+iEJ5tUkfkw+2D8uMWJhsj6265wmiCb
D+OvMPXVQuZ/mD5XH1k/jA8zH8aH2Q/TD3MfivsBETBeQg==
     "]]}, 
   {FaceForm[{RGBColor[
    0.596078431372549, 0.8313725490196079, 0.8823529411764706], Opacity[1.]}],
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZiAAMHRl1tByCtwDJNF0T/KT2ghcw/OyMaxG94
tfQ2mP/iuAVY3nGLhx6IXjVpliaINtgkawCiOx6pa4DoKRJPwPwXn+zVQPQM
CRdDEJ0Ru0cVoj4WzI+4VQ3maxiuAPM3CG8A81/8fgnmv3B7DOavOKZtBLG/
AmzehTM+RhD9v8H8nteGYL7BymKwe6Yc2grS37AsPRjsvx9/t4DdM8NKUQdE
M4Q8Brt/iY0PmK+kHwvmK9YwgvgOV86cAfm3QT6wCqT/w/FTC3Uh+hNB/IrN
MrPA8jdnuaGEH0p4AgDOQFlf
     "]]}},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"OverflowIcon" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[0.2, 0.2, 0.2], 
   Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
     3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
    3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJxKA0ECo2qBg4gxr8t6iD6gCODBphffUUORDv8yZRH
lnfwWwQW57oqAVbXsClWFoXPMk0GRX3YOWkQ/U0tEIWvcnOdGrJ6CSZvMN+B
yRuijmWaFIgO0K8F8xlWGYL5DTv2gfkPav5LIrsXxn/g7ojCV7jYpIGsX+Pf
Fg1k80Xqbxkg2z8zi8cQ2X0wPsz9MPUw//VNXmGA7P+lOeEofPTwhfmXAyoO
C48JUH0wfgPUXHh4Qu2FhXcH1F2w+IDzYfEFVQ8LnzrbLE0U90DlYe6F6Yf5
B8aH+xdKw8ID5j4YH+Z+mHqY/6Dh3SABjVdYfADDRx05vpr2/VdDdi+MD4tv
GB+WHmD6oekFbj5K+AIASIGeBw==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"OverflowIconHover" -> GraphicsBox[
  {Thickness[0.041666666666666664`], FaceForm[{RGBColor[
   0.2901960784313726, 0.5843137254901961, 0.8], Opacity[1.]}], 
   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
     3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
    3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJxKA0ECo2qBg4gxr8t6iD6gCODBphffUUORDv8yZRH
lnfwWwQW57oqAVbXsClWFoXPMk0GRX3YOWkQ/U0tEIWvcnOdGrJ6CSZvMN+B
yRuijmWaFIgO0K8F8xlWGYL5DTv2gfkPav5LIrsXxn/g7ojCV7jYpIGsX+Pf
Fg1k80Xqbxkg2z8zi8cQ2X0wPsz9MPUw//VNXmGA7P+lOeEofPTwhfmXAyoO
C48JUH0wfgPUXHh4Qu2FhXcH1F2w+IDzYfEFVQ8LnzrbLE0U90DlYe6F6Yf5
B8aH+xdKw8ID5j4YH+Z+mHqY/6Dh3SABjVdYfADDRx05vpr2/VdDdi+MD4tv
GB+WHmD6oekFbj5K+AIASIGeBw==
    "]]},
  AspectRatio->Automatic,
  ImageSize->{{27., 27.}, {27., 27.}},
  ImagePadding -> {{1., 1.}, {1., 1.}},
  PlotRange->{{-0.5, 24.5}, {-0.5, 24.5}}],

"MinimizeToolbarIcon" -> GraphicsBox[
  {Thickness[0.125], 
   {FaceForm[{GrayLevel[0, .35]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{1., 4.}, {4., 7.}, {7., 4.}, {1., 4.}}}]}, 
   {FaceForm[{GrayLevel[0, .35]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{1., 1.}, {4., 4.}, {7., 1.}, {1., 1.}}}]}},
  AspectRatio->Automatic,
  ImageSize->{8., 8.},
  PlotRange->{{0., 8.}, {0., 8.}}],

"ExpandToolbarIcon" -> GraphicsBox[
  {Thickness[0.125], 
   {FaceForm[{GrayLevel[0, .35]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.9998999834060669, 3.9996001720428467`}, {
     3.999899983406067, 0.9996001720428467}, {6.999899983406067, 3.9996001720428467`}, {
     0.9998999834060669, 3.9996001720428467`}}}]}, 
   {FaceForm[{GrayLevel[0, .35]}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.9998999834060669, 7.000199794769287}, {
     3.999899983406067, 3.999199867248535}, {6.999899983406067, 7.000199794769287}, {
     0.9998999834060669, 7.000199794769287}}}]}},
  AspectRatio->Automatic,
  ImageSize->{8., 8.},
  PlotRange->{{0., 8.}, {0., 8.}}],

"FormattedControlHyperlink" -> TagBox[
  TooltipBox[
   DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
    ButtonBox[
     DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
      TagBox[
       PaneSelectorBox[{"Default"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "HyperlinkIcon"],
          ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
         BaseStyle->{
          "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Hover"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "HyperlinkIconHover"]],
         BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Pressed"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "HyperlinkIconHover"]],
         BaseStyle->{
          "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False]}, Dynamic[
         Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
          And[Toolbar`Private`mouseDownQ$$, 
           CurrentValue["MouseOver"]], "Pressed", 
          CurrentValue["MouseOver"], "Hover", True, "Default"]],
        ImageSize->Automatic],
       EventHandlerTag[{
        "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
         "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
         PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
         True}]],
      DynamicModuleValues:>{}],
     Appearance->FEPrivate`FrontEndResource[
      "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
     BaseStyle->"NotebookToolbarButton",
     ButtonFunction:>ToolbarSupport`AttachPopup[
       Framed[
        Pane[
         Column[{
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkAddIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkAdd"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "HyperlinkKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                  ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                  ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                  Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; 
            FrontEnd`FrontEndToken["CreateHyperlinkDialog"], Appearance -> 
            "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
            None, Method -> "Preemptive"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkRemoveIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkRemove"]]}}, 
                  ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                  ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                  Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; FrontEnd`FrontEndToken["RemoveHyperlink"], 
            Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton", 
            Evaluator -> None, Method -> "Preemptive"], 
           Graphics[
            Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
            "NotebookToolbarMenuDelimiter"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "HyperlinkCopyIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkCopy"]]}}, 
                  ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                  ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                  Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; FrontEnd`FrontEndToken["CopyHyperlink"], 
            Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton", 
            Evaluator -> None, Method -> "Preemptive"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "HyperlinkCopyAddressIcon"]]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "HyperlinkCopyAddress"]]}}, 
                  ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                  ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                  Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; 
            FrontEnd`FrontEndToken["CopyHyperlinkAddress"], Appearance -> 
            "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
            None, Method -> "Preemptive"]}, Alignment -> Left, BaseStyle -> 
          "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
         FrameMargins -> 2, ImageSize -> {
           Scaled[1], 
           UpTo[250]}, AppearanceElements -> None, FrameMargins -> Automatic, 
         ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}], 
        Background -> GrayLevel[0.115], BaseStyle -> "NotebookToolbarText", 
        FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> Directive[
          AbsoluteThickness[1], 
          GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
        ImageSize -> {210, All}, RoundingRadius -> 3], {
       Magnification -> Dynamic[
          
          CurrentValue[$FrontEndSession, {
           PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
            "Magnification"}, 
           FEPrivate`Switch[
           FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
            Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[
                  FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[
               EvaluationNotebook[], WindowToolbars]}]], Delimiter, Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, WindowToolbars]]]], 
             
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`SameQ[
                 
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "OpenMinimized"}], True]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "OpenMinimized"}] = Not[
             TrueQ[
              
              AbsoluteCurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar",
                 "OpenMinimized"}]]]), Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`Not[
                 FEPrivate`SameQ[
                  
                  FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "ShowSectionTitles"}] = 
           AbsoluteCurrentValue[$FrontEnd, {
              PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
               "ShowSectionTitles"}] === False)}}, False, "System", 
       Dynamic[Toolbar`Private`mouseClickListener$$], 
       Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
       Sequence[], 
       Sequence[], "FreezeDynamics" -> True],
     Evaluator->"System",
     Method->"Preemptive"],
    DynamicModuleValues:>{}],
   DynamicBox[
    ToBoxes[
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "Hyperlink"], 
     StandardForm]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    FEPrivate`FrontEndResource["NotebookToolbarStrings", "Hyperlink"]], 
   "Tooltip"]& ],

"FormattedControlDrawCanvas" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "DrawIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "DrawIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "DrawIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>If[
      FailureQ[
       CurrentValue["SelectionData"]], 
      FrontEndTokenExecute[
       EvaluationNotebook[], "InsertNewGraphic"], 
      Canvas`CanvasToggle[
       EvaluationNotebook[]]],
    Evaluator->"System",
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertCanvas"], 
       StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "CanvasKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertCanvas"], 
        StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "CanvasKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlTeXAssistant" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TeXIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TeXIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TeXIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>InputAssistant`TeXAssistant[
      InputNotebook[]],
    Evaluator->"System",
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertMath"], 
       StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "TeXKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertMath"], 
        StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "TeXKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlInsertMath" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TypesettingIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TypesettingIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "TypesettingIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>FEPrivate`Switch[FEPrivate`$OperatingSystem, "Windows", 
      FrontEnd`NotebookOpen[
       FrontEnd`FindFileOnPath["Other\\BasicMathInput.nb", "PalettePath"]], 
      Blank[], 
      FrontEnd`NotebookOpen[
       FrontEnd`FindFileOnPath["Other/BasicMathInput.nb", "PalettePath"]]],
    Evaluator->None,
    Method->"Preemptive"],
   DynamicBox[
    ToBoxes[
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "Typesetting"], 
     StandardForm]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    FEPrivate`FrontEndResource["NotebookToolbarStrings", "Typesetting"]], 
   "Tooltip"]& ],

"FormattedControlCommentOrCodeText" -> Function[{NotebookToolbar`Private`codeSelectionQ}, 
  DynamicModuleBox[{Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
   
   PaneSelectorBox[{False -> TagBox[
       TooltipBox[
        ButtonBox[
         DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
          TagBox[
           PaneSelectorBox[{"Default" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CodeTextIcon"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"}, 
               StripOnInput -> False], "Hover" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CodeTextIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"}, 
               StripOnInput -> False], "Pressed" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CodeTextIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"}, 
               StripOnInput -> False]}, 
            Dynamic[
             Which[
              And[Toolbar`Private`mouseDownQ$$, 
               CurrentValue["MouseOver"]], "Pressed", 
              CurrentValue["MouseOver"], "Hover", True, "Default"]], 
            ImageSize -> Automatic], 
           
           EventHandlerTag[{
            "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
             "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True],
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], DynamicModuleValues :> {}], ButtonFunction :> 
         Module[{NotebookToolbar`Private`c$outer, 
            NotebookToolbar`Private`c$inner, NotebookToolbar`Private`nb = 
            EvaluationNotebook[]}, NotebookToolbar`Private`c$outer = First[
              SelectedCells[NotebookToolbar`Private`nb]]; 
           CurrentValue[
             NotebookToolbar`Private`c$outer, DefaultInlineFormatType] = 
            StandardForm; 
           FrontEndTokenExecute[
            NotebookToolbar`Private`nb, "CreateInlineCell"]; 
           CurrentValue[
             NotebookToolbar`Private`c$outer, DefaultInlineFormatType] = 
            Inherited; NotebookToolbar`Private`c$inner = First[
              SelectedCells[NotebookToolbar`Private`nb]]; 
           CurrentValue[NotebookToolbar`Private`c$inner, StyleNames] = 
            "InlineCode"; 
           CurrentValue[NotebookToolbar`Private`c$inner, FormatType] = 
            Inherited], Appearance -> 
         FEPrivate`FrontEndResource[
          "FEExpressions", "SuppressMouseDownNinePatchAppearance"], BaseStyle -> 
         "NotebookToolbarButton", Evaluator -> "System", Method -> 
         "Preemptive"], 
        DynamicBox[
         ToBoxes[
          FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertCode"], 
          StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
        "NotebookToolbarTooltip"], Annotation[#, 
        Dynamic[
         FEPrivate`FrontEndResource["NotebookToolbarStrings", "InsertCode"]], 
        "Tooltip"]& ], True -> TagBox[
       TooltipBox[
        ButtonBox[
         DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
          TagBox[
           PaneSelectorBox[{"Default" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CommentIcon"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"}, 
               StripOnInput -> False], "Hover" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CommentIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"}, 
               StripOnInput -> False], "Pressed" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "CommentIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"}, 
               StripOnInput -> False]}, 
            Dynamic[
             Which[
              And[Toolbar`Private`mouseDownQ$$, 
               CurrentValue["MouseOver"]], "Pressed", 
              CurrentValue["MouseOver"], "Hover", True, "Default"]], 
            ImageSize -> Automatic], 
           
           EventHandlerTag[{
            "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
             "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True],
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], DynamicModuleValues :> {}], ButtonFunction :> 
         FE`toggleComment[], Appearance -> 
         FEPrivate`FrontEndResource[
          "FEExpressions", "SuppressMouseDownNinePatchAppearance"], BaseStyle -> 
         "NotebookToolbarButton", Evaluator -> "System", Method -> 
         "Preemptive"], 
        RowBox[{
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "ToggleComment"], StandardForm]], 
          "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
          StyleBox[
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarPlatformStrings", "CommentKey"], StandardForm]], 
           FontColor -> GrayLevel[0.8], StripOnInput -> False]}], 
        TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
       Annotation[#, 
        RawBoxes[
         RowBox[{
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "ToggleComment"], StandardForm]], 
           "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
           StyleBox[
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarPlatformStrings", "CommentKey"], StandardForm]],
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
        "Tooltip"]& ]}, 
    Dynamic[
     FEPrivate`If[
      TrueQ[
       CurrentValue[
       Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, False]], 
      Toolbar`Private`savedx$$, 
      FEPrivate`Set[
      Toolbar`Private`savedx$$, NotebookToolbar`Private`codeSelectionQ]]], 
    ImageSize -> Automatic, ContentPadding -> False, 
    BaselinePosition -> (Bottom -> Bottom)], 
   Initialization :> (
    Toolbar`Private`savedx$$ = 
     FE`Evaluate[NotebookToolbar`Private`codeSelectionQ]; 
    Toolbar`Private`toolbarCell$$ = 
     CurrentValue[$FrontEndSession, {
       PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
        "ToolbarCell", 
        EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
   UnsavedVariables :> {Toolbar`Private`savedx$$}], HoldAll],

"FormattedControlIconizeOrNothing" -> Function[{NotebookToolbar`Private`codeSelectionQ}, 
  DynamicModuleBox[{Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
   
   PaneSelectorBox[{
    False -> PaneBox[
      "\[InvisibleSpace]", ImageSize -> {0, 25}, BaseStyle -> 
       "NotebookToolbarSpacer"], True -> TagBox[
       TooltipBox[
        ButtonBox[
         DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
          TagBox[
           PaneSelectorBox[{"Default" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "IconizeIcon"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"}, 
               StripOnInput -> False], "Hover" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "IconizeIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"}, 
               StripOnInput -> False], "Pressed" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "IconizeIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"}, 
               StripOnInput -> False]}, 
            Dynamic[
             Which[
              And[Toolbar`Private`mouseDownQ$$, 
               CurrentValue["MouseOver"]], "Pressed", 
              CurrentValue["MouseOver"], "Hover", True, "Default"]], 
            ImageSize -> Automatic], 
           
           EventHandlerTag[{
            "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
             "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True],
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], DynamicModuleValues :> {}], ButtonFunction :> 
         FE`iconizeSelectionToggle[], Appearance -> 
         FEPrivate`FrontEndResource[
          "FEExpressions", "SuppressMouseDownNinePatchAppearance"], BaseStyle -> 
         "NotebookToolbarButton", Evaluator -> "System", Method -> 
         "Preemptive"], 
        RowBox[{
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "ToggleIconize"], StandardForm]], 
          "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
          StyleBox[
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarPlatformStrings", "IconizeKey"], StandardForm]], 
           FontColor -> GrayLevel[0.8], StripOnInput -> False]}], 
        TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
       Annotation[#, 
        RawBoxes[
         RowBox[{
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "ToggleIconize"], StandardForm]], 
           "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
           StyleBox[
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarPlatformStrings", "IconizeKey"], StandardForm]],
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
        "Tooltip"]& ]}, 
    Dynamic[
     FEPrivate`If[
      TrueQ[
       CurrentValue[
       Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, False]], 
      Toolbar`Private`savedx$$, 
      FEPrivate`Set[
      Toolbar`Private`savedx$$, NotebookToolbar`Private`codeSelectionQ]]], 
    ImageSize -> Automatic, ContentPadding -> False, 
    BaselinePosition -> (Bottom -> Bottom)], 
   Initialization :> (
    Toolbar`Private`savedx$$ = 
     FE`Evaluate[NotebookToolbar`Private`codeSelectionQ]; 
    Toolbar`Private`toolbarCell$$ = 
     CurrentValue[$FrontEndSession, {
       PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
        "ToolbarCell", 
        EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
   UnsavedVariables :> {Toolbar`Private`savedx$$}], HoldAll],

"FormattedControlControlEqualOrNothing" -> Function[{NotebookToolbar`Private`codeSelectionQ}, 
  DynamicModuleBox[{Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
   
   PaneSelectorBox[{
    False -> PaneBox[
      "\[InvisibleSpace]", ImageSize -> {0, 25}, BaseStyle -> 
       "NotebookToolbarSpacer"], True -> TagBox[
       TooltipBox[
        ButtonBox[
         DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
          TagBox[
           PaneSelectorBox[{"Default" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "Ctrl=Icon"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"}, 
               StripOnInput -> False], "Hover" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "Ctrl=IconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"}, 
               StripOnInput -> False], "Pressed" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "Ctrl=IconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"}, 
               StripOnInput -> False]}, 
            Dynamic[
             Which[
              And[Toolbar`Private`mouseDownQ$$, 
               CurrentValue["MouseOver"]], "Pressed", 
              CurrentValue["MouseOver"], "Hover", True, "Default"]], 
            ImageSize -> Automatic], 
           
           EventHandlerTag[{
            "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
             "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True],
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], DynamicModuleValues :> {}], ButtonFunction :> 
         AlphaIntegration`LinguisticAssistant[
           InputNotebook[]], Appearance -> 
         FEPrivate`FrontEndResource[
          "FEExpressions", "SuppressMouseDownNinePatchAppearance"], BaseStyle -> 
         "NotebookToolbarButton", Evaluator -> "System", Method -> 
         "Preemptive"], 
        RowBox[{
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "ControlEqual"], StandardForm]], 
          "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
          StyleBox[
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarPlatformStrings", "CtrlEqualKey"], 
             StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
           False]}], TooltipDelay -> 0.25, TooltipStyle -> 
        "NotebookToolbarTooltip"], Annotation[#, 
        RawBoxes[
         RowBox[{
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "ControlEqual"], StandardForm]], 
           "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
           StyleBox[
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarPlatformStrings", "CtrlEqualKey"], 
              StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
            False]}]], "Tooltip"]& ]}, 
    Dynamic[
     FEPrivate`If[
      TrueQ[
       CurrentValue[
       Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, False]], 
      Toolbar`Private`savedx$$, 
      FEPrivate`Set[
      Toolbar`Private`savedx$$, NotebookToolbar`Private`codeSelectionQ]]], 
    ImageSize -> Automatic, ContentPadding -> False, 
    BaselinePosition -> (Bottom -> Bottom)], 
   Initialization :> (
    Toolbar`Private`savedx$$ = 
     FE`Evaluate[NotebookToolbar`Private`codeSelectionQ]; 
    Toolbar`Private`toolbarCell$$ = 
     CurrentValue[$FrontEndSession, {
       PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
        "ToolbarCell", 
        EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
   UnsavedVariables :> {Toolbar`Private`savedx$$}], HoldAll],

"FormattedControlExtendSelectionOrTextFormatting" -> Function[{NotebookToolbar`Private`codeSelectionQ}, 
  DynamicModuleBox[{Toolbar`Private`savedx$$, Toolbar`Private`toolbarCell$$}, 
   
   PaneSelectorBox[{False -> RowBox[{
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             OverlayBox[{
               
               PaneSelectorBox[{
                "Default" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False], "Hover" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                    ImageSize -> {21, 25}, StripOnInput -> False], "Pressed" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False]}, 
                Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ$$, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                ImageSize -> Automatic], 
               FrameBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "TextBold"][
                  If[
                   FEPrivate`MemberQ[{Bold, "Bold"}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FontWeight]], 
                   RGBColor[
                   0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                   GrayLevel[0.34901960784313724`]]]], 
                BaseStyle -> {
                 "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                ImageSize -> {21, 25}, StripOnInput -> False]}, {1, 2}, 1, 
              BaseStyle -> "NotebookToolbarButtonOverlay"], 
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], DynamicModuleValues :> {}], ButtonFunction :> 
           FrontEnd`FrontEndToken["FontWeight"], Appearance -> 
           FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
           BaseStyle -> "NotebookToolbarButton", Evaluator -> None, Method -> 
           "Preemptive"], 
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "TextBold"], StandardForm]], 
            "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "BoldKey"], StandardForm]], 
             FontColor -> GrayLevel[0.8], StripOnInput -> False]}], 
          TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "TextBold"], StandardForm]], 
             "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "BoldKey"], StandardForm]], 
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
          "Tooltip"]& ], "\[InvisibleSpace]", 
        GraphicsBox[
         LineBox[{{0, -1}, {0, 1}}], BaseStyle -> "NotebookToolbarDelimiter", 
         ImageSize -> {3, 18.75}, ImagePadding -> {{0, 0}, {6.25, 0}}], 
        "\[InvisibleSpace]", 
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             OverlayBox[{
               
               PaneSelectorBox[{
                "Default" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False], "Hover" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                    ImageSize -> {21, 25}, StripOnInput -> False], "Pressed" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False]}, 
                Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ$$, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                ImageSize -> Automatic], 
               FrameBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "TextItalic"][
                  If[
                   FEPrivate`MemberQ[{Italic, "Italic"}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FontSlant]], 
                   RGBColor[
                   0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                   GrayLevel[0.34901960784313724`]]]], 
                BaseStyle -> {
                 "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                ImageSize -> {21, 25}, StripOnInput -> False]}, {1, 2}, 1, 
              BaseStyle -> "NotebookToolbarButtonOverlay"], 
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], DynamicModuleValues :> {}], ButtonFunction :> 
           FrontEnd`FrontEndToken["FontSlant"], Appearance -> 
           FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
           BaseStyle -> "NotebookToolbarButton", Evaluator -> None, Method -> 
           "Preemptive"], 
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "TextItalic"], StandardForm]], 
            "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "ItalicKey"], StandardForm]],
              FontColor -> GrayLevel[0.8], StripOnInput -> False]}], 
          TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
         Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "TextItalic"], StandardForm]], 
             "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "ItalicKey"], 
                StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
              False]}]], "Tooltip"]& ], "\[InvisibleSpace]", 
        GraphicsBox[
         LineBox[{{0, -1}, {0, 1}}], BaseStyle -> "NotebookToolbarDelimiter", 
         ImageSize -> {3, 18.75}, ImagePadding -> {{0, 0}, {6.25, 0}}], 
        "\[InvisibleSpace]", 
        TagBox[
         TooltipBox[
          ButtonBox[
           DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
            TagBox[
             OverlayBox[{
               
               PaneSelectorBox[{
                "Default" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False], "Hover" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                    ImageSize -> {21, 25}, StripOnInput -> False], "Pressed" -> 
                 FrameBox[
                  "\"\"", 
                   BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {21, 25}, 
                   StripOnInput -> False]}, 
                Dynamic[
                 Which[
                  And[Toolbar`Private`mouseDownQ$$, 
                   CurrentValue["MouseOver"]], "Pressed", 
                  CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                ImageSize -> Automatic], 
               FrameBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarExpressions", "TextUnderline"][
                  If[
                   FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "FontVariationsUnderline"], 
                   RGBColor[
                   0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                   GrayLevel[0.34901960784313724`]]]], 
                BaseStyle -> {
                 "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                ImageSize -> {21, 25}, StripOnInput -> False]}, {1, 2}, 1, 
              BaseStyle -> "NotebookToolbarButtonOverlay"], 
             
             EventHandlerTag[{
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False],
                "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], DynamicModuleValues :> {}], ButtonFunction :> 
           FrontEnd`FrontEndToken["FontVariationsUnderline"], Appearance -> 
           FEPrivate`FrontEndResource[
            "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
           BaseStyle -> "NotebookToolbarButton", Evaluator -> None, Method -> 
           "Preemptive"], 
          RowBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "TextUnderline"], StandardForm]], 
            "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarPlatformStrings", "UnderlineKey"], 
               StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
             False]}], TooltipDelay -> 0.25, TooltipStyle -> 
          "NotebookToolbarTooltip"], Annotation[#, 
          RawBoxes[
           RowBox[{
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "TextUnderline"], StandardForm]], 
             "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "NotebookToolbarPlatformStrings", "UnderlineKey"], 
                StandardForm]], FontColor -> GrayLevel[0.8], StripOnInput -> 
              False]}]], "Tooltip"]& ], "\[InvisibleSpace]", 
        GraphicsBox[
         LineBox[{{0, -1}, {0, 1}}], BaseStyle -> "NotebookToolbarDelimiter", 
         ImageSize -> {3, 18.75}, ImagePadding -> {{0, 0}, {6.25, 0}}], 
        "\[InvisibleSpace]", 
        TagBox[
         TooltipBox[
          
          DynamicModuleBox[{
           Toolbar`Private`mouseClickListener$$ = False, 
            Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
           ButtonBox[
            DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
             TagBox[
              OverlayBox[{
                
                PaneSelectorBox[{
                 "Default" -> 
                  FrameBox[
                   "\"\"", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {12, 25}, StripOnInput -> False], "Hover" -> 
                  FrameBox[
                   "\"\"", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> None, ImageSize -> {12, 25}, 
                    StripOnInput -> False], "Pressed" -> 
                  FrameBox[
                   "\"\"", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> None, 
                    ImageSize -> {12, 25}, StripOnInput -> False]}, 
                 Dynamic[
                  Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                   And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                FrameBox[
                 GraphicsBox[
                  LineBox[{{-1, 0}, {0, -1}, {1, 0}}], 
                  ImageSize -> {11, 7.699999999999999}, AspectRatio -> Full, 
                  ImagePadding -> 2, BaselinePosition -> Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                 FrameMargins -> None, ImageSize -> {12, 25}, StripOnInput -> 
                 False]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], 
              
              EventHandlerTag[{
               "MouseUp" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], DynamicModuleValues :> {}], ButtonFunction :> 
            ToolbarSupport`AttachPopup[
              Framed[
               Column[{
                 Framed[
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "NotebookToolbarStrings", "TextFormatting"], 
                   DestroyAfterEvaluation -> True], BaseStyle -> 
                  "NotebookToolbarMenuHeader"], 
                 Pane[
                  Pane[
                   Grid[{{
                    Grid[{{
                    Tooltip[
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {20, 24}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextColor"][
                    If[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "FontColor"] === 
                    Automatic, 
                    GrayLevel[0], 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "FontColor"]]]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    ImageSize -> {20, 24}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    FrontEnd`FrontEndToken["FontColorDialog"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextColor"]], TooltipDelay -> 
                    0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
                    Spacer[5], 
                    Tooltip[
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {20, 24}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextBackgroundColor"][
                    If[
                    ColorQ[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "Background"]], 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "Background"], 
                    GrayLevel[0]]]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    ImageSize -> {20, 24}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    FrontEnd`FrontEndToken["BackgroundDialog"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextBackground"]], 
                    TooltipDelay -> 0.25, TooltipStyle -> 
                    "NotebookToolbarTooltip"], 
                    Spacer[5], 
                    Tooltip[
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {20, 24}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextBold"][
                    If[
                    FEPrivate`MemberQ[{Bold, "Bold"}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FontWeight]], 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    GrayLevel[0.34901960784313724`]]]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    ImageSize -> {20, 24}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    FrontEnd`FrontEndToken["FontWeight"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    RawBoxes[
                    RowBox[{
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextBold"], StandardForm]], 
                    "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "BoldKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                    StripOnInput -> False]}]], TooltipDelay -> 0.25, 
                    TooltipStyle -> "NotebookToolbarTooltip"], 
                    Spacer[5], 
                    Tooltip[
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {20, 24}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextItalic"][
                    If[
                    FEPrivate`MemberQ[{Italic, "Italic"}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FontSlant]], 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    GrayLevel[0.34901960784313724`]]]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    ImageSize -> {20, 24}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    FrontEnd`FrontEndToken["FontSlant"], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> None, Method -> "Preemptive"], 
                    RawBoxes[
                    RowBox[{
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextItalic"], StandardForm]], 
                    "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "ItalicKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                    StripOnInput -> False]}]], TooltipDelay -> 0.25, 
                    TooltipStyle -> "NotebookToolbarTooltip"], 
                    Spacer[5], 
                    Tooltip[
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {20, 24}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {20, 24}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextUnderline"][
                    If[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "FontVariationsUnderline"], 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    GrayLevel[0.34901960784313724`]]]]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    ImageSize -> {20, 24}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    FrontEnd`FrontEndToken["FontVariationsUnderline"], 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> None, Method -> 
                    "Preemptive"], 
                    RawBoxes[
                    RowBox[{
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextUnderline"], 
                    StandardForm]], "\[InvisibleSpace]", "\"   \"", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "UnderlineKey"], 
                    StandardForm]], FontColor -> GrayLevel[0.8], 
                    StripOnInput -> False]}]], TooltipDelay -> 0.25, 
                    TooltipStyle -> "NotebookToolbarTooltip"], 
                    Spacer[5], 
                    Framed[
                    Grid[{{
                    Button[
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextAlignLeft"][
                    If[
                    FEPrivate`MemberQ[{"Left", Left}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment]], 
                    GrayLevel[0.115], 
                    GrayLevel[0.392]]]]], ImageSize -> {21, 21}, FrameStyle -> 
                    None, Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    Or[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === "Left",
                     FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === Left], 
                    
                    GrayLevel[0.438], 
                    GrayLevel[0.115]]], RoundingRadius -> {2, Right -> 0}, 
                    FrameMargins -> 0], 
                    FrontEnd`FrontEndToken[
                    "TextAlignment", Left, "SelectionCell"], Evaluator -> 
                    None, Tooltip -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextAlignLeft"]], Appearance -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", 
                    "SuppressMouseDownNinePatchAppearance"]]], 
                    Button[
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextAlignCenter"][
                    If[
                    FEPrivate`MemberQ[{"Center", Center}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment]], 
                    GrayLevel[0.115], 
                    GrayLevel[0.392]]]]], ImageSize -> {21, 21}, FrameStyle -> 
                    None, Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    Or[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === 
                    "Center", FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === 
                    Center], 
                    GrayLevel[0.438], 
                    GrayLevel[0.115]]], RoundingRadius -> 0.01, FrameMargins -> 
                    0], 
                    FrontEnd`FrontEndToken[
                    "TextAlignment", Center, "SelectionCell"], Evaluator -> 
                    None, Tooltip -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextAlignCenter"]], Appearance -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", 
                    "SuppressMouseDownNinePatchAppearance"]]], 
                    Button[
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextAlignRight"][
                    If[
                    FEPrivate`MemberQ[{"Right", Right}, 
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment]], 
                    GrayLevel[0.115], 
                    GrayLevel[0.392]]]]], ImageSize -> {21, 21}, FrameStyle -> 
                    None, Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    Or[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === 
                    "Right", FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextAlignment] === Right], 
                    GrayLevel[0.438], 
                    GrayLevel[0.115]]], RoundingRadius -> 0.01, FrameMargins -> 
                    0], 
                    FrontEnd`FrontEndToken[
                    "TextAlignment", Right, "SelectionCell"], Evaluator -> 
                    None, Tooltip -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextAlignRight"]], Appearance -> 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", 
                    "SuppressMouseDownNinePatchAppearance"]]], 
                    Button[
                    Framed[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "TextAlignJustified"][
                    If[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextJustification] == 1., 
                    
                    GrayLevel[0.115], 
                    GrayLevel[0.392]]]]], ImageSize -> {21, 21}, FrameStyle -> 
                    None, Alignment -> {Center, Center}, Background -> Dynamic[
                    If[FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], TextJustification] == 1., 
                    
                    GrayLevel[0.438], 
                    GrayLevel[0.115]]], RoundingRadius -> 0.01, FrameMargins -> 
                    0], 
                    FEPrivate`If[
                    FEPrivate`Equal[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "TextJustification"], 1.], 
                    FrontEnd`FrontEndToken[
                    "TextJustification", Inherited, "SelectionCell"], 
                    FrontEnd`FrontEndToken[
                    "TextJustification", 1., "SelectionCell"]], Evaluator -> 
                    None, Appearance -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"]],
                     Tooltip -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "TextJustify"]]]}}, 
                    Spacings -> {0, 0}, Dividers -> {{False, {True}, False}}, 
                    FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.749]]], FrameMargins -> {{0, 0}, {-1, -1}}, 
                    FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.749]], RoundingRadius -> 3]}}, 
                    Spacings -> {0, 0}, Alignment -> {Center, Center}]}, {
                    Grid[{{
                    DynamicModule[{NotebookToolbar`Private`fontList}, 
                    Dynamic[
                    Function[NotebookToolbar`Private`fontFamilyList$, 
                    ActionMenu[
                    Framed[
                    Row[{
                    Pane[
                    CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontFamily], {142, 19}, 
                    BaselinePosition -> Center, Alignment -> {Left, Center}, 
                    BaseStyle -> {"NotebookToolbarText", LineBreakWithin -> 
                    False}, FrameMargins -> {{2, 2}, {0, 0}}], 
                    Graphics[
                    Line[{{-1, 0}, {0, -1}, {1, 0}}], 
                    ImageSize -> {11, 7.699999999999999}, AspectRatio -> Full,
                     ImagePadding -> 2, BaselinePosition -> Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}]}, StripOnInput -> True], FrameStyle -> 
                    Dynamic[
                    Directive[
                    AbsoluteThickness[1], 
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]]]], Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0], 
                    GrayLevel[0.2]]], RoundingRadius -> 2, FrameMargins -> 
                    2], 
                    Map[
                    Function[
                    NotebookToolbar`Private`val, 
                    NotebookToolbar`Private`val :> (CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontFamily] = 
                    NotebookToolbar`Private`val)], 
                    NotebookToolbar`Private`fontFamilyList$], Appearance -> 
                    None]][NotebookToolbar`Private`fontList], 
                    DestroyAfterEvaluation -> True], 
                    Initialization :> (
                    NotebookToolbar`Private`fontList = $FontFamilies), 
                    DynamicModuleValues :> {}], 
                    Spacer[4], 
                    DynamicModule[{NotebookToolbar`Private`localValue}, 
                    Grid[{{
                    Button[
                    Framed[
                    Dynamic[
                    Row[{
                    ToString[NotebookToolbar`Private`localValue], 
                    "\[ThinSpace]", "pt"}]], BaselinePosition -> Baseline, 
                    FrameMargins -> 4, RoundingRadius -> 3, 
                    ImageMargins -> {{0, 3}, {0, 0}}, ImageSize -> {38, 26}, 
                    FrameStyle -> Dynamic[
                    Directive[
                    AbsoluteThickness[1], 
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]]]], Background -> GrayLevel[0.115]], 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize"], StandardForm], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader", StripOnInput -> False]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize9"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 9)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize10"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 10)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize12"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 12)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize14"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 14)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize16"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 16)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize18"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 18)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize24"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 24)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize36"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 36)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSize72"], StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = (
                    NotebookToolbar`Private`localValue = 72)), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}, {
                    GraphicsBox[
                    LineBox[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"]}, {
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False], 
                    "Pressed" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "FontSizeOther"], 
                    StandardForm]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}, StripOnInput -> False]}, {1, 
                    2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> (NotebookDelete[
                    EvaluationCell[]]; (
                    FrontEndTokenExecute["FontSizeDialog"]; 
                    NotebookToolbar`Private`localValue = CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize])), Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, BaseStyle -> 
                    "NotebookToolbarText", DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{All}}, 
                    "Rows" -> {{All}}}, GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, BaseStyle -> 
                    "NotebookToolbarText", DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3, 
                    StripOnInput -> False]], Magnification -> CurrentValue[
                    EvaluationCell[], Magnification]], {Left, Top}, 0, {
                    Left, Top}, RemovalConditions -> {"MouseClickOutside"}], 
                    Appearance -> None, BaseStyle -> "NotebookToolbarText"], 
                    Grid[{{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, Background -> GrayLevel[0.115], 
                    FrameStyle -> Directive[
                    GrayLevel[0.749], 
                    AbsoluteThickness[1]], ImageSize -> {11, 11}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {11, 11}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {11, 11}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Graphics[
                    Line[{{-1, 0}, {0, 1}, {1, 0}}], ImageSize -> {8, 6}, 
                    AspectRatio -> Full, ImagePadding -> 2, BaselinePosition -> 
                    Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, ImageSize -> {11, 11}]}, {1, 2}, 
                    1, BaseStyle -> "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    Function[
                    NotebookToolbar`Private`val$, 
                    NotebookToolbar`Private`localValue = (CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = 
                    NotebookToolbar`Private`val$)][
                    NotebookToolbar`Private`localValue = 
                    NotebookToolbar`Private`localValue + 1], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Preemptive"]}, {
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, Background -> GrayLevel[0.115], 
                    FrameStyle -> Directive[
                    GrayLevel[0.749], 
                    AbsoluteThickness[1]], ImageSize -> {11, 11}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     ImageSize -> {11, 11}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, ImageSize -> {11, 11}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Graphics[
                    Line[{{-1, 0}, {0, -1}, {1, 0}}], ImageSize -> {8, 6}, 
                    AspectRatio -> Full, ImagePadding -> 2, BaselinePosition -> 
                    Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, ImageSize -> {11, 11}]}, {1, 2}, 
                    1, BaseStyle -> "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    Function[
                    NotebookToolbar`Private`val$, 
                    NotebookToolbar`Private`localValue = (CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize] = 
                    NotebookToolbar`Private`val$)][
                    If[
                    NotebookToolbar`Private`localValue - 1 >= 0, 
                    NotebookToolbar`Private`localValue = 
                    NotebookToolbar`Private`localValue - 1, 
                    NotebookToolbar`Private`localValue]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Preemptive"]}}, 
                    Alignment -> {{}, {Top, Bottom}}, 
                    BaseStyle -> {FontSize -> 3}]}}, 
                    Alignment -> {Left, Center}, Spacings -> {0, 0}], 
                    Initialization :> (NotebookToolbar`Private`localValue = 
                    With[{NotebookToolbar`Private`fs = CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontSize]}, 
                    If[
                    NumericQ[NotebookToolbar`Private`fs], 
                    NotebookToolbar`Private`fs, 13]]), 
                    DynamicModuleValues :> {}]}}, Spacings -> {0, 0}, 
                    Alignment -> {Center, Top}]}}, Alignment -> Left, 
                    Spacings -> {0, 0.5}, Alignment -> {Left, Top}], 
                   FrameMargins -> 4], FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                  Automatic, ImageSizeAction -> "Scrollable", 
                  Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
               "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}}, 
               FrameStyle -> Directive[
                 AbsoluteThickness[1], 
                 GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
               ImageSize -> {230, All}, RoundingRadius -> 3], {
              Magnification -> Dynamic[
                 
                 CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "Magnification"}, 
                  FEPrivate`Switch[
                  FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 
                   1., 
                   Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    FrontEnd`AbsoluteCurrentValue[
                    FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
                   MemberQ[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                   DeleteCases[#, "MultipurposeBar"], CurrentValue[
                    EvaluationNotebook[], WindowToolbars] = 
                   Append[#, "MultipurposeBar"]]& )[
                   Flatten[{
                    AbsoluteCurrentValue[
                    EvaluationNotebook[], WindowToolbars]}]], Delimiter, 
                 Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (FEPrivate`Or[
                    FEPrivate`MemberQ[#, "MultipurposeBar"], 
                    FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, 
                    WindowToolbars]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (
                  If[
                   MemberQ[#, "MultipurposeBar"], 
                   CurrentValue[$FrontEnd, WindowToolbars] = 
                   DeleteCases[#, "MultipurposeBar"], 
                   CurrentValue[$FrontEnd, WindowToolbars] = 
                   Append[#, "MultipurposeBar"]]& )[
                   Flatten[{
                    AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}], True]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
                  CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}] = Not[
                    TrueQ[
                    
                    AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "OpenMinimized"}]]]), Row[{
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    FEPrivate`Not[
                    FEPrivate`SameQ[
                    
                    FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
                    Spacer[3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
                  CurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] = 
                  AbsoluteCurrentValue[$FrontEnd, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}] === False)}}, 
              False, "System", 
              Dynamic[Toolbar`Private`mouseClickListener$$], 
              Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
              Sequence[], 
              Sequence[], "FreezeDynamics" -> True], Appearance -> 
            FEPrivate`FrontEndResource[
             "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
            BaseStyle -> "NotebookToolbarButton", Evaluator -> "System", 
            Method -> "Preemptive"], DynamicModuleValues :> {}], 
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "TextFormattingTooltip"], 
            StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> 
          "NotebookToolbarTooltip"], Annotation[#, 
          Dynamic[
           FEPrivate`FrontEndResource[
           "NotebookToolbarStrings", "TextFormattingTooltip"]], 
          "Tooltip"]& ]}], True -> TagBox[
       TooltipBox[
        ButtonBox[
         DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
          TagBox[
           PaneSelectorBox[{"Default" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "ExtendSelectionIcon"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"}, 
               StripOnInput -> False], "Hover" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "ExtendSelectionIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFrameHover", "NotebookToolbarText"}, 
               StripOnInput -> False], "Pressed" -> FrameBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "NotebookToolbarExpressions", "ExtendSelectionIconHover"]], 
               BaseStyle -> {
                "NotebookToolbarButtonFramePressed", "NotebookToolbarText"}, 
               StripOnInput -> False]}, 
            Dynamic[
             Which[
              And[Toolbar`Private`mouseDownQ$$, 
               CurrentValue["MouseOver"]], "Pressed", 
              CurrentValue["MouseOver"], "Hover", True, "Default"]], 
            ImageSize -> Automatic], 
           
           EventHandlerTag[{
            "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
             "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True],
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], DynamicModuleValues :> {}], ButtonFunction :> 
         FrontEnd`FrontEndToken["ExpandSelection"], Appearance -> 
         FEPrivate`FrontEndResource[
          "FEExpressions", "SuppressMouseDownNinePatchAppearance"], BaseStyle -> 
         "NotebookToolbarButton", Evaluator -> None, Method -> "Preemptive"], 
        
        RowBox[{
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "NotebookToolbarStrings", "ExtendSelection"], StandardForm]], 
          "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
          StyleBox[
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarPlatformStrings", "ExtendKey"], StandardForm]], 
           FontColor -> GrayLevel[0.8], StripOnInput -> False]}], 
        TooltipDelay -> 0.25, TooltipStyle -> "NotebookToolbarTooltip"], 
       Annotation[#, 
        RawBoxes[
         RowBox[{
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "ExtendSelection"], StandardForm]], 
           "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
           StyleBox[
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource[
              "NotebookToolbarPlatformStrings", "ExtendKey"], StandardForm]], 
            FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
        "Tooltip"]& ]}, 
    Dynamic[
     FEPrivate`If[
      TrueQ[
       CurrentValue[
       Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, False]], 
      Toolbar`Private`savedx$$, 
      FEPrivate`Set[
      Toolbar`Private`savedx$$, NotebookToolbar`Private`codeSelectionQ]]], 
    ImageSize -> Automatic, ContentPadding -> False, 
    BaselinePosition -> (Bottom -> Bottom)], 
   Initialization :> (
    Toolbar`Private`savedx$$ = 
     FE`Evaluate[NotebookToolbar`Private`codeSelectionQ]; 
    Toolbar`Private`toolbarCell$$ = 
     CurrentValue[$FrontEndSession, {
       PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
        "ToolbarCell", 
        EvaluationNotebook[]}]), DynamicModuleValues :> {}, 
   UnsavedVariables :> {Toolbar`Private`savedx$$}], HoldAll],

"FormattedControlInsertOutput" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertOutputIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertOutputIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertOutputIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>FrontEnd`FrontEndToken["DuplicatePreviousOutput", After],
    Evaluator->None,
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource[
       "NotebookToolbarStrings", "InsertFromAboveOutput"], StandardForm]], 
     "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "CopyOutputKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarStrings", "InsertFromAboveOutput"], StandardForm]], 
      "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "CopyOutputKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlInsertInput" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertInputIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertInputIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "InsertInputIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>FrontEnd`FrontEndToken["DuplicatePreviousInput", After],
    Evaluator->None,
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource[
       "NotebookToolbarStrings", "InsertFromAboveInput"], StandardForm]], 
     "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "CopyInputKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarStrings", "InsertFromAboveInput"], StandardForm]], 
      "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "CopyInputKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlCellGrouping" -> TagBox[
  TooltipBox[
   DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
    ButtonBox[
     DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
      TagBox[
       PaneSelectorBox[{"Default"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "CellStructureIcon"],
          ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
         BaseStyle->{
          "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Hover"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "CellStructureIconHover"]],
         BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Pressed"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "CellStructureIconHover"]],
         BaseStyle->{
          "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False]}, Dynamic[
         Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
          And[Toolbar`Private`mouseDownQ$$, 
           CurrentValue["MouseOver"]], "Pressed", 
          CurrentValue["MouseOver"], "Hover", True, "Default"]],
        ImageSize->Automatic],
       EventHandlerTag[{
        "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
         "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
         PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
         True}]],
      DynamicModuleValues:>{}],
     Appearance->FEPrivate`FrontEndResource[
      "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
     BaseStyle->"NotebookToolbarButton",
     ButtonFunction:>ToolbarSupport`AttachPopup[
       Framed[
        Pane[
         Column[{
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "MergeCellsIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellMerge"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "MergeKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                  ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                  ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                  Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; FrontEnd`FrontEndToken["CellMerge"], 
            Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton", 
            Evaluator -> None, Method -> "Preemptive"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "DivideCellsIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellDivide"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "DivideKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                  ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                  ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                  Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; NotebookTools`DivideCell[
              EvaluationNotebook[]], Appearance -> "Suppressed", BaseStyle -> 
            "NotebookToolbarButton", Evaluator -> "System", Method -> 
            "Preemptive"], 
           Graphics[
            Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
            "NotebookToolbarMenuDelimiter"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "GroupCellsIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellGroup"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "GroupKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                  ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                  ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                  Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; FrontEnd`FrontEndToken["CellGroup"], 
            Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton", 
            Evaluator -> None, Method -> "Preemptive"], 
           Button[
            DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
             EventHandler[
              Overlay[{
                
                PaneSelector[{
                 "Default" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                  Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                 Dynamic[
                  Which[
                   And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                   CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                 ImageSize -> Automatic], 
                Framed[
                 Grid[{{
                    Pane[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "UngroupCellsIcon"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellUngroup"]], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarPlatformStrings", "UngroupKey"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                  ItemStyle -> {{
                    Inherited, Inherited, Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, 
                  ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                  Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                 BaseStyle -> {
                  "NotebookToolbarButtonFrame", 
                   "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
               "NotebookToolbarButtonOverlay"], {
              "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
               "MouseDown" :> 
               FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
              PassEventsDown -> True], DynamicModuleValues :> {}], 
            NotebookDelete[
              EvaluationCell[]]; FrontEnd`FrontEndToken["CellUngroup"], 
            Appearance -> "Suppressed", BaseStyle -> "NotebookToolbarButton", 
            Evaluator -> None, Method -> "Preemptive"]}, Alignment -> Left, 
          BaseStyle -> "NotebookToolbarText", ItemSize -> Full, Spacings -> 
          0], FrameMargins -> 2, ImageSize -> {
           Scaled[1], 
           UpTo[250]}, AppearanceElements -> None, FrameMargins -> Automatic, 
         ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}], 
        Background -> GrayLevel[0.115], BaseStyle -> "NotebookToolbarText", 
        FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> Directive[
          AbsoluteThickness[1], 
          GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
        ImageSize -> {210, All}, RoundingRadius -> 3], {
       Magnification -> Dynamic[
          
          CurrentValue[$FrontEndSession, {
           PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
            "Magnification"}, 
           FEPrivate`Switch[
           FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
            Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[
                  FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[
               EvaluationNotebook[], WindowToolbars]}]], Delimiter, Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, WindowToolbars]]]], 
             
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`SameQ[
                 
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "OpenMinimized"}], True]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "OpenMinimized"}] = Not[
             TrueQ[
              
              AbsoluteCurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar",
                 "OpenMinimized"}]]]), Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`Not[
                 FEPrivate`SameQ[
                  
                  FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "ShowSectionTitles"}] = 
           AbsoluteCurrentValue[$FrontEnd, {
              PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
               "ShowSectionTitles"}] === False)}}, False, "System", 
       Dynamic[Toolbar`Private`mouseClickListener$$], 
       Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
       Sequence[], 
       Sequence[], "FreezeDynamics" -> True],
     Evaluator->"System",
     Method->"Preemptive"],
    DynamicModuleValues:>{}],
   DynamicBox[
    ToBoxes[
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellGrouping"], 
     StandardForm]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellGrouping"]], 
   "Tooltip"]& ],

"FormattedControlCellDecorations" -> TagBox[
  TooltipBox[
   DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
    ButtonBox[
     DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
      TagBox[
       PaneSelectorBox[{"Default"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "DecorateCellIcon"],
          ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
         BaseStyle->{
          "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Hover"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "DecorateCellIconHover"]],
         BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False], "Pressed"->
        FrameBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "NotebookToolbarExpressions", "DecorateCellIconHover"]],
         BaseStyle->{
          "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
         FrameMargins->None,
         StripOnInput->False]}, Dynamic[
         Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
          And[Toolbar`Private`mouseDownQ$$, 
           CurrentValue["MouseOver"]], "Pressed", 
          CurrentValue["MouseOver"], "Hover", True, "Default"]],
        ImageSize->Automatic],
       EventHandlerTag[{
        "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
         "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
         PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
         True}]],
      DynamicModuleValues:>{}],
     Appearance->FEPrivate`FrontEndResource[
      "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
     BaseStyle->"NotebookToolbarButton",
     ButtonFunction:>ToolbarSupport`AttachPopup[
       DynamicModule[{
        ToolbarCommon`Private`nb, ToolbarCommon`Private`thisCell, 
         ToolbarCommon`Private`cellObjects, 
         ToolbarCommon`Private`initialOptions, 
         ToolbarCommon`Private`background, ToolbarCommon`Private`dingbat, 
         ToolbarCommon`Private`frameL, ToolbarCommon`Private`frameR, 
         ToolbarCommon`Private`frameB, ToolbarCommon`Private`frameT, 
         ToolbarCommon`Private`frameAll, ToolbarCommon`Private`fColor, 
         ToolbarCommon`Private`activeLayer = 1}, 
        Overlay[{
          Framed[
           Column[{
             Framed[
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "CellAppearance"], 
               DestroyAfterEvaluation -> True], BaseStyle -> 
              "NotebookToolbarMenuHeader", FrameMargins -> {{0, 0}, {0, 0}}], 
             
             Pane[
              Column[{
                Pane[
                 Row[{
                   Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellAppearanceBackground"]], 
                   
                   DynamicModule[{
                    Toolbar`Private`mouseClickListener$$ = False, 
                    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}], 
                    "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> {{2, 1}, {1, 2}}, ImageSize -> {20, 20}],
                     "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    
                    PaneSelector[{
                    "Unknown" -> "\[LongDash]", "Normal" -> 
                    Graphics[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, Background], 
                    ToolbarCommon`Private`background]]], "None" -> Graphics[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`background, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellAppearanceBackground"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = 
                    SystemDialogInput["Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    Background] = (ToolbarCommon`Private`background = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = 
                    Inherited; ToolbarCommon`Private`background = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, Background], None]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = None), Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = GrayLevel[0]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = GrayLevel[0.5]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.2], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightGray"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = GrayLevel[0.2]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = GrayLevel[0]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.87, 0.94, 1], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightBlue"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[0.87, 0.94, 1]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.94, 0.91, 0.88], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightBrown"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[0.94, 0.91, 0.88]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.9, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightCyan"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[0.9, 1, 1]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.88, 1, 0.88], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightGreen"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[0.88, 1, 0.88]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.9, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightMagenta"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 0.9, 1]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.9, 0.8], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightOrange"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 0.9, 0.8]),
                     Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.925, 0.925], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightPink"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[1, 0.925, 0.925]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.94, 0.88, 0.94], 
                    ImageSize -> {24, 24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightPurple"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[0.94, 0.88, 0.94]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.85, 0.85], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightRed"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = 
                    RGBColor[1, 0.85, 0.85]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0.85], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorLightYellow"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 1, 0.85]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 0.5, 0]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], 
                    ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 0.5, 0.5]),
                     Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, 
                    BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, Background] = (
                    ToolbarCommon`Private`background = RGBColor[1, 1, 0]), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}]}, 
                  Spacer[7]], ImageMargins -> {{6, 7}, {6, 12}}], 
                Graphics[
                 Line[{{-1, 0}, {1, 0}}], ImageSize -> {Full, 3}, AspectRatio -> 
                 Full, ImagePadding -> {{0, 0}, {1, 1}}, 
                 PlotRange -> {{-1, 1}, {1.5, 1.5}}, BaseStyle -> {
                   GrayLevel[0.438], 
                   AbsoluteThickness[1], 
                   CapForm["Round"]}], 
                DynamicModule[{ToolbarCommon`Private`changeAllSidesQ = False}, 
                 Grid[{{
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellAppearanceFrameStyle"]], 
                    ImageMargins -> {{6, 0}, {0, 6}}]}, {
                    
                    PaneSelector[{
                    True -> DynamicModule[{ToolbarCommon`Private`mouseover}, 
                    Graphics[{{
                    Thickness[0.003], 
                    GrayLevel[0.85], 
                    
                    Dashing[{0.022727272727272728`, 0.022727272727272728`}, 
                    0.016], 
                    Line[{{0, 97}, {218, 97}}], 
                    Line[{{0, 0}, {218, 0}}], 
                    Dashing[{}], 
                    Line[{{0, 3}, {0, 94}}], 
                    Line[{{218, 3}, {218, 94}}]}, {
                    EdgeForm[None], 
                    Dynamic[
                    FaceForm[
                    If[
                    ColorQ[ToolbarCommon`Private`background], 
                    ToolbarCommon`Private`background, 
                    GrayLevel[1, 0]]]], 
                    Rectangle[{35, 20}, {196, 77}]}, 
                    GeometricTransformation[{
                    Thickness[0.007037297375423966], {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 38.65999984741211}, {69.55000305175781, 
                    38.65999984741211}, {69.55000305175781, 
                    29.869999885559082`}, {0., 29.869999885559082`}, {0., 
                    38.65999984741211}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 23.72000026702881}, {142.10000610351562`, 
                    23.72000026702881}, {142.10000610351562`, 
                    14.930000305175781`}, {0., 14.930000305175781`}, {0., 
                    23.72000026702881}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 8.790000915527344}, {125.5999984741211, 
                    8.790000915527344}, {125.5999984741211, 0.}, {0., 0.}, {
                    0., 8.790000915527344}}}]}}, {{{1, 0}, {0, 1}}, {44, 
                    29}}], {{
                    Dynamic[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mouseover, 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    If[
                    And[
                    ColorQ[ToolbarCommon`Private`fColor], 
                    ToolbarCommon`Private`frameAll > 0], 
                    ToolbarCommon`Private`fColor, 
                    GrayLevel[0.5764705882352941]]], 
                    If[ToolbarCommon`Private`frameAll > 0, 
                    AbsoluteThickness[
                    Clip[ToolbarCommon`Private`frameAll, {1, 8}]], 
                    Thickness[0.007]], 
                    If[ToolbarCommon`Private`frameAll > 0, 
                    Dashing[{}], Dotted]}]], 
                    FaceForm[None], 
                    Rectangle[{33, 18}, {198, 79}]}, 
                    GeometricTransformation[
                    Dynamic[
                    If[ToolbarCommon`Private`mouseover, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    
                    FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    1.4299999475479126`, 7.860000133514404}, {
                    7.820000171661377, 7.860000133514404}, {8.610504150390625,
                     7.860000133514404}, {9.25, 7.220504105091095}, {9.25, 
                    6.430000185966492}, {9.25, 1.429999828338623}, {9.25, 
                    0.6394963264465332}, {8.610504150390625, 0.}, {
                    7.820000171661377, 0.}, {1.4299999475479126`, 0.}, {
                    0.6394960284233093, 0.}, {0., 0.6394963264465332}, {0., 
                    1.429999828338623}, {0., 6.430000185966492}, {0., 
                    7.220504105091095}, {0.6394960284233093, 
                    7.860000133514404}, {1.4299999475479126`, 
                    7.860000133514404}}}], {
                    GrayLevel[1], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}}, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}]], {{{1, 0}, {
                    0, 1}}, {204, 
                    Rational[89, 2]}}], 
                    DynamicWrapper[
                    MouseAppearance[
                    Button[{
                    FaceForm[
                    GrayLevel[1, 0]], 
                    EdgeForm[None], 
                    
                    Polygon[{{17, 5}, {17, 92}, {214, 92}, {214, 5}} -> {{
                    42.379999999999995`, 27.38}, {42.379999999999995`, 
                    69.62}, {188.62, 69.62}, {188.62, 27.38}}]}, 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    DynamicModuleBox[{}, 
                    GraphicsBox[{{
                    DropShadowing[{0, 0}, 10, 
                    GrayLevel[0, 
                    Rational[1, 3]]], 
                    FaceForm[
                    GrayLevel[0.98]], 
                    EdgeForm[
                    GrayLevel[0.438]], 
                    FilledCurveBox[
                    BezierCurve[{
                    Offset[{0, -3}, {-1, 1}], 
                    Offset[{0, -1.344254926518}, {-1, 1}], 
                    Offset[{1.344254926518, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-1.344254926518, 0}, {1, 1}], 
                    Offset[{0, -1.344254926518}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 1.344254926518}, {1, -1}], 
                    Offset[{-1.344254926518, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{1.344254926518, 0}, {-1, -1}], 
                    Offset[{0, 1.344254926518}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}]}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    
                    DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = 
                    False, Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}},
                     FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}, 
                    StripOnInput -> False], "Hover" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    
                    PaneSelectorBox[{"Unknown" -> "\"\[LongDash]\"", "Normal" -> 
                    GraphicsBox[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    ToolbarCommon`Private`fColor]]], "None" -> GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`fColor, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, {1, 2}, 1,
                     BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameColor"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = SystemDialogInput[
                    "Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; ToolbarCommon`Private`fColor = 
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    None]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = None), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0.5]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlue"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.6, 0.4, 0.2], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBrown"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.6, 0.4, 0.2]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorCyan"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGreen"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorMagenta"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.5, 0, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPurple"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.5, 0, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorRed"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    TemplateBox[{5}, "Spacer1"], 
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    InputFieldBox[
                    Dynamic[
                    ToolbarCommon`Private`frameAll, Which[# === Null, 
                    ToolbarCommon`Private`frameAll = 0; If[
                    All === All === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{0, 0}, {0, 0}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 0))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}] = 
                    0], 
                    And[
                    NumericQ[#], # >= 0], ToolbarCommon`Private`frameAll = #; 
                    If[All === All === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{#, #}, {#, #}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = #))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, 
                    All}] = #], True, Null]& ], Appearance -> "Frameless", 
                    BaselinePosition -> (Center -> Center), 
                    ImageSize -> {{0, 80}, {10, 20}}, BoxID -> "field"], 
                    "\" \"", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    NumericQ[ToolbarCommon`Private`frameAll], "pt", ""], 
                    TraditionalForm]], FontColor -> GrayLevel[0.902], 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {ShowStringCharacters -> False}], "Grid"], 
                    Background -> GrayLevel[0.115], 
                    BaselinePosition -> (Center -> Center), 
                    FrameMargins -> {{4, 0}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageMargins -> {{0, 2}, {0, 0}}, 
                    ImageSize -> {50, 20}, RoundingRadius -> 3, 
                    BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, StripOnInput -> 
                    False], 
                    
                    DynamicModuleBox[{ToolbarCommon`Private`mUp$$, 
                    ToolbarCommon`Private`mDown$$}, 
                    GraphicsBox[{
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mUp$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 1.1}, {1, 2}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 1.4}, {0.5, 1.75}, {0.8, 1.4}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mUp$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Increment[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Ceiling[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 1]; If[All === All === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameAll], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mDown$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 0}, {1, 0.9}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 0.6}, {0.5, 0.25}, {0.8, 0.6}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mDown$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[ToolbarCommon`Private`val$ > 0, 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Decrement[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Floor[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 0], 
                    ToolbarCommon`Private`val$ = 0]; If[All === All === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameAll], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]]}, 
                    Background -> GrayLevel[0.07], Frame -> False, 
                    ImageSize -> {10, 20}, PlotRange -> {{-0.05, 1.1}, {-0.1, 
                    2.05}}], DynamicModuleValues :> {}]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {FontSize -> 3}], "Grid"], 
                    TemplateBox[{11}, "Spacer1"], 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> (Center -> Center), 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameResetIcon"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, {
                    1, 2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> If[All === All === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = Inherited; CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor] = 
                    Inherited; ToolbarCommon`Private`frameAll = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Blank[] -> 0}]; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`frameAll))); 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor], Black], CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}] = 
                    Inherited; CurrentValue[ToolbarCommon`Private`cellObjects,
                     CellFrameColor] = Inherited; 
                    Switch[{All, All}, {1, 1}, ToolbarCommon`Private`frameL = 
                    Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}],
                     0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {1, 2}, 
                    ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}],
                     0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 1}, 
                    ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}],
                     0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 2}, 
                    ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, All, All}],
                     0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}]]; 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black]], Appearance -> FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center)], "Grid"], 
                    TraditionalForm]], {0, 0}]}, ImageSize -> {162, 67}, 
                    AspectRatio -> Full, PlotRange -> 1, 
                    ImagePadding -> {{10, 10}, {15, 10}}], Initialization :> 
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "field", 
                    EvaluationCell[]], DynamicModuleValues :> {}, 
                    DynamicModuleParent -> $Failed, SynchronousInitialization -> 
                    False]], Evaluator -> "System", Magnification -> 
                    CurrentValue[
                    EvaluationCell[], Magnification]], {Right, Center}, 
                    Offset[{-5, -5}, Automatic], {Center, Bottom}, 
                    RemovalConditions -> {"OutsideMouseClick"}]], "LinkHand"], 
                    FEPrivate`Set[ToolbarCommon`Private`mouseover, 
                    CurrentValue["MouseOver"]]]}}, AspectRatio -> 
                    Rational[97, 218], Background -> Dynamic[
                    If[
                    ColorQ[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`nb, Background]], 
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`nb, Background], White]], 
                    ImageSize -> {218, 97}, 
                    PlotRange -> {{-1, 219}, {-1, 98}}], 
                    DynamicModuleValues :> {}], False -> 
                    DynamicModule[{
                    ToolbarCommon`Private`mLeft, ToolbarCommon`Private`mRight,
                     ToolbarCommon`Private`mBottom, 
                    ToolbarCommon`Private`mTop}, 
                    Graphics[{{
                    Thickness[0.003], 
                    GrayLevel[0.85], 
                    
                    Dashing[{0.022727272727272728`, 0.022727272727272728`}, 
                    0.016], 
                    Line[{{0, 97}, {218, 97}}], 
                    Line[{{0, 0}, {218, 0}}], 
                    Dashing[{}], 
                    Line[{{0, 3}, {0, 94}}], 
                    Line[{{218, 3}, {218, 94}}]}, {
                    EdgeForm[None], 
                    Dynamic[
                    FaceForm[
                    If[
                    ColorQ[ToolbarCommon`Private`background], 
                    ToolbarCommon`Private`background, 
                    GrayLevel[1, 0]]]], 
                    Rectangle[{35, 20}, {196, 77}]}, 
                    GeometricTransformation[{
                    Thickness[0.007037297375423966], {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 38.65999984741211}, {69.55000305175781, 
                    38.65999984741211}, {69.55000305175781, 
                    29.869999885559082`}, {0., 29.869999885559082`}, {0., 
                    38.65999984741211}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 23.72000026702881}, {142.10000610351562`, 
                    23.72000026702881}, {142.10000610351562`, 
                    14.930000305175781`}, {0., 14.930000305175781`}, {0., 
                    23.72000026702881}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9019607843137255, 0.9019607843137255, 
                    0.9019607843137255], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0., 8.790000915527344}, {125.5999984741211, 
                    8.790000915527344}, {125.5999984741211, 0.}, {0., 0.}, {
                    0., 8.790000915527344}}}]}}, {{{1, 0}, {0, 1}}, {44, 
                    29}}], {
                    GrayLevel[0.9019607843137255], 
                    Thickness[0.005], 
                    Line[{{33, 74}, {33, 79}, {38, 79}}], 
                    Line[{{193, 79}, {198, 79}, {198, 74}}], 
                    Line[{{198, 23}, {198, 18}, {193, 18}}], 
                    Line[{{38, 18}, {33, 18}, {33, 23}}]}, {{
                    Dynamic[
                    If[ToolbarCommon`Private`mTop, 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    If[
                    And[
                    ColorQ[ToolbarCommon`Private`fColor], 
                    ToolbarCommon`Private`frameT > 0], 
                    ToolbarCommon`Private`fColor, 
                    GrayLevel[0.5764705882352941]]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameT > 0, 
                    AbsoluteThickness[
                    Clip[ToolbarCommon`Private`frameT, {1, 8}]], 
                    Thickness[0.007]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameT > 0, 
                    Dashing[{}], 
                    Dashing[{0, 0.018}]]], 
                    Line[{{42.379999999999995`, 79}, {189, 79}}]}, 
                    GeometricTransformation[
                    Dynamic[
                    If[ToolbarCommon`Private`mTop, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    
                    FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    1.4299999475479126`, 7.860000133514404}, {
                    7.820000171661377, 7.860000133514404}, {8.610504150390625,
                     7.860000133514404}, {9.25, 7.220504105091095}, {9.25, 
                    6.430000185966492}, {9.25, 1.429999828338623}, {9.25, 
                    0.6394963264465332}, {8.610504150390625, 0.}, {
                    7.820000171661377, 0.}, {1.4299999475479126`, 0.}, {
                    0.6394960284233093, 0.}, {0., 0.6394963264465332}, {0., 
                    1.429999828338623}, {0., 6.430000185966492}, {0., 
                    7.220504105091095}, {0.6394960284233093, 
                    7.860000133514404}, {1.4299999475479126`, 
                    7.860000133514404}}}], {
                    GrayLevel[1], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}}, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}]], {{{1, 0}, {
                    0, 1}}, {
                    Rational[221, 2], 84}}], 
                    DynamicWrapper[
                    MouseAppearance[
                    Button[{
                    FaceForm[
                    GrayLevel[1, 0]], 
                    EdgeForm[None], 
                    
                    Polygon[{{42.379999999999995`, 69.62}, {17, 92}, {214, 
                    92}, {188.62, 69.62}}]}, 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    DynamicModuleBox[{}, 
                    GraphicsBox[{{
                    DropShadowing[{0, 0}, 10, 
                    GrayLevel[0, 
                    Rational[1, 3]]], 
                    FaceForm[
                    GrayLevel[0.98]], 
                    EdgeForm[
                    GrayLevel[0.438]], 
                    FilledCurveBox[
                    BezierCurve[{
                    Offset[{0, -3}, {-1, 1}], 
                    Offset[{0, -1.344254926518}, {-1, 1}], 
                    Offset[{1.344254926518, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-1.344254926518, 0}, {1, 1}], 
                    Offset[{0, -1.344254926518}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 1.344254926518}, {1, -1}], 
                    Offset[{-1.344254926518, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{1.344254926518, 0}, {-1, -1}], 
                    Offset[{0, 1.344254926518}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}]}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    
                    DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = 
                    False, Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}},
                     FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}, 
                    StripOnInput -> False], "Hover" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    
                    PaneSelectorBox[{"Unknown" -> "\"\[LongDash]\"", "Normal" -> 
                    GraphicsBox[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    ToolbarCommon`Private`fColor]]], "None" -> GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`fColor, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, {1, 2}, 1,
                     BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameColor"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = SystemDialogInput[
                    "Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; ToolbarCommon`Private`fColor = 
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    None]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = None), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0.5]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlue"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.6, 0.4, 0.2], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBrown"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.6, 0.4, 0.2]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorCyan"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGreen"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorMagenta"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.5, 0, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPurple"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.5, 0, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorRed"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    TemplateBox[{5}, "Spacer1"], 
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    InputFieldBox[
                    Dynamic[
                    ToolbarCommon`Private`frameT, Which[# === Null, 
                    ToolbarCommon`Private`frameT = 0; If[
                    2 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{0, 0}, {0, 0}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 0))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}] = 
                    0], 
                    And[
                    NumericQ[#], # >= 0], ToolbarCommon`Private`frameT = #; 
                    If[2 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{#, #}, {#, #}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = #))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 
                    2}] = #], True, Null]& ], Appearance -> "Frameless", 
                    BaselinePosition -> (Center -> Center), 
                    ImageSize -> {{0, 80}, {10, 20}}, BoxID -> "field"], 
                    "\" \"", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    NumericQ[ToolbarCommon`Private`frameT], "pt", ""], 
                    TraditionalForm]], FontColor -> GrayLevel[0.902], 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {ShowStringCharacters -> False}], "Grid"], 
                    Background -> GrayLevel[0.115], 
                    BaselinePosition -> (Center -> Center), 
                    FrameMargins -> {{4, 0}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageMargins -> {{0, 2}, {0, 0}}, 
                    ImageSize -> {50, 20}, RoundingRadius -> 3, 
                    BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, StripOnInput -> 
                    False], 
                    
                    DynamicModuleBox[{ToolbarCommon`Private`mUp$$, 
                    ToolbarCommon`Private`mDown$$}, 
                    GraphicsBox[{
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mUp$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 1.1}, {1, 2}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 1.4}, {0.5, 1.75}, {0.8, 1.4}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mUp$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Increment[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Ceiling[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 1]; If[2 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameT], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mDown$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 0}, {1, 0.9}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 0.6}, {0.5, 0.25}, {0.8, 0.6}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mDown$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[ToolbarCommon`Private`val$ > 0, 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Decrement[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Floor[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 0], 
                    ToolbarCommon`Private`val$ = 0]; If[2 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameT], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]]}, 
                    Background -> GrayLevel[0.07], Frame -> False, 
                    ImageSize -> {10, 20}, PlotRange -> {{-0.05, 1.1}, {-0.1, 
                    2.05}}], DynamicModuleValues :> {}]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {FontSize -> 3}], "Grid"], 
                    TemplateBox[{11}, "Spacer1"], 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> (Center -> Center), 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameResetIcon"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, {
                    1, 2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> If[2 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = Inherited; CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor] = 
                    Inherited; ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Blank[] -> 0}]; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`frameT))); 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black], CurrentValue[ToolbarCommon`Private`cellObjects, {
                    CellFrame, 2, 2}] = Inherited; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; 
                    Switch[{2, 2}, {1, 1}, ToolbarCommon`Private`frameL = 
                    Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {1, 2}, 
                    ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 1}, 
                    ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 2}, 
                    ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}]]; 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black]], Appearance -> FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center)], "Grid"], 
                    TraditionalForm]], {0, 0}]}, ImageSize -> {162, 67}, 
                    AspectRatio -> Full, PlotRange -> 1, 
                    ImagePadding -> {{10, 10}, {15, 10}}], Initialization :> 
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "field", 
                    EvaluationCell[]], DynamicModuleValues :> {}, 
                    DynamicModuleParent -> $Failed, SynchronousInitialization -> 
                    False]], Evaluator -> "System", Magnification -> 
                    CurrentValue[
                    EvaluationCell[], Magnification]], {Center, Top}, 
                    Offset[{0, -9}, Automatic], {Center, Bottom}, 
                    RemovalConditions -> {"OutsideMouseClick"}]], "LinkHand"], 
                    FEPrivate`Set[ToolbarCommon`Private`mTop, 
                    CurrentValue["MouseOver"]]]}, {{
                    Dynamic[
                    If[ToolbarCommon`Private`mBottom, 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    If[
                    And[
                    ColorQ[ToolbarCommon`Private`fColor], 
                    ToolbarCommon`Private`frameB > 0], 
                    ToolbarCommon`Private`fColor, 
                    GrayLevel[0.5764705882352941]]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameB > 0, 
                    AbsoluteThickness[
                    Clip[ToolbarCommon`Private`frameB, {1, 8}]], 
                    Thickness[0.007]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameB > 0, 
                    Dashing[{}], 
                    Dashing[{0, 0.018}]]], 
                    Line[{{42.379999999999995`, 18}, {188.62, 18}}]}, 
                    GeometricTransformation[
                    Dynamic[
                    If[ToolbarCommon`Private`mBottom, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    
                    FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    1.4299999475479126`, 7.860000133514404}, {
                    7.820000171661377, 7.860000133514404}, {8.610504150390625,
                     7.860000133514404}, {9.25, 7.220504105091095}, {9.25, 
                    6.430000185966492}, {9.25, 1.429999828338623}, {9.25, 
                    0.6394963264465332}, {8.610504150390625, 0.}, {
                    7.820000171661377, 0.}, {1.4299999475479126`, 0.}, {
                    0.6394960284233093, 0.}, {0., 0.6394963264465332}, {0., 
                    1.429999828338623}, {0., 6.430000185966492}, {0., 
                    7.220504105091095}, {0.6394960284233093, 
                    7.860000133514404}, {1.4299999475479126`, 
                    7.860000133514404}}}], {
                    GrayLevel[1], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}}, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}]], {{{1, 0}, {
                    0, 1}}, {
                    Rational[221, 2], 5}}], 
                    DynamicWrapper[
                    MouseAppearance[
                    Button[{
                    FaceForm[
                    GrayLevel[1, 0]], 
                    EdgeForm[None], 
                    
                    Polygon[{{17, 5}, {42.379999999999995`, 27.38}, {188.62, 
                    27.38}, {214, 5}}]}, 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    DynamicModuleBox[{}, 
                    GraphicsBox[{{
                    DropShadowing[{0, 0}, 10, 
                    GrayLevel[0, 
                    Rational[1, 3]]], 
                    FaceForm[
                    GrayLevel[0.98]], 
                    EdgeForm[
                    GrayLevel[0.438]], 
                    FilledCurveBox[
                    BezierCurve[{
                    Offset[{0, -3}, {-1, 1}], 
                    Offset[{0, -1.344254926518}, {-1, 1}], 
                    Offset[{1.344254926518, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-1.344254926518, 0}, {1, 1}], 
                    Offset[{0, -1.344254926518}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 1.344254926518}, {1, -1}], 
                    Offset[{-1.344254926518, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{1.344254926518, 0}, {-1, -1}], 
                    Offset[{0, 1.344254926518}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}]}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    
                    DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = 
                    False, Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}},
                     FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}, 
                    StripOnInput -> False], "Hover" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    
                    PaneSelectorBox[{"Unknown" -> "\"\[LongDash]\"", "Normal" -> 
                    GraphicsBox[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    ToolbarCommon`Private`fColor]]], "None" -> GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`fColor, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, {1, 2}, 1,
                     BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameColor"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = SystemDialogInput[
                    "Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; ToolbarCommon`Private`fColor = 
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    None]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = None), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0.5]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlue"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.6, 0.4, 0.2], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBrown"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.6, 0.4, 0.2]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorCyan"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGreen"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorMagenta"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.5, 0, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPurple"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.5, 0, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorRed"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    TemplateBox[{5}, "Spacer1"], 
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    InputFieldBox[
                    Dynamic[
                    ToolbarCommon`Private`frameB, Which[# === Null, 
                    ToolbarCommon`Private`frameB = 0; If[
                    2 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{0, 0}, {0, 0}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 0))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}] = 
                    0], 
                    And[
                    NumericQ[#], # >= 0], ToolbarCommon`Private`frameB = #; 
                    If[2 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{#, #}, {#, #}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = #))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 
                    1}] = #], True, Null]& ], Appearance -> "Frameless", 
                    BaselinePosition -> (Center -> Center), 
                    ImageSize -> {{0, 80}, {10, 20}}, BoxID -> "field"], 
                    "\" \"", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    NumericQ[ToolbarCommon`Private`frameB], "pt", ""], 
                    TraditionalForm]], FontColor -> GrayLevel[0.902], 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {ShowStringCharacters -> False}], "Grid"], 
                    Background -> GrayLevel[0.115], 
                    BaselinePosition -> (Center -> Center), 
                    FrameMargins -> {{4, 0}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageMargins -> {{0, 2}, {0, 0}}, 
                    ImageSize -> {50, 20}, RoundingRadius -> 3, 
                    BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, StripOnInput -> 
                    False], 
                    
                    DynamicModuleBox[{ToolbarCommon`Private`mUp$$, 
                    ToolbarCommon`Private`mDown$$}, 
                    GraphicsBox[{
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mUp$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 1.1}, {1, 2}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 1.4}, {0.5, 1.75}, {0.8, 1.4}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mUp$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Increment[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Ceiling[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 1]; If[2 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameB], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mDown$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 0}, {1, 0.9}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 0.6}, {0.5, 0.25}, {0.8, 0.6}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mDown$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[ToolbarCommon`Private`val$ > 0, 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Decrement[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Floor[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 0], 
                    ToolbarCommon`Private`val$ = 0]; If[2 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameB], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]]}, 
                    Background -> GrayLevel[0.07], Frame -> False, 
                    ImageSize -> {10, 20}, PlotRange -> {{-0.05, 1.1}, {-0.1, 
                    2.05}}], DynamicModuleValues :> {}]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {FontSize -> 3}], "Grid"], 
                    TemplateBox[{11}, "Spacer1"], 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> (Center -> Center), 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameResetIcon"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, {
                    1, 2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> If[2 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = Inherited; CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor] = 
                    Inherited; ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Blank[] -> 0}]; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`frameB))); 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black], CurrentValue[ToolbarCommon`Private`cellObjects, {
                    CellFrame, 2, 1}] = Inherited; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; 
                    Switch[{2, 1}, {1, 1}, ToolbarCommon`Private`frameL = 
                    Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {1, 2}, 
                    ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 1}, 
                    ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 2}, 
                    ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 2, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}]]; 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black]], Appearance -> FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center)], "Grid"], 
                    TraditionalForm]], {0, 0}]}, ImageSize -> {162, 67}, 
                    AspectRatio -> Full, PlotRange -> 1, 
                    ImagePadding -> {{10, 10}, {15, 10}}], Initialization :> 
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "field", 
                    EvaluationCell[]], DynamicModuleValues :> {}, 
                    DynamicModuleParent -> $Failed, SynchronousInitialization -> 
                    False]], Evaluator -> "System", Magnification -> 
                    CurrentValue[
                    EvaluationCell[], Magnification]], {Center, Bottom}, 
                    Offset[{0, 0}, Automatic], {Center, Bottom}, 
                    RemovalConditions -> {"OutsideMouseClick"}]], "LinkHand"], 
                    FEPrivate`Set[ToolbarCommon`Private`mBottom, 
                    CurrentValue["MouseOver"]]]}, {{
                    Dynamic[
                    If[ToolbarCommon`Private`mLeft, 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    If[
                    And[
                    ColorQ[ToolbarCommon`Private`fColor], 
                    ToolbarCommon`Private`frameL > 0], 
                    ToolbarCommon`Private`fColor, 
                    GrayLevel[0.5764705882352941]]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameL > 0, 
                    AbsoluteThickness[
                    Clip[ToolbarCommon`Private`frameL, {1, 8}]], 
                    Thickness[0.007]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameL > 0, 
                    Dashing[{}], Dotted]], 
                    Line[{{33, 27.38}, {33, 69.62}}]}, 
                    GeometricTransformation[
                    Dynamic[
                    If[ToolbarCommon`Private`mLeft, {
                    RGBColor[0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    
                    FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    1.4299999475479126`, 7.860000133514404}, {
                    7.820000171661377, 7.860000133514404}, {8.610504150390625,
                     7.860000133514404}, {9.25, 7.220504105091095}, {9.25, 
                    6.430000185966492}, {9.25, 1.429999828338623}, {9.25, 
                    0.6394963264465332}, {8.610504150390625, 0.}, {
                    7.820000171661377, 0.}, {1.4299999475479126`, 0.}, {
                    0.6394960284233093, 0.}, {0., 0.6394963264465332}, {0., 
                    1.429999828338623}, {0., 6.430000185966492}, {0., 
                    7.220504105091095}, {0.6394960284233093, 
                    7.860000133514404}, {1.4299999475479126`, 
                    7.860000133514404}}}], {
                    GrayLevel[1], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}}, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}]], {{{1, 0}, {
                    0, 1}}, {17, 
                    Rational[89, 2]}}], 
                    DynamicWrapper[
                    MouseAppearance[
                    Button[{
                    FaceForm[
                    GrayLevel[1, 0]], 
                    EdgeForm[None], 
                    
                    Polygon[{{17, 5}, {17, 92}, {42.379999999999995`, 
                    69.62}, {42.379999999999995`, 27.38}}]}, 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    DynamicModuleBox[{}, 
                    GraphicsBox[{{
                    DropShadowing[{0, 0}, 10, 
                    GrayLevel[0, 
                    Rational[1, 3]]], 
                    FaceForm[
                    GrayLevel[0.98]], 
                    EdgeForm[
                    GrayLevel[0.438]], 
                    FilledCurveBox[
                    BezierCurve[{
                    Offset[{0, -3}, {-1, 1}], 
                    Offset[{0, -1.344254926518}, {-1, 1}], 
                    Offset[{1.344254926518, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-1.344254926518, 0}, {1, 1}], 
                    Offset[{0, -1.344254926518}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 1.344254926518}, {1, -1}], 
                    Offset[{-1.344254926518, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{1.344254926518, 0}, {-1, -1}], 
                    Offset[{0, 1.344254926518}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}]}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    
                    DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = 
                    False, Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}},
                     FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}, 
                    StripOnInput -> False], "Hover" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    
                    PaneSelectorBox[{"Unknown" -> "\"\[LongDash]\"", "Normal" -> 
                    GraphicsBox[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    ToolbarCommon`Private`fColor]]], "None" -> GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`fColor, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, {1, 2}, 1,
                     BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameColor"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = SystemDialogInput[
                    "Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; ToolbarCommon`Private`fColor = 
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    None]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = None), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0.5]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlue"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.6, 0.4, 0.2], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBrown"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.6, 0.4, 0.2]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorCyan"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGreen"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorMagenta"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.5, 0, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPurple"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.5, 0, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorRed"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    TemplateBox[{5}, "Spacer1"], 
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    InputFieldBox[
                    Dynamic[
                    ToolbarCommon`Private`frameL, Which[# === Null, 
                    ToolbarCommon`Private`frameL = 0; If[
                    1 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{0, 0}, {0, 0}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 0))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}] = 
                    0], 
                    And[
                    NumericQ[#], # >= 0], ToolbarCommon`Private`frameL = #; 
                    If[1 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{#, #}, {#, #}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = #))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 
                    1}] = #], True, Null]& ], Appearance -> "Frameless", 
                    BaselinePosition -> (Center -> Center), 
                    ImageSize -> {{0, 80}, {10, 20}}, BoxID -> "field"], 
                    "\" \"", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    NumericQ[ToolbarCommon`Private`frameL], "pt", ""], 
                    TraditionalForm]], FontColor -> GrayLevel[0.902], 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {ShowStringCharacters -> False}], "Grid"], 
                    Background -> GrayLevel[0.115], 
                    BaselinePosition -> (Center -> Center), 
                    FrameMargins -> {{4, 0}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageMargins -> {{0, 2}, {0, 0}}, 
                    ImageSize -> {50, 20}, RoundingRadius -> 3, 
                    BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, StripOnInput -> 
                    False], 
                    
                    DynamicModuleBox[{ToolbarCommon`Private`mUp$$, 
                    ToolbarCommon`Private`mDown$$}, 
                    GraphicsBox[{
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mUp$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 1.1}, {1, 2}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 1.4}, {0.5, 1.75}, {0.8, 1.4}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mUp$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Increment[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Ceiling[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 1]; If[1 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameL], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mDown$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 0}, {1, 0.9}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 0.6}, {0.5, 0.25}, {0.8, 0.6}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mDown$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[ToolbarCommon`Private`val$ > 0, 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Decrement[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Floor[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 0], 
                    ToolbarCommon`Private`val$ = 0]; If[1 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameL], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]]}, 
                    Background -> GrayLevel[0.07], Frame -> False, 
                    ImageSize -> {10, 20}, PlotRange -> {{-0.05, 1.1}, {-0.1, 
                    2.05}}], DynamicModuleValues :> {}]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {FontSize -> 3}], "Grid"], 
                    TemplateBox[{11}, "Spacer1"], 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> (Center -> Center), 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameResetIcon"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, {
                    1, 2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> If[1 === 1 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = Inherited; CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor] = 
                    Inherited; ToolbarCommon`Private`frameL = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Blank[] -> 0}]; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`frameL))); 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black], CurrentValue[ToolbarCommon`Private`cellObjects, {
                    CellFrame, 1, 1}] = Inherited; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; 
                    Switch[{1, 1}, {1, 1}, ToolbarCommon`Private`frameL = 
                    Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {1, 2}, 
                    ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 1}, 
                    ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 2}, 
                    ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}]]; 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black]], Appearance -> FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center)], "Grid"], 
                    TraditionalForm]], {0, 0}]}, ImageSize -> {162, 67}, 
                    AspectRatio -> Full, PlotRange -> 1, 
                    ImagePadding -> {{10, 10}, {15, 10}}], Initialization :> 
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "field", 
                    EvaluationCell[]], DynamicModuleValues :> {}, 
                    DynamicModuleParent -> $Failed, SynchronousInitialization -> 
                    False]], Evaluator -> "System", Magnification -> 
                    CurrentValue[
                    EvaluationCell[], Magnification]], {Left, Center}, 
                    Offset[{5, -5}, Automatic], {Center, Bottom}, 
                    RemovalConditions -> {"OutsideMouseClick"}]], "LinkHand"], 
                    FEPrivate`Set[ToolbarCommon`Private`mLeft, 
                    CurrentValue["MouseOver"]]]}, {{
                    Dynamic[
                    If[ToolbarCommon`Private`mRight, 
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    If[
                    And[
                    ColorQ[ToolbarCommon`Private`fColor], 
                    ToolbarCommon`Private`frameR > 0], 
                    ToolbarCommon`Private`fColor, 
                    GrayLevel[0.5764705882352941]]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameR > 0, 
                    AbsoluteThickness[
                    Clip[ToolbarCommon`Private`frameR, {1, 8}]], 
                    Thickness[0.007]]], 
                    Dynamic[
                    If[ToolbarCommon`Private`frameR > 0, 
                    Dashing[{}], Dotted]], 
                    Line[{{198, 27.38}, {198, 69.62}}]}, 
                    GeometricTransformation[
                    Dynamic[
                    If[ToolbarCommon`Private`mRight, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    
                    FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    1.4299999475479126`, 7.860000133514404}, {
                    7.820000171661377, 7.860000133514404}, {8.610504150390625,
                     7.860000133514404}, {9.25, 7.220504105091095}, {9.25, 
                    6.430000185966492}, {9.25, 1.429999828338623}, {9.25, 
                    0.6394963264465332}, {8.610504150390625, 0.}, {
                    7.820000171661377, 0.}, {1.4299999475479126`, 0.}, {
                    0.6394960284233093, 0.}, {0., 0.6394963264465332}, {0., 
                    1.429999828338623}, {0., 6.430000185966492}, {0., 
                    7.220504105091095}, {0.6394960284233093, 
                    7.860000133514404}, {1.4299999475479126`, 
                    7.860000133514404}}}], {
                    GrayLevel[1], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}}, {
                    RGBColor[
                    0.2235294117647059, 0.5882352941176471, 
                    0.9333333333333333], 
                    Thickness[0.007], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    JoinedCurve[{{{0, 2, 0}, {0, 1, 0}}}, {{{
                    2.2300000190734863`, 5.110000133514404}, {
                    4.630000114440918, 2.570000171661377}, {7.019999980926514,
                     5.110000133514404}}}, CurveClosed -> {0}]}]], {{{1, 0}, {
                    0, 1}}, {204, 
                    Rational[89, 2]}}], 
                    DynamicWrapper[
                    MouseAppearance[
                    Button[{
                    FaceForm[
                    GrayLevel[1, 0]], 
                    EdgeForm[None], 
                    
                    Polygon[{{188.62, 27.38}, {188.62, 69.62}, {214, 92}, {
                    214, 5}}]}, 
                    AttachCell[
                    EvaluationBox[], 
                    Cell[
                    BoxData[
                    DynamicModuleBox[{}, 
                    GraphicsBox[{{
                    DropShadowing[{0, 0}, 10, 
                    GrayLevel[0, 
                    Rational[1, 3]]], 
                    FaceForm[
                    GrayLevel[0.98]], 
                    EdgeForm[
                    GrayLevel[0.438]], 
                    FilledCurveBox[
                    BezierCurve[{
                    Offset[{0, -3}, {-1, 1}], 
                    Offset[{0, -1.344254926518}, {-1, 1}], 
                    Offset[{1.344254926518, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{3, 0}, {-1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-3, 0}, {1, 1}], 
                    Offset[{-1.344254926518, 0}, {1, 1}], 
                    Offset[{0, -1.344254926518}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, -3}, {1, 1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 3}, {1, -1}], 
                    Offset[{0, 1.344254926518}, {1, -1}], 
                    Offset[{-1.344254926518, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{-3, 0}, {1, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{5, 0}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{0, -5}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{-5, 0}, {0, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{3, 0}, {-1, -1}], 
                    Offset[{1.344254926518, 0}, {-1, -1}], 
                    Offset[{0, 1.344254926518}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}], 
                    Offset[{0, 3}, {-1, -1}]}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    
                    DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = 
                    False, Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}},
                     FrameStyle -> GrayLevel[0.749], ImageSize -> {20, 20}, 
                    StripOnInput -> False], "Hover" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    
                    PaneSelectorBox[{"Unknown" -> "\"\[LongDash]\"", "Normal" -> 
                    GraphicsBox[Background -> Dynamic[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    ToolbarCommon`Private`fColor]]], "None" -> GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {1, 1}}]}, Background -> GrayLevel[0.07], 
                    PlotRange -> {{-0.1, 1.1}, {-0.1, 1.1}}]}, 
                    Dynamic[
                    Switch[
                    ToolbarCommon`Private`fColor, All, "Unknown", None, 
                    "None", 
                    Blank[], "Normal"]], ImageSize -> Automatic], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, FrameMargins -> {{2, 1}, {1, 2}}, 
                    ImageSize -> {20, 20}, StripOnInput -> False]}, {1, 2}, 1,
                     BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> ToolbarSupport`AttachPopup[
                    Framed[
                    Column[{
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameColor"], 
                    DestroyAfterEvaluation -> True], BaseStyle -> 
                    "NotebookToolbarMenuHeader"], 
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPalette"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    With[{ToolbarCommon`Private`attempt$ = SystemDialogInput[
                    "Color"]}, 
                    If[
                    ColorQ[ToolbarCommon`Private`attempt$], 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    ToolbarCommon`Private`attempt$)]], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Queued"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Inherited"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; (
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; ToolbarCommon`Private`fColor = 
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    None]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[Background -> None, ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorNone"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = None), 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlack"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.5], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGray"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[0.5]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> GrayLevel[0.07], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorWhite"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    GrayLevel[1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBlue"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.6, 0.4, 0.2], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorBrown"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.6, 0.4, 0.2]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorCyan"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorGreen"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 1], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorMagenta"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 1]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorOrange"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0.5, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPink"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0.5, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[0.5, 0, 0.5], ImageSize -> {24, 
                    24}], 
                    Graphics[ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorPurple"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[0.5, 0, 0.5]), Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 0, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorRed"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 0, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{"Default" -> Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> Framed[
                    "", BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Graphics[
                    Background -> RGBColor[1, 1, 0], ImageSize -> {24, 24}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellColorYellow"]], {{
                    18, Automatic}, {18, 18}}, BaselinePosition -> (Bottom -> 
                    Bottom), Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, FontColor -> 
                    GrayLevel[0.8]}}, ItemSize -> {{Fit, Full, Full}}, 
                    Alignment -> Left, Spacings -> {0, 0}, BaseStyle -> {
                    LineIndent -> 0}], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {"MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, 
                    True]}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = (ToolbarCommon`Private`fColor = 
                    RGBColor[1, 1, 0]), Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
                    BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                    Spacings -> 0], Background -> GrayLevel[0.115], BaseStyle -> 
                    "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}},
                     FrameStyle -> Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}], 
                    TemplateBox[{5}, "Spacer1"], 
                    TagBox[
                    GridBox[{{
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    InputFieldBox[
                    Dynamic[
                    ToolbarCommon`Private`frameR, Which[# === Null, 
                    ToolbarCommon`Private`frameR = 0; If[
                    1 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{0, 0}, {0, 0}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 0))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}] = 
                    0], 
                    And[
                    NumericQ[#], # >= 0], ToolbarCommon`Private`frameR = #; 
                    If[1 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{#, #}, {#, #}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = #))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 
                    2}] = #], True, Null]& ], Appearance -> "Frameless", 
                    BaselinePosition -> (Center -> Center), 
                    ImageSize -> {{0, 80}, {10, 20}}, BoxID -> "field"], 
                    "\" \"", 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    NumericQ[ToolbarCommon`Private`frameR], "pt", ""], 
                    TraditionalForm]], FontColor -> GrayLevel[0.902], 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {ShowStringCharacters -> False}], "Grid"], 
                    Background -> GrayLevel[0.115], 
                    BaselinePosition -> (Center -> Center), 
                    FrameMargins -> {{4, 0}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageMargins -> {{0, 2}, {0, 0}}, 
                    ImageSize -> {50, 20}, RoundingRadius -> 3, 
                    BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, StripOnInput -> 
                    False], 
                    
                    DynamicModuleBox[{ToolbarCommon`Private`mUp$$, 
                    ToolbarCommon`Private`mDown$$}, 
                    GraphicsBox[{
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mUp$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 1.1}, {1, 2}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 1.4}, {0.5, 1.75}, {0.8, 1.4}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mUp$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Increment[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Ceiling[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 1]; If[1 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameR], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[{
                    Thickness[0.1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    FaceForm[
                    GrayLevel[1]], 
                    DynamicBox[
                    Typeset`ToBoxes[
                    EdgeForm[{
                    If[ToolbarCommon`Private`mDown$$, 
                    GrayLevel[0.82], 
                    GrayLevel[0.749]], 
                    Thickness[0.1]}], TraditionalForm, Graphics]], 
                    DynamicWrapperBox[{
                    RectangleBox[{0, 0}, {1, 0.9}, RoundingRadius -> 0.2], 
                    GrayLevel[0.5], 
                    LineBox[{{0.2, 0.6}, {0.5, 0.25}, {0.8, 0.6}}]}, 
                    FEPrivate`Set[ToolbarCommon`Private`mDown$$, 
                    CurrentValue["MouseOver"]]]}, 
                    
                    EventHandlerTag[{"MouseClicked" :> Function[{
                    ToolbarCommon`Private`val$}, If[
                    NumericQ[ToolbarCommon`Private`val$], 
                    If[ToolbarCommon`Private`val$ > 0, 
                    If[
                    IntegerQ[ToolbarCommon`Private`val$], 
                    Decrement[ToolbarCommon`Private`val$], 
                    ToolbarCommon`Private`val$ = 
                    Floor[ToolbarCommon`Private`val$]], 
                    ToolbarCommon`Private`val$ = 0], 
                    ToolbarCommon`Private`val$ = 0]; If[1 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = {{ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}, {ToolbarCommon`Private`val$, 
                    ToolbarCommon`Private`val$}}; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`val$))), CurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}] = 
                    ToolbarCommon`Private`val$], HoldFirst][
                    ToolbarCommon`Private`frameR], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]]}, 
                    Background -> GrayLevel[0.07], Frame -> False, 
                    ImageSize -> {10, 20}, PlotRange -> {{-0.05, 1.1}, {-0.1, 
                    2.05}}], DynamicModuleValues :> {}]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center), 
                    BaseStyle -> {FontSize -> 3}], "Grid"], 
                    TemplateBox[{11}, "Spacer1"], 
                    ButtonBox[
                    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
                    TagBox[
                    OverlayBox[{
                    
                    PaneSelectorBox[{"Default" -> FrameBox[
                    "\"\"", BaseStyle -> {"NotebookToolbarButtonFrameDefault",
                     "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False], 
                    "Hover" -> FrameBox["\"\"", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> (Center -> Center), 
                    ImageSize -> {20, 20}, StripOnInput -> False], "Pressed" -> 
                    FrameBox["\"\"", 
                    BaseStyle -> {"NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ$$, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    FrameBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameResetIcon"]], 
                    BaseStyle -> {"NotebookToolbarButtonFrame", 
                    "NotebookToolbarText"}, BaselinePosition -> (Center -> 
                    Center), ImageSize -> {20, 20}, StripOnInput -> False]}, {
                    1, 2}, 1, BaseStyle -> "NotebookToolbarButtonOverlay"], 
                    
                    EventHandlerTag[{"MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ$$, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> If[1 === 2 === All, 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrame] = Inherited; CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor] = 
                    Inherited; ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 1}], 
                    0], {True -> 1, Blank[] -> 0}]; 
                    ToolbarCommon`Private`frameL = (
                    ToolbarCommon`Private`frameR = (
                    ToolbarCommon`Private`frameB = (
                    ToolbarCommon`Private`frameT = 
                    ToolbarCommon`Private`frameR))); 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black], CurrentValue[ToolbarCommon`Private`cellObjects, {
                    CellFrame, 1, 2}] = Inherited; 
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellFrameColor] = Inherited; 
                    Switch[{1, 2}, {1, 1}, ToolbarCommon`Private`frameL = 
                    Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {1, 2}, 
                    ToolbarCommon`Private`frameR = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 1}, 
                    ToolbarCommon`Private`frameB = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}], {2, 2}, 
                    ToolbarCommon`Private`frameT = Replace[
                    First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, {CellFrame, 1, 2}], 
                    0], {True -> 1, Except[
                    PatternTest[
                    Blank[], NumericQ]] -> 0}]]; 
                    ToolbarCommon`Private`fColor = First[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`cellObjects, CellFrameColor], 
                    Black]], Appearance -> FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"], 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> (Center -> Center)], "Grid"], 
                    TraditionalForm]], {0, 0}]}, ImageSize -> {162, 67}, 
                    AspectRatio -> Full, PlotRange -> 1, 
                    ImagePadding -> {{10, 10}, {15, 10}}], Initialization :> 
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "field", 
                    EvaluationCell[]], DynamicModuleValues :> {}, 
                    DynamicModuleParent -> $Failed, SynchronousInitialization -> 
                    False]], Evaluator -> "System", Magnification -> 
                    CurrentValue[
                    EvaluationCell[], Magnification]], {Right, Center}, 
                    Offset[{-5, -5}, Automatic], {Center, Bottom}, 
                    RemovalConditions -> {"OutsideMouseClick"}]], "LinkHand"], 
                    FEPrivate`Set[ToolbarCommon`Private`mRight, 
                    CurrentValue["MouseOver"]]]}}, AspectRatio -> 
                    Rational[97, 218], Background -> Dynamic[
                    If[
                    ColorQ[
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`nb, Background]], 
                    AbsoluteCurrentValue[
                    ToolbarCommon`Private`nb, Background], White]], 
                    ImageSize -> {218, 97}, 
                    PlotRange -> {{-1, 219}, {-1, 98}}], 
                    DynamicModuleValues :> {}]}, 
                    Dynamic[ToolbarCommon`Private`changeAllSidesQ], 
                    ImageMargins -> {{10, 10}, {7, 12}}, ImageSize -> 
                    Automatic]}, {
                    MouseAppearance[
                    Button[
                    Grid[{{
                    Framed[
                    PaneSelector[{True -> Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", 
                    "CellFrameLockClosedIcon"]]], False -> Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "CellFrameLockOpenIcon"]]]}, 
                    Dynamic[ToolbarCommon`Private`changeAllSidesQ], 
                    BaselinePosition -> (Center -> Center), ImageSize -> 
                    Automatic], Alignment -> {Center, Center}, Background -> 
                    GrayLevel[0.07], BaselinePosition -> (Center -> Center), 
                    FrameMargins -> 0, FrameStyle -> Directive[
                    GrayLevel[0.749], 
                    AbsoluteThickness[1]], ImageSize -> {14, 14}, 
                    RoundingRadius -> 3], 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellFrameEditAll"]]}}], 
                    ToolbarCommon`Private`changeAllSidesQ = 
                    Not[ToolbarCommon`Private`changeAllSidesQ]; 
                    If[ToolbarCommon`Private`changeAllSidesQ, 
                    ToolbarCommon`Private`frameAll = 
                    If[ToolbarCommon`Private`frameL === 
                    ToolbarCommon`Private`frameR === 
                    ToolbarCommon`Private`frameB === 
                    ToolbarCommon`Private`frameT, 
                    ToolbarCommon`Private`frameL, 0]], Appearance -> Dynamic[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "SuppressMouseDownNinePatchAppearance"]],
                     BaselinePosition -> (Center -> Center), BaseStyle -> {
                    Missing["KeyAbsent", "ControlText"]}, 
                    ImageMargins -> {{10, 0}, {6, 0}}, ImageSize -> 
                    Automatic], "LinkHand"]}}, Alignment -> Left, 
                  Spacings -> {0, 0}], DynamicModuleValues :> {}], 
                Graphics[
                 Line[{{-1, 0}, {1, 0}}], ImageSize -> {Full, 3}, AspectRatio -> 
                 Full, ImagePadding -> {{0, 0}, {1, 1}}, 
                 PlotRange -> {{-1, 1}, {1.5, 1.5}}, BaseStyle -> {
                   GrayLevel[0.438], 
                   AbsoluteThickness[1], 
                   CapForm["Round"]}], 
                Pane[
                 Row[{
                   Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "CellAppearanceDingbat"]], 
                   
                   DynamicModule[{
                    Toolbar`Private`mouseClickListener$$ = False, 
                    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, Background -> GrayLevel[0.07], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{4, 2}, {0, 0}}, FrameStyle -> 
                    GrayLevel[0.749], ImageSize -> {55, 20}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     BaselinePosition -> Baseline, 
                    FrameMargins -> {{4, 2}, {0, 0}}, ImageSize -> {55, 20}], 
                    "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, Background -> GrayLevel[0.07], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{4, 2}, {0, 0}}, ImageSize -> {55, 20}]}, 
                    Dynamic[
                    Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Dynamic[
                    If[
                    ToolbarCommon`Private`dingbat === All, "\[LongDash]", 
                    ToolbarCommon`Private`dingbat]], 
                    Graphics[
                    Line[{{-1, 0}, {0, -1}, {1, 0}}], 
                    ImageSize -> {11, 7.699999999999999}, AspectRatio -> Full,
                     ImagePadding -> 2, BaselinePosition -> Center, BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    JoinForm["Round"], 
                    CapForm["Round"], 
                    GrayLevel[0.5]}]}}, Alignment -> {{Left, Right}, Center}, 
                    ItemSize -> {{Fit, Automatic}, 25}, BaselinePosition -> 
                    Center], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", "NotebookToolbarText"}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{4, 2}, {0, 0}}, 
                    ImageSize -> {55, 20}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    ToolbarSupport`AttachPopup[
                    Framed[
                    Pane[
                    Column[{
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === None]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], None, 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatNone"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = None, 
                    Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledSquare]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledSquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledSquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledSquare]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[GraySquare]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[GraySquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatGraySquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[GraySquare]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptySquare]"]& )[
                    CurrentValue[ToolbarCommon`Private`cellObjects, 
                    CellDingbat]]]], {{18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptySquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptySquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptySquare]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[DottedSquare]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[DottedSquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatDottedSquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[DottedSquare]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledSmallSquare]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledSmallSquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledSmallSquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledSmallSquare]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptySmallSquare]"]& )[
                    
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptySmallSquare]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptySmallSquare"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptySmallSquare]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledCircle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledCircle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledCircle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledCircle]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[GrayCircle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[GrayCircle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatGrayCircle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[GrayCircle]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptyCircle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptyCircle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptyCircle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptyCircle]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledSmallCircle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledSmallCircle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledSmallCircle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledSmallCircle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptySmallCircle]"]& )[
                    
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptySmallCircle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptySmallCircle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptySmallCircle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledDiamond]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledDiamond]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledDiamond"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledDiamond]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptyDiamond]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptyDiamond]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptyDiamond"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptyDiamond]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FilledUpTriangle]"]& )[
                    
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledUpTriangle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledUpTriangle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledUpTriangle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptyUpTriangle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptyUpTriangle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptyUpTriangle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptyUpTriangle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === 
                    "\[FilledDownTriangle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FilledDownTriangle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", 
                    "DingbatFilledDownTriangle"]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FilledDownTriangle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[EmptyDownTriangle]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[EmptyDownTriangle]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatEmptyDownTriangle"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[EmptyDownTriangle]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[WatchIcon]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[WatchIcon]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatWatch"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[WatchIcon]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[FivePointedStar]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[FivePointedStar]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatFilledStar"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[FivePointedStar]", Appearance -> "Suppressed", 
                    BaseStyle -> "NotebookToolbarButton", Evaluator -> 
                    "System", Method -> "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[HappySmiley]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[HappySmiley]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatHappySmiley"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[HappySmiley]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[NeutralSmiley]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[NeutralSmiley]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatNeutralSmiley"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[NeutralSmiley]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[SadSmiley]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[SadSmiley]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatSadSmiley"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[SadSmiley]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[LightBulb]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[LightBulb]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatLightBulb"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[LightBulb]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[Wolf]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[Wolf]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatWolf"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[Wolf]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Graphics[
                    Line[{{-1, 0}, {1, 0}}], BaseStyle -> 
                    "NotebookToolbarMenuDelimiter"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[ClubSuit]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[ClubSuit]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatClubSuit"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[ClubSuit]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[DiamondSuit]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[DiamondSuit]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatDiamondSuit"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[DiamondSuit]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[HeartSuit]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[HeartSuit]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatHeartSuit"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[HeartSuit]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"], 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> Framed[
                    "", BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    (And[Length[#] > 0, 
                    Apply[SameQ, #], Part[#, 1] === "\[SpadeSuit]"]& )[
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat]]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "\[SpadeSuit]", 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], 
                    Pane[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "DingbatSpadeSuit"]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}]}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited, Inherited,
                     FontColor -> GrayLevel[0.8]}}, 
                    ItemSize -> {{Full, Full, Fit, Full, Full}}, Alignment -> 
                    Left, Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}],
                     BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> FEPrivate`Set[
                    Toolbar`Private`mouseDownQ, False], "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], 
                    NotebookDelete[
                    EvaluationCell[]]; 
                    CurrentValue[
                    ToolbarCommon`Private`cellObjects, CellDingbat] = 
                    "\[SpadeSuit]", Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]}, Alignment -> Left, BaseStyle -> 
                    "NotebookToolbarText", ItemSize -> Full, Spacings -> 0], 
                    FrameMargins -> 2, ImageSize -> {
                    Scaled[1], 
                    UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
                    Automatic, ImageSizeAction -> "Scrollable", 
                    Scrollbars -> {False, Automatic}], Background -> 
                    GrayLevel[0.98], BaseStyle -> "NotebookToolbarText", 
                    FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
                    ImageSize -> {200, All}, RoundingRadius -> 3], {}, False, 
                    "System", 
                    Dynamic[Toolbar`Private`mouseClickListener$$], 
                    Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
                    Sequence[], 
                    Sequence[], "FreezeDynamics" -> True], Appearance -> 
                    "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                    Evaluator -> "System", Method -> "Preemptive"], 
                    DynamicModuleValues :> {}]}, 
                  Spacer[7], BaselinePosition -> Baseline], 
                 ImageMargins -> {{6, 7}, {6, 6}}], 
                Graphics[
                 Line[{{-1, 0}, {1, 0}}], ImageSize -> {Full, 3}, AspectRatio -> 
                 Full, ImagePadding -> {{0, 0}, {1, 1}}, 
                 PlotRange -> {{-1, 1}, {1.5, 1.5}}, BaseStyle -> {
                   GrayLevel[0.438], 
                   AbsoluteThickness[1], 
                   CapForm["Round"]}], 
                Pane[
                 Button[
                  DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                   EventHandler[
                    PaneSelector[{"Default" -> Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Cancel"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarText"}, FrameMargins -> {{7, 7}, {0, 0}}, 
                    FrameStyle -> GrayLevel[0.749], 
                    ImageSize -> {Automatic, 20}], "Hover" -> Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Cancel"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
                     FrameMargins -> {{7, 7}, {0, 0}}, 
                    ImageSize -> {Automatic, 20}], "Pressed" -> Framed[
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "Cancel"]], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarText"}, FrameMargins -> {{7, 7}, {0, 0}}, 
                    ImageSize -> {Automatic, 20}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True]}, 
                    PassEventsDown -> True], DynamicModuleValues :> {}], Do[
                    SetOptions[
                    Part[
                    ToolbarCommon`Private`cellObjects, 
                    ToolbarCommon`Private`i], 
                    DeleteDuplicatesBy[First][
                    Join[
                    Part[
                    ToolbarCommon`Private`initialOptions, 
                    ToolbarCommon`Private`i], 
                    Replace[
                    Options[
                    Part[
                    ToolbarCommon`Private`cellObjects, 
                    ToolbarCommon`Private`i]], 
                    Pattern[ToolbarCommon`Private`h, 
                    Blank[]][
                    Pattern[ToolbarCommon`Private`name, 
                    Blank[]], 
                    Pattern[ToolbarCommon`Private`val, 
                    Blank[]]] :> 
                    ToolbarCommon`Private`h[
                    ToolbarCommon`Private`name, Inherited], 1]]]], {
                    ToolbarCommon`Private`i, 
                    Length[ToolbarCommon`Private`cellObjects]}]; 
                  NotebookDelete[ToolbarCommon`Private`thisCell], Appearance -> 
                  "Suppressed", BaseStyle -> "NotebookToolbarButton", 
                  Evaluator -> "System", Method -> "Preemptive"], 
                 Alignment -> {Right, Center}, 
                 ImageMargins -> {{0, 7}, {0, 0}}, ImageSize -> Scaled[1]]}, 
               Alignment -> Left, BaseStyle -> "NotebookToolbarText", 
               ItemSize -> Full, Spacings -> 0], 
              FrameMargins -> {{0, 0}, {2, 2}}, ImageSize -> {
                Scaled[1], 309}, FrameMargins -> {{0, 0}, {2, 2}}, 
              AppearanceElements -> None, ImageSizeAction -> "Scrollable", 
              Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
            BaseStyle -> "NotebookToolbarText", ItemSize -> Full, Spacings -> 
            0], Background -> GrayLevel[0.115], BaseStyle -> 
           "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}}, 
           FrameStyle -> Directive[
             AbsoluteThickness[1], 
             GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
           ImageSize -> {243, All}, RoundingRadius -> 3], 
          Style[
           Framed[
            Dynamic[
             FEPrivate`FrontEndResource[
             "NotebookToolbarStrings", "CellAppearanceNoCell"]], Alignment -> 
            Center, ImageSize -> {243, 326}, Background -> Opacity[0.8, 
              GrayLevel[0.98]], FrameMargins -> 2, FrameStyle -> 
            GrayLevel[0.438], RoundingRadius -> 3, BaseStyle -> {
              Missing["KeyAbsent", "GhostText"]}], ShowContents -> 
           Dynamic[ToolbarCommon`Private`activeLayer === 2]]}, {1, 2}, 
         Dynamic[ToolbarCommon`Private`activeLayer], 
         Alignment -> {Center, Center}], 
        Initialization :> (ToolbarCommon`Private`nb = EvaluationNotebook[]; 
         ToolbarCommon`Private`thisCell = EvaluationCell[]; If[
           MatchQ[
            CurrentValue[ToolbarCommon`Private`nb, "SelectionType"], 
            Alternatives[None, "CellCaret"]], 
           ToolbarCommon`Private`activeLayer = 2, 
           SelectionMove[ToolbarCommon`Private`nb, All, Cell]]; 
         ToolbarCommon`Private`cellObjects = 
          SelectedCells[ToolbarCommon`Private`nb]; 
         ToolbarCommon`Private`initialOptions = 
          Map[Options, ToolbarCommon`Private`cellObjects]; 
         With[{ToolbarCommon`Private`norms$ = Replace[
              ReplaceAll[
               AbsoluteCurrentValue[
               ToolbarCommon`Private`cellObjects, CellFrame], {
               Alternatives[False, None] -> 0, True -> 1}], {
              Pattern[ToolbarCommon`Private`full, {{
                   Except[
                    Blank[List]], 
                   Except[
                    Blank[List]]}, {
                   Except[
                    Blank[List]], 
                   Except[
                    Blank[List]]}}] :> ToolbarCommon`Private`full, {
                 Pattern[ToolbarCommon`Private`a, {
                   Except[
                    Blank[List]], 
                   Except[
                    Blank[List]]}], 
                 Pattern[ToolbarCommon`Private`b, 
                  Except[
                   Blank[List]]]} :> {
                ToolbarCommon`Private`a, {
                 ToolbarCommon`Private`b, ToolbarCommon`Private`b}}, {
                 Pattern[ToolbarCommon`Private`a, 
                  Except[
                   Blank[List]]], 
                 Pattern[ToolbarCommon`Private`b, {
                   Except[
                    Blank[List]], 
                   Except[
                    Blank[List]]}]} :> {{
                 ToolbarCommon`Private`a, ToolbarCommon`Private`a}, 
                 ToolbarCommon`Private`b}, Pattern[ToolbarCommon`Private`x, 
                 Blank[]] :> {{
                 ToolbarCommon`Private`x, ToolbarCommon`Private`x}, {
                 ToolbarCommon`Private`x, ToolbarCommon`Private`x}}}, {1}]}, 
           If[Length[ToolbarCommon`Private`norms$] > 0, 
             ToolbarCommon`Private`frameL = If[
                Apply[SameQ, 
                 Part[ToolbarCommon`Private`norms$, All, 1, 1]], 
                Part[ToolbarCommon`Private`norms$, 1, 1, 1], 0]; 
             ToolbarCommon`Private`frameR = If[
                Apply[SameQ, 
                 Part[ToolbarCommon`Private`norms$, All, 1, 2]], 
                Part[ToolbarCommon`Private`norms$, 1, 1, 2], 0]; 
             ToolbarCommon`Private`frameB = If[
                Apply[SameQ, 
                 Part[ToolbarCommon`Private`norms$, All, 2, 1]], 
                Part[ToolbarCommon`Private`norms$, 1, 2, 1], 0]; 
             ToolbarCommon`Private`frameT = If[
                Apply[SameQ, 
                 Part[ToolbarCommon`Private`norms$, All, 2, 2]], 
                Part[ToolbarCommon`Private`norms$, 1, 2, 2], 0]; 
             ToolbarCommon`Private`frameAll = If[
                Apply[SameQ, 
                 Flatten[ToolbarCommon`Private`norms$]], 
                Part[ToolbarCommon`Private`norms$, 1, 1, 1], 0], 
             ToolbarCommon`Private`frameL = (
              ToolbarCommon`Private`frameR = (
               ToolbarCommon`Private`frameB = (
                ToolbarCommon`Private`frameT = (
                 ToolbarCommon`Private`frameAll = 0))))]; Do[CurrentValue[
               Part[
               ToolbarCommon`Private`cellObjects, ToolbarCommon`Private`i], 
               CellFrame] = 
             Part[ToolbarCommon`Private`norms$, ToolbarCommon`Private`i], {
             ToolbarCommon`Private`i, 1, 
              Length[ToolbarCommon`Private`cellObjects], 1}]]; 
         With[{ToolbarCommon`Private`norm$ = 
            AbsoluteCurrentValue[
             ToolbarCommon`Private`cellObjects, Background]}, 
           ToolbarCommon`Private`background = If[
             And[Length[ToolbarCommon`Private`norm$] > 0, 
              Apply[SameQ, ToolbarCommon`Private`norm$], 
              Or[
               ColorQ[
                Part[ToolbarCommon`Private`norm$, 1]], 
               Part[ToolbarCommon`Private`norm$, 1] === None]], 
             Part[ToolbarCommon`Private`norm$, 1], All]]; 
         With[{ToolbarCommon`Private`norm$ = 
            AbsoluteCurrentValue[
             ToolbarCommon`Private`cellObjects, CellDingbat]}, 
           ToolbarCommon`Private`dingbat = If[
             And[Length[ToolbarCommon`Private`norm$] > 0, 
              Apply[SameQ, ToolbarCommon`Private`norm$]], 
             Part[ToolbarCommon`Private`norm$, 1], All]]; 
         With[{ToolbarCommon`Private`norm$ = 
            AbsoluteCurrentValue[
             ToolbarCommon`Private`cellObjects, CellFrameColor]}, 
           ToolbarCommon`Private`fColor = If[
             And[Length[ToolbarCommon`Private`norm$] > 0, 
              Apply[SameQ, ToolbarCommon`Private`norm$], 
              Or[
               ColorQ[
                Part[ToolbarCommon`Private`norm$, 1]], 
               Part[ToolbarCommon`Private`norm$, 1] === None]], 
             Part[ToolbarCommon`Private`norm$, 1], All]]; Null), 
        DynamicModuleValues :> {}], {Magnification -> Dynamic[
          
          CurrentValue[$FrontEndSession, {
           PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
            "Magnification"}, 
           FEPrivate`Switch[
           FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
            Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[
                  FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[
               EvaluationNotebook[], WindowToolbars]}]], Delimiter, Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, WindowToolbars]]]], 
             
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`SameQ[
                 
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "OpenMinimized"}], True]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "OpenMinimized"}] = Not[
             TrueQ[
              
              AbsoluteCurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar",
                 "OpenMinimized"}]]]), Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`Not[
                 FEPrivate`SameQ[
                  
                  FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "ShowSectionTitles"}] = 
           AbsoluteCurrentValue[$FrontEnd, {
              PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
               "ShowSectionTitles"}] === False)}}, False, "System", 
       Dynamic[Toolbar`Private`mouseClickListener$$], 
       Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
       Sequence[], 
       Sequence[], "FreezeDynamics" -> True],
     Evaluator->"System",
     Method->"Preemptive"],
    DynamicModuleValues:>{}],
   DynamicBox[
    ToBoxes[
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellDecorations"], 
     StandardForm]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellDecorations"]], 
   "Tooltip"]& ],

"FormattedControlCellStyle" -> TagBox[
  TooltipBox[
   DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
    ButtonBox[
     DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
      TagBox[
       OverlayBox[{
        PaneSelectorBox[{"Default"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False], "Hover"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False], "Pressed"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False]}, Dynamic[
          Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
           And[Toolbar`Private`mouseDownQ$$, 
            CurrentValue["MouseOver"]], "Pressed", 
           CurrentValue["MouseOver"], "Hover", True, "Default"]],
         ImageSize->Automatic], 
        FrameBox[
         TagBox[GridBox[{
            {
             
             DynamicModuleBox[{Toolbar`Private`savedx$$, 
              Toolbar`Private`toolbarCell$$}, 
              PaneSelectorBox[{1->
               TagBox[GridBox[{
                  {
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "PlusSmallIcon"],
                    ImageSizeCache->{12., {3.9000000000000004`, 11.1}}], 
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "InsertCell"], StandardForm],
                    
                    ImageSizeCache->{
                    61.24400335550308, {0.15576172212604433`, 8.544}}]}
                 },
                 AutoDelete->False,
                 BaselinePosition->Baseline,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"], 2->
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "MultipleCellsSelected"], 
                 StandardForm]], 3->
               
               DynamicModuleBox[{Toolbar`Private`savedExpr$$, 
                Toolbar`Private`toolbarCell$$}, 
                PaneSelectorBox[{True->
                 
                 DynamicBox[ToBoxes[
                  Toolbar`Private`savedExpr$$, StandardForm]], False->
                 DynamicBox[ToBoxes[
                   FEPrivate`Set[Toolbar`Private`savedExpr$$, 
                    RawBoxes[
                    FEPrivate`If[FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "CellStyleName"] === $Failed, 
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SelectionNoCellStyle"], 
                    FEPrivate`TruncateStringToWidth[
                    FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "CellStyleName"], "", 
                    115]]]], StandardForm]]}, Dynamic[
                  TrueQ[
                   CurrentValue[
                   Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                    False]]],
                 BaselinePosition->Baseline,
                 FrameMargins->None,
                 ImageSize->Automatic],
                DynamicModuleValues:>{},
                Initialization:>(Toolbar`Private`savedExpr$$ = FE`Evaluate[
                    RawBoxes[
                    FEPrivate`If[FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "CellStyleName"] === $Failed, 
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SelectionNoCellStyle"], 
                    FEPrivate`TruncateStringToWidth[
                    FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "CellStyleName"], "", 
                    115]]]]; 
                 Toolbar`Private`toolbarCell$$ = 
                  CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]),
                UnsavedVariables:>{Toolbar`Private`savedExpr$$}]}, Dynamic[
                FEPrivate`If[
                 TrueQ[
                  CurrentValue[
                  Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                   False]], Toolbar`Private`savedx$$, 
                 FEPrivate`Set[Toolbar`Private`savedx$$, 
                  FEPrivate`Switch[
                   FrontEnd`CurrentValue[
                    FrontEnd`EvaluationNotebook[], "SelectionType"], 
                   "CellCaret", 1, None, 1, "CellRange", 2, 
                   Blank[], 3]]]],
               Alignment->{Left, Center},
               ImageSize->Automatic],
              DynamicModuleValues:>{},
              Initialization:>(Toolbar`Private`savedx$$ = FE`Evaluate[
                  FEPrivate`Switch[
                   FrontEnd`CurrentValue[
                    FrontEnd`EvaluationNotebook[], "SelectionType"], 
                   "CellCaret", 1, None, 1, "CellRange", 2, 
                   Blank[], 3]]; 
               Toolbar`Private`toolbarCell$$ = 
                CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "ToolbarCell", 
                   EvaluationNotebook[]}]),
              UnsavedVariables:>{Toolbar`Private`savedx$$}], 
             GraphicsBox[LineBox[{{-1, 0}, {0, -1}, {1, 0}}],
              AspectRatio->Full,
              BaseStyle->{
                AbsoluteThickness[1.5], 
                JoinForm["Round"], 
                CapForm["Round"], 
                GrayLevel[0.5]},
              BaselinePosition->Center,
              ImagePadding->2,
              ImageSize->{11, 7.699999999999999}]}
           },
           AutoDelete->False,
           BaselinePosition->Center,
           
           GridBoxAlignment->{
            "Columns" -> {Left, Right}, "Rows" -> {{Center}}},
           GridBoxItemSize->{"Columns" -> {Fit, Automatic}, "Rows" -> {{25}}}],
          "Grid"],
         BaseStyle->{"NotebookToolbarButtonFrame", "NotebookToolbarText"},
         FrameMargins->{{4, 2}, {0, 0}},
         ImageSize->{150, 25},
         StripOnInput->False]}, {1, 2}, 1,
        BaseStyle->"NotebookToolbarButtonOverlay"],
       EventHandlerTag[{
        "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
         "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
         PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
         True}]],
      DynamicModuleValues:>{}],
     Appearance->FEPrivate`FrontEndResource[
      "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
     BaseStyle->"NotebookToolbarButton",
     ButtonFunction:>ToolbarSupport`AttachPopup[
       DynamicModule[{
        ToolbarCommon`Private`selection, ToolbarCommon`Private`preview, 
         ToolbarCommon`Private`styleList, ToolbarCommon`Private`styleDefs, 
         ToolbarCommon`Private`hasSelectedCellQ, 
         ToolbarCommon`Private`cellStyle, ToolbarCommon`Private`nb}, 
        PaneSelector[{True -> Framed[
            Pane[
             Column[{
               Dynamic[
                Column[
                 Map[
                  Function[{ToolbarCommon`Private`style$}, 
                   Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === 
                    ToolbarCommon`Private`style$]]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], ToolbarCommon`Private`style$}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                    "MouseEntered" :> (ToolbarCommon`Private`selection = 
                    ToolbarCommon`Private`style$)}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; If[
                    Not[ToolbarCommon`Private`hasSelectedCellQ], 
                    NotebookWrite[ToolbarCommon`Private`nb, 
                    Cell[
                    Switch[
                    Lookup[
                    
                    AbsoluteCurrentValue[{
                    StyleDefinitions, ToolbarCommon`Private`style$}], 
                    FormatType], 
                    Alternatives[InputForm, StandardForm], BoxData, 
                    Alternatives[TextForm, TraditionalForm], Identity, 
                    Blank[], Identity][""], 
                    (If[
                    MatchQ[#, {ToolbarCommon`Private`style$, 
                    BlankNullSequence[]}], 
                    Apply[Sequence, #], ToolbarCommon`Private`style$]& )[
                    AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
                    SelectionMove[
                    ToolbarCommon`Private`nb, Before, CellContents], 
                    SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`SelectionSetStyle[
                    ToolbarCommon`Private`nb, ToolbarCommon`Private`style$]]],
                     Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]], ToolbarCommon`Private`styleList]], 
                DestroyAfterEvaluation -> True]}, Alignment -> Left, 
              BaseStyle -> "NotebookToolbarText", ItemSize -> Full, Spacings -> 
              0], FrameMargins -> 2, ImageSize -> {
               Scaled[1], 
               UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
             Automatic, ImageSizeAction -> "Scrollable", 
             Scrollbars -> {False, Automatic}], Background -> GrayLevel[0.115],
             BaseStyle -> "NotebookToolbarText", 
            FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> Directive[
              AbsoluteThickness[1], 
              GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
            ImageSize -> {200, All}, RoundingRadius -> 3], False -> Framed[
            Column[{
              Framed[
               Dynamic[
                FEPrivate`FrontEndResource[
                "NotebookToolbarStrings", "CellStyle"], 
                DestroyAfterEvaluation -> True], BaseStyle -> 
               "NotebookToolbarMenuHeader"], 
              Pane[
               Column[{
                 Dynamic[
                  Column[
                   Map[
                    Function[{ToolbarCommon`Private`style$}, 
                    Button[
                    DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                    EventHandler[
                    Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === 
                    ToolbarCommon`Private`style$]]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], ToolbarCommon`Private`style$}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                    "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                    "MouseEntered" :> (ToolbarCommon`Private`selection = 
                    ToolbarCommon`Private`style$)}, PassEventsDown -> True], 
                    DynamicModuleValues :> {}], NotebookDelete[
                    EvaluationCell[]]; If[
                    Not[ToolbarCommon`Private`hasSelectedCellQ], 
                    NotebookWrite[ToolbarCommon`Private`nb, 
                    Cell[
                    Switch[
                    Lookup[
                    
                    AbsoluteCurrentValue[{
                    StyleDefinitions, ToolbarCommon`Private`style$}], 
                    FormatType], 
                    Alternatives[InputForm, StandardForm], BoxData, 
                    Alternatives[TextForm, TraditionalForm], Identity, 
                    Blank[], Identity][""], 
                    (If[
                    MatchQ[#, {ToolbarCommon`Private`style$, 
                    BlankNullSequence[]}], 
                    Apply[Sequence, #], ToolbarCommon`Private`style$]& )[
                    AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
                    SelectionMove[
                    ToolbarCommon`Private`nb, Before, CellContents], 
                    SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
                    MathLink`CallFrontEnd[
                    FrontEnd`SelectionSetStyle[
                    ToolbarCommon`Private`nb, ToolbarCommon`Private`style$]]],
                     Appearance -> "Suppressed", BaseStyle -> 
                    "NotebookToolbarButton", Evaluator -> "System", Method -> 
                    "Preemptive"]], ToolbarCommon`Private`styleList]], 
                  DestroyAfterEvaluation -> True]}, Alignment -> Left, 
                BaseStyle -> "NotebookToolbarText", ItemSize -> Full, 
                Spacings -> 0], FrameMargins -> 2, ImageSize -> {
                 Scaled[1], 
                 UpTo[250]}, AppearanceElements -> None, FrameMargins -> 
               Automatic, ImageSizeAction -> "Scrollable", 
               Scrollbars -> {False, Automatic}]}, Alignment -> Left, 
             BaseStyle -> "NotebookToolbarText", ItemSize -> Full, Spacings -> 
             0], Background -> GrayLevel[0.115], BaseStyle -> 
            "NotebookToolbarText", FrameMargins -> {{0, 0}, {-1, -1}}, 
            FrameStyle -> Directive[
              AbsoluteThickness[1], 
              GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
            ImageSize -> {200, All}, RoundingRadius -> 3]}, 
         Dynamic[
          Not[ToolbarCommon`Private`hasSelectedCellQ]], ImageSize -> 
         Automatic], Initialization :> (ToolbarCommon`Private`styleList = Part[
            FE`Evaluate[
             FEPrivate`GetPopupList[
              EvaluationNotebook[], "MenuListStyles"]], 
            Span[2, All], 1]; ToolbarCommon`Private`nb = EvaluationNotebook[]; 
         ToolbarCommon`Private`hasSelectedCellQ = Not[
            MemberQ[{None, "CellCaret"}, 
             CurrentValue[ToolbarCommon`Private`nb, "SelectionType"]]]; 
         ToolbarCommon`Private`cellStyle = CurrentValue[
            NotebookSelection[ToolbarCommon`Private`nb], "CellStyleName"]; 
         ToolbarCommon`Private`styleDefs = 
          CurrentValue[ToolbarCommon`Private`nb, StyleDefinitions]; 
         ToolbarCommon`Private`preview[
            Pattern[ToolbarCommon`Private`x$, 
             Blank[]]] := (
           ToolbarCommon`Private`preview[ToolbarCommon`Private`x$] = Rasterize[
             Notebook[{
               Cell[
               "", CellMargins -> 0, CellOpen -> False, 
                CellElementSpacings -> {"ClosedCellHeight" -> 0}], 
               Cell[
               "AaBbCc", ToolbarCommon`Private`x$, 
                CounterAssignments -> {{ToolbarCommon`Private`x$, 0}}, 
                ShowCellBracket -> True, 
                CellMargins -> {{Inherited, 2}, {Inherited, Inherited}}], 
               Cell[
               "", CellMargins -> 0, CellOpen -> False, 
                CellElementSpacings -> {"ClosedCellHeight" -> 0}]}, 
              WindowSize -> {300, Automatic}, StyleDefinitions -> 
              ToolbarCommon`Private`styleDefs, Background->GrayLevel[0.07]], Background->GrayLevel[0.07]]); 
         ToolbarCommon`Private`selection = 
          First[ToolbarCommon`Private`styleList]; AttachCell[
           EvaluationCell[], 
           Cell[
            BoxData[
             ToBoxes[
              DynamicModule[{}, 
               Framed[
                Dynamic[
                 Pane[
                  ToolbarCommon`Private`preview[
                  ToolbarCommon`Private`selection]], SynchronousUpdating -> 
                 False, TrackedSymbols :> {ToolbarCommon`Private`selection}, 
                 CachedValue -> PaneBox["", ImageSize -> {Automatic, 100}]], 
                Background -> GrayLevel[0.115], FrameMargins -> None, 
                FrameStyle -> Directive[
                  AbsoluteThickness[1], 
                  GrayLevel[0.8]], ImageSize -> 300, RoundingRadius -> 3], 
               InheritScope -> True]]]], 
           If[AbsoluteCurrentValue[
              EvaluationNotebook[], {WindowSize, 1}] > 600, {Right, Top}, {
            Left, Bottom}], 0, {Left, Top}]), DynamicModuleValues :> {}], {
       Magnification -> Dynamic[
          
          CurrentValue[$FrontEndSession, {
           PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
            "Magnification"}, 
           FEPrivate`Switch[
           FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
            Blank[], 0.75]]], "ToolbarMenu" -> {Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[
                  FrontEnd`EvaluationNotebook[], WindowToolbars]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShow"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], CurrentValue[
              EvaluationNotebook[], WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[
               EvaluationNotebook[], WindowToolbars]}]], Delimiter, Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                (FEPrivate`Or[
                 FEPrivate`MemberQ[#, "MultipurposeBar"], 
                 FEPrivate`SameQ[#, "MultipurposeBar"]]& )[
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, WindowToolbars]]]], 
             
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuShowAll"]]}] :> (If[
            MemberQ[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            DeleteCases[#, "MultipurposeBar"], 
            CurrentValue[$FrontEnd, WindowToolbars] = 
            Append[#, "MultipurposeBar"]]& )[
            Flatten[{
              AbsoluteCurrentValue[$FrontEnd, WindowToolbars]}]], Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`SameQ[
                 
                 FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "OpenMinimized"}], True]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuMinimize"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "OpenMinimized"}] = Not[
             TrueQ[
              
              AbsoluteCurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar",
                 "OpenMinimized"}]]]), Row[{
             Style[
              Graphics[
               Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
               BaselinePosition -> (Center -> Center), BaseStyle -> {
                 AbsoluteThickness[1.5], 
                 GrayLevel[0.35], 
                 JoinForm["Round"], 
                 CapForm["Round"]}, AspectRatio -> Automatic, 
               ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
              ShowContents -> Dynamic[
                FEPrivate`Not[
                 FEPrivate`SameQ[
                  
                  FrontEnd`AbsoluteCurrentValue[$FrontEnd, {
                   PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ShowSectionTitles"}], False]]]], 
             Spacer[3], 
             Dynamic[
              FEPrivate`FrontEndResource[
              "NotebookToolbarStrings", "NBToolbarMenuLabels"]]}] :> (
           CurrentValue[$FrontEnd, {
             PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
              "ShowSectionTitles"}] = 
           AbsoluteCurrentValue[$FrontEnd, {
              PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
               "ShowSectionTitles"}] === False)}}, False, "System", 
       Dynamic[Toolbar`Private`mouseClickListener$$], 
       Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
       Sequence[], 
       Sequence[], "FreezeDynamics" -> True],
     Evaluator->"System",
     Method->"Preemptive"],
    DynamicModuleValues:>{}],
   DynamicBox[
    (FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[#, $Failed], 
      FEPrivate`SameQ[
       FEPrivate`TruncateStringToWidth[#, "", 115], #]], 
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellStyleTooltip"], 
     RowBox[{
       FEPrivate`FrontEndResource[
       "NotebookToolbarStrings", "CellStyleTooltip"], "  ", "(", #, ")"}]]& )[
    
     FrontEnd`CurrentValue[
      FrontEnd`NotebookSelection[
       FrontEnd`EvaluationNotebook[]], "CellStyleName"]]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    RawBoxes[
     (FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[#, $Failed], 
       FEPrivate`SameQ[
        FEPrivate`TruncateStringToWidth[#, "", 115], #]], 
      FEPrivate`FrontEndResource[
      "NotebookToolbarStrings", "CellStyleTooltip"], 
      RowBox[{
        FEPrivate`FrontEndResource[
        "NotebookToolbarStrings", "CellStyleTooltip"], "  ", "(", #, ")"}]]& )[
      FrontEnd`CurrentValue[
       FrontEnd`NotebookSelection[
        FrontEnd`EvaluationNotebook[]], "CellStyleName"]]]], "Tooltip"]& ],

"FormattedControlComment" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "CommentIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "CommentIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "CommentIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>FE`toggleComment[],
    Evaluator->"System",
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource["NotebookToolbarStrings", "ToggleComment"], 
       StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "CommentKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource["NotebookToolbarStrings", "ToggleComment"],
         StandardForm]], "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "CommentKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlExtendSelection" -> TagBox[
  TooltipBox[
   ButtonBox[
    DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
     TagBox[
      PaneSelectorBox[{"Default"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "ExtendSelectionIcon"],
         ImageSizeCache->{27., {10.658691344666295`, 16.341308655333705`}}],
        BaseStyle->{
         "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
        StripOnInput->False], "Hover"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "ExtendSelectionIconHover"]],
        BaseStyle->{"NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
        
        StripOnInput->False], "Pressed"->
       FrameBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "NotebookToolbarExpressions", "ExtendSelectionIconHover"]],
        BaseStyle->{
         "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
        StripOnInput->False]}, Dynamic[
        Which[
         And[Toolbar`Private`mouseDownQ$$, 
          CurrentValue["MouseOver"]], "Pressed", 
         CurrentValue["MouseOver"], "Hover", True, "Default"]],
       ImageSize->Automatic],
      EventHandlerTag[{
       "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
        "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
        PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
        True}]],
     DynamicModuleValues:>{}],
    Appearance->FEPrivate`FrontEndResource[
     "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
    BaseStyle->"NotebookToolbarButton",
    ButtonFunction:>FrontEnd`FrontEndToken["ExpandSelection"],
    Evaluator->None,
    Method->"Preemptive"],
   RowBox[{
     DynamicBox[
      ToBoxes[
       FEPrivate`FrontEndResource[
       "NotebookToolbarStrings", "ExtendSelection"], StandardForm]], 
     "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
     StyleBox[
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarPlatformStrings", "ExtendKey"], StandardForm]], 
      FontColor -> GrayLevel[0.8], StripOnInput -> False]}],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   RawBoxes[
    RowBox[{
      DynamicBox[
       ToBoxes[
        FEPrivate`FrontEndResource[
        "NotebookToolbarStrings", "ExtendSelection"], StandardForm]], 
      "\[InvisibleSpace]", "\"   \"", "\[InvisibleSpace]", 
      StyleBox[
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource[
         "NotebookToolbarPlatformStrings", "ExtendKey"], StandardForm]], 
       FontColor -> GrayLevel[0.8], StripOnInput -> False]}]], 
   "Tooltip"]& ],

"FormattedControlCellStylePackage" -> TagBox[
  TooltipBox[
   DynamicModuleBox[{Toolbar`Private`mouseClickListener$$ = False, 
    Toolbar`Private`timeWhenThisMenuLastClosed$$ = 0}, 
    ButtonBox[
     DynamicModuleBox[{Toolbar`Private`mouseDownQ$$ = False}, 
      TagBox[
       OverlayBox[{
        PaneSelectorBox[{"Default"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFrameDefault", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False], "Hover"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFrameHover", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False], "Pressed"->
         FrameBox["\<\"\"\>",
          
          BaseStyle->{
           "NotebookToolbarButtonFramePressed", "NotebookToolbarText"},
          FrameMargins->{{4, 2}, {0, 0}},
          FrameStyle->GrayLevel[0.65],
          ImageSize->{150, 25},
          StripOnInput->False]}, Dynamic[
          Which[Toolbar`Private`mouseClickListener$$, "Pressed", 
           And[Toolbar`Private`mouseDownQ$$, 
            CurrentValue["MouseOver"]], "Pressed", 
           CurrentValue["MouseOver"], "Hover", True, "Default"]],
         ImageSize->Automatic], 
        FrameBox[
         TagBox[GridBox[{
            {
             
             DynamicModuleBox[{Toolbar`Private`savedx$$, 
              Toolbar`Private`toolbarCell$$}, 
              PaneSelectorBox[{1->
               TagBox[GridBox[{
                  {
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "NotebookToolbarExpressions", "PlusSmallIcon"],
                    ImageSizeCache->{12., {3.9000000000000004`, 11.1}}], 
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "InsertCell"], StandardForm],
                    
                    ImageSizeCache->{
                    61.24400335550308, {0.15576172212604433`, 8.544}}]}
                 },
                 AutoDelete->False,
                 BaselinePosition->Baseline,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"], 2->
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "NotebookToolbarStrings", "MultipleCellsSelected"], 
                 StandardForm]], 3->
               
               DynamicModuleBox[{Toolbar`Private`savedExpr$$, 
                Toolbar`Private`toolbarCell$$}, 
                PaneSelectorBox[{True->
                 
                 DynamicBox[ToBoxes[
                  Toolbar`Private`savedExpr$$, StandardForm]], False->
                 DynamicBox[ToBoxes[
                   FEPrivate`Set[Toolbar`Private`savedExpr$$, 
                    RawBoxes[
                    FEPrivate`If[FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "CellStyleName"] === $Failed, 
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SelectionNoCellStyle"], 
                    FEPrivate`TruncateStringToWidth[
                    FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "CellStyleName"], "", 
                    115]]]], StandardForm]]}, Dynamic[
                  TrueQ[
                   CurrentValue[
                   Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                    False]]],
                 BaselinePosition->Baseline,
                 FrameMargins->None,
                 ImageSize->Automatic],
                DynamicModuleValues:>{},
                Initialization:>(Toolbar`Private`savedExpr$$ = FE`Evaluate[
                    RawBoxes[
                    FEPrivate`If[FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], 
                    "CellStyleName"] === $Failed, 
                    FEPrivate`FrontEndResource[
                    "NotebookToolbarStrings", "SelectionNoCellStyle"], 
                    FEPrivate`TruncateStringToWidth[
                    FrontEnd`CurrentValue[
                    FrontEnd`NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], "CellStyleName"], "", 
                    115]]]]; 
                 Toolbar`Private`toolbarCell$$ = 
                  CurrentValue[$FrontEndSession, {
                    PrivateFrontEndOptions, "InterfaceSettings", 
                    "NotebookToolbar", "ToolbarCell", 
                    EvaluationNotebook[]}]),
                UnsavedVariables:>{Toolbar`Private`savedExpr$$}]}, Dynamic[
                FEPrivate`If[
                 TrueQ[
                  CurrentValue[
                  Toolbar`Private`toolbarCell$$, {TaggingRules, "FrozenQ"}, 
                   False]], Toolbar`Private`savedx$$, 
                 FEPrivate`Set[Toolbar`Private`savedx$$, 
                  FEPrivate`Switch[
                   FrontEnd`CurrentValue[
                    FrontEnd`EvaluationNotebook[], "SelectionType"], 
                   "CellCaret", 1, None, 1, "CellRange", 2, 
                   Blank[], 3]]]],
               Alignment->{Left, Center},
               ImageSize->Automatic],
              DynamicModuleValues:>{},
              Initialization:>(Toolbar`Private`savedx$$ = FE`Evaluate[
                  FEPrivate`Switch[
                   FrontEnd`CurrentValue[
                    FrontEnd`EvaluationNotebook[], "SelectionType"], 
                   "CellCaret", 1, None, 1, "CellRange", 2, 
                   Blank[], 3]]; 
               Toolbar`Private`toolbarCell$$ = 
                CurrentValue[$FrontEndSession, {
                  PrivateFrontEndOptions, "InterfaceSettings", 
                   "NotebookToolbar", "ToolbarCell", 
                   EvaluationNotebook[]}]),
              UnsavedVariables:>{Toolbar`Private`savedx$$}], 
             GraphicsBox[LineBox[{{-1, 0}, {0, -1}, {1, 0}}],
              AspectRatio->Full,
              BaseStyle->{
                AbsoluteThickness[1.5], 
                JoinForm["Round"], 
                CapForm["Round"], 
                GrayLevel[0.5]},
              BaselinePosition->Center,
              ImagePadding->2,
              ImageSize->{11, 7.699999999999999}]}
           },
           AutoDelete->False,
           BaselinePosition->Center,
           
           GridBoxAlignment->{
            "Columns" -> {Left, Right}, "Rows" -> {{Center}}},
           GridBoxItemSize->{"Columns" -> {Fit, Automatic}, "Rows" -> {{25}}}],
          "Grid"],
         BaseStyle->{"NotebookToolbarButtonFrame", "NotebookToolbarText"},
         FrameMargins->{{4, 2}, {0, 0}},
         ImageSize->{150, 25},
         StripOnInput->False]}, {1, 2}, 1,
        BaseStyle->"NotebookToolbarButtonOverlay"],
       EventHandlerTag[{
        "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, False], 
         "MouseDown" :> FEPrivate`Set[Toolbar`Private`mouseDownQ$$, True], 
         PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
         True}]],
      DynamicModuleValues:>{}],
     Appearance->FEPrivate`FrontEndResource[
      "FEExpressions", "SuppressMouseDownNinePatchAppearance"],
     BaseStyle->"NotebookToolbarButton",
     ButtonFunction:>ToolbarSupport`AttachPopup[
       DynamicModule[{
        ToolbarCommon`Private`selection, ToolbarCommon`Private`preview, 
         ToolbarCommon`Private`styleList, ToolbarCommon`Private`styleDefs, 
         ToolbarCommon`Private`hasSelectedCellQ, 
         ToolbarCommon`Private`cellStyle, ToolbarCommon`Private`nb}, 
        Framed[
         Pane[
          Column[{
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               Overlay[{
                 
                 PaneSelector[{
                  "Default" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                  Dynamic[
                   Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                  ImageSize -> Automatic], 
                 Framed[
                  Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === "Code"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "Code"}}, 
                   ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                   ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                   Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                  BaseStyle -> {
                   "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                "NotebookToolbarButtonOverlay"], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                "MouseEntered" :> (ToolbarCommon`Private`selection = "Code")},
                PassEventsDown -> True], DynamicModuleValues :> {}], 
             NotebookDelete[
               EvaluationCell[]]; If[
               Not[ToolbarCommon`Private`hasSelectedCellQ], 
               NotebookWrite[ToolbarCommon`Private`nb, 
                 Cell[
                  Switch[
                   Lookup[
                    AbsoluteCurrentValue[{StyleDefinitions, "Code"}], 
                    FormatType], 
                   Alternatives[InputForm, StandardForm], BoxData, 
                   Alternatives[TextForm, TraditionalForm], Identity, 
                   Blank[], Identity][""], 
                  (If[
                   MatchQ[#, {"Code", 
                    BlankNullSequence[]}], 
                   Apply[Sequence, #], "Code"]& )[
                   AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
               SelectionMove[ToolbarCommon`Private`nb, Before, CellContents], 
               SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
               MathLink`CallFrontEnd[
                 FrontEnd`SelectionSetStyle[
                 ToolbarCommon`Private`nb, "Code"]]], Appearance -> 
             "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
             "System", Method -> "Preemptive"], 
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               Overlay[{
                 
                 PaneSelector[{
                  "Default" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                  Dynamic[
                   Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                  ImageSize -> Automatic], 
                 Framed[
                  Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === "Text"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "Text"}}, 
                   ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                   ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                   Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                  BaseStyle -> {
                   "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                "NotebookToolbarButtonOverlay"], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                "MouseEntered" :> (ToolbarCommon`Private`selection = "Text")},
                PassEventsDown -> True], DynamicModuleValues :> {}], 
             NotebookDelete[
               EvaluationCell[]]; If[
               Not[ToolbarCommon`Private`hasSelectedCellQ], 
               NotebookWrite[ToolbarCommon`Private`nb, 
                 Cell[
                  Switch[
                   Lookup[
                    AbsoluteCurrentValue[{StyleDefinitions, "Text"}], 
                    FormatType], 
                   Alternatives[InputForm, StandardForm], BoxData, 
                   Alternatives[TextForm, TraditionalForm], Identity, 
                   Blank[], Identity][""], 
                  (If[
                   MatchQ[#, {"Text", 
                    BlankNullSequence[]}], 
                   Apply[Sequence, #], "Text"]& )[
                   AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
               SelectionMove[ToolbarCommon`Private`nb, Before, CellContents], 
               SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
               MathLink`CallFrontEnd[
                 FrontEnd`SelectionSetStyle[
                 ToolbarCommon`Private`nb, "Text"]]], Appearance -> 
             "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
             "System", Method -> "Preemptive"], 
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               Overlay[{
                 
                 PaneSelector[{
                  "Default" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                  Dynamic[
                   Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                  ImageSize -> Automatic], 
                 Framed[
                  Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === "Section"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "Section"}}, 
                   ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                   ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                   Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                  BaseStyle -> {
                   "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                "NotebookToolbarButtonOverlay"], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                "MouseEntered" :> (ToolbarCommon`Private`selection = 
                 "Section")}, PassEventsDown -> True], 
              DynamicModuleValues :> {}], NotebookDelete[
               EvaluationCell[]]; If[
               Not[ToolbarCommon`Private`hasSelectedCellQ], 
               NotebookWrite[ToolbarCommon`Private`nb, 
                 Cell[
                  Switch[
                   Lookup[
                    AbsoluteCurrentValue[{StyleDefinitions, "Section"}], 
                    FormatType], 
                   Alternatives[InputForm, StandardForm], BoxData, 
                   Alternatives[TextForm, TraditionalForm], Identity, 
                   Blank[], Identity][""], 
                  (If[
                   MatchQ[#, {"Section", 
                    BlankNullSequence[]}], 
                   Apply[Sequence, #], "Section"]& )[
                   AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
               SelectionMove[ToolbarCommon`Private`nb, Before, CellContents], 
               SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
               MathLink`CallFrontEnd[
                 FrontEnd`SelectionSetStyle[
                 ToolbarCommon`Private`nb, "Section"]]], Appearance -> 
             "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
             "System", Method -> "Preemptive"], 
            Button[
             DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
              EventHandler[
               Overlay[{
                 
                 PaneSelector[{
                  "Default" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                   Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                  Dynamic[
                   Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                  ImageSize -> Automatic], 
                 Framed[
                  Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === "Input"]]], {{
                    18, Automatic}, {18, 18}}, 
                    BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], "Input"}}, 
                   ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                   ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                   Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                  BaseStyle -> {
                   "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                "NotebookToolbarButtonOverlay"], {
               "MouseUp" :> FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                "MouseDown" :> 
                FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                "MouseEntered" :> (ToolbarCommon`Private`selection = 
                 "Input")}, PassEventsDown -> True], 
              DynamicModuleValues :> {}], NotebookDelete[
               EvaluationCell[]]; If[
               Not[ToolbarCommon`Private`hasSelectedCellQ], 
               NotebookWrite[ToolbarCommon`Private`nb, 
                 Cell[
                  Switch[
                   Lookup[
                    AbsoluteCurrentValue[{StyleDefinitions, "Input"}], 
                    FormatType], 
                   Alternatives[InputForm, StandardForm], BoxData, 
                   Alternatives[TextForm, TraditionalForm], Identity, 
                   Blank[], Identity][""], 
                  (If[
                   MatchQ[#, {"Input", 
                    BlankNullSequence[]}], 
                   Apply[Sequence, #], "Input"]& )[
                   AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
               SelectionMove[ToolbarCommon`Private`nb, Before, CellContents], 
               SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
               MathLink`CallFrontEnd[
                 FrontEnd`SelectionSetStyle[
                 ToolbarCommon`Private`nb, "Input"]]], Appearance -> 
             "Suppressed", BaseStyle -> "NotebookToolbarButton", Evaluator -> 
             "System", Method -> "Preemptive"], 
            Framed[
             Style[
              Dynamic[
               FEPrivate`FrontEndResource[
               "NotebookToolbarStrings", "CellStyleAll"]], 
              FontVariations -> {"CapsType" -> "AllCaps"}], BaseStyle -> 
             "NotebookToolbarMenuHeader", RoundingRadius -> 0], 
            Dynamic[
             Column[
              Map[
               Function[{ToolbarCommon`Private`style$}, 
                Button[
                 DynamicModule[{Toolbar`Private`mouseDownQ = False}, 
                  EventHandler[
                   Overlay[{
                    
                    PaneSelector[{
                    "Default" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameDefault", 
                    "NotebookToolbarMenuItem"}], "Hover" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrameHover", 
                    "NotebookToolbarMenuItem"}], "Pressed" -> 
                    Framed["", 
                    BaseStyle -> {
                    "NotebookToolbarButtonFramePressed", 
                    "NotebookToolbarMenuItem"}]}, 
                    Dynamic[
                    Which[
                    And[Toolbar`Private`mouseDownQ, 
                    CurrentValue["MouseOver"]], "Pressed", 
                    CurrentValue["MouseOver"], "Hover", True, "Default"]], 
                    ImageSize -> Automatic], 
                    Framed[
                    Grid[{{
                    Pane[
                    Style[
                    Graphics[
                    Line[{{-0.4, 0.5}, {0, 0}, {0.8, 1}}], 
                    BaselinePosition -> (Center -> Center), BaseStyle -> {
                    AbsoluteThickness[1.5], 
                    GrayLevel[0.35], 
                    JoinForm["Round"], 
                    CapForm["Round"]}, AspectRatio -> Automatic, 
                    ImageSize -> {14, 14}, ImagePadding -> {{2, 2}, {2, 2}}], 
                    ShowContents -> Dynamic[
                    And[
                    ToolbarCommon`Private`hasSelectedCellQ, 
                    ToolbarCommon`Private`cellStyle === 
                    ToolbarCommon`Private`style$]]], {{18, Automatic}, {18, 
                    18}}, BaselinePosition -> (Bottom -> Bottom), 
                    Alignment -> {Center, Center}], 
                    Graphics[
                    ImageSize -> {5, 18}, BaseStyle -> 
                    "NotebookToolbarSpacer"], ToolbarCommon`Private`style$}}, 
                    ItemStyle -> {{Inherited, Inherited, Inherited}}, 
                    ItemSize -> {{Full, Full, Fit}}, Alignment -> Left, 
                    Spacings -> {0, 0}, BaseStyle -> {LineIndent -> 0}], 
                    BaseStyle -> {
                    "NotebookToolbarButtonFrame", 
                    "NotebookToolbarMenuItem"}]}, {1, 2}, 1, BaseStyle -> 
                    "NotebookToolbarButtonOverlay"], {
                   "MouseUp" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, False], 
                    "MouseDown" :> 
                    FEPrivate`Set[Toolbar`Private`mouseDownQ, True], 
                    "MouseEntered" :> (ToolbarCommon`Private`selection = 
                    ToolbarCommon`Private`style$)}, PassEventsDown -> True], 
                  DynamicModuleValues :> {}], NotebookDelete[
                   EvaluationCell[]]; If[
                   Not[ToolbarCommon`Private`hasSelectedCellQ], 
                   NotebookWrite[ToolbarCommon`Private`nb, 
                    Cell[
                    Switch[
                    Lookup[
                    
                    AbsoluteCurrentValue[{
                    StyleDefinitions, ToolbarCommon`Private`style$}], 
                    FormatType], 
                    Alternatives[InputForm, StandardForm], BoxData, 
                    Alternatives[TextForm, TraditionalForm], Identity, 
                    Blank[], Identity][""], 
                    (If[
                    MatchQ[#, {ToolbarCommon`Private`style$, 
                    BlankNullSequence[]}], 
                    Apply[Sequence, #], ToolbarCommon`Private`style$]& )[
                    AbsoluteCurrentValue[DefaultNewCellStyle]]], All]; 
                   SelectionMove[
                    ToolbarCommon`Private`nb, Before, CellContents], 
                   SelectionMove[ToolbarCommon`Private`nb, All, Cell]; 
                   MathLink`CallFrontEnd[
                    FrontEnd`SelectionSetStyle[
                    ToolbarCommon`Private`nb, ToolbarCommon`Private`style$]]],
                  Appearance -> "Suppressed", BaseStyle -> 
                 "NotebookToolbarButton", Evaluator -> "System", Method -> 
                 "Preemptive"]], ToolbarCommon`Private`styleList]], 
             DestroyAfterEvaluation -> True]}, Alignment -> Left, BaseStyle -> 
           "NotebookToolbarText", ItemSize -> Full], FrameMargins -> 2, 
          ImageSize -> {
            Scaled[1], 
            UpTo[250]}, AppearanceElements -> None, FrameMargins -> Automatic,
           ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}],
          Background -> GrayLevel[0.115], BaseStyle -> "NotebookToolbarText", 
         FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           GrayLevel[0.438]], ImageMargins -> {{0, 1}, {1, 0}}, 
         ImageSize -> {200, All}, RoundingRadius -> 3], 
        Initialization :> (ToolbarCommon`Private`styleList = Part[
            FE`Evaluate[
             FEPrivate`GetPopupList[
              EvaluationNotebook[], "MenuListStyles"]], 
            Span[2, All], 1]; ToolbarCommon`Private`nb = EvaluationNotebook[]; 
         ToolbarCommon`Private`hasSelectedCellQ = Not[
            MemberQ[{None, "CellCaret"}, 
             CurrentValue[ToolbarCommon`Private`nb, "SelectionType"]]]; 
         ToolbarCommon`Private`cellStyle = CurrentValue[
            NotebookSelection[ToolbarCommon`Private`nb], "CellStyleName"]; 
         ToolbarCommon`Private`styleDefs =
          CurrentValue[ToolbarCommon`Private`nb, StyleDefinitions]; 
         ToolbarCommon`Private`preview[
            Pattern[ToolbarCommon`Private`x$, 
             Blank[]]] := (
           ToolbarCommon`Private`preview[ToolbarCommon`Private`x$] = Rasterize[
             Notebook[{
               Cell[
               "", CellMargins -> 0, CellOpen -> False, 
                CellElementSpacings -> {"ClosedCellHeight" -> 0}], 
               Cell[
               "AaBbCc", ToolbarCommon`Private`x$, 
                CounterAssignments -> {{ToolbarCommon`Private`x$, 0}}, 
                ShowCellBracket -> True, 
                CellMargins -> {{Inherited, 2}, {Inherited, Inherited}}], 
               Cell[
               "", CellMargins -> 0, CellOpen -> False, 
                CellElementSpacings -> {"ClosedCellHeight" -> 0}]}, 
              WindowSize -> {300, Automatic}, StyleDefinitions ->
              ToolbarCommon`Private`styleDefs, Background->GrayLevel[0.07]], Background->GrayLevel[0.07]]);
         ToolbarCommon`Private`selection = 
          First[ToolbarCommon`Private`styleList]; AttachCell[
           EvaluationCell[], 
           Cell[
            BoxData[
             ToBoxes[
              DynamicModule[{}, 
               Framed[
                Dynamic[
                 Pane[
                  ToolbarCommon`Private`preview[
                  ToolbarCommon`Private`selection]], SynchronousUpdating -> 
                 False, TrackedSymbols :> {ToolbarCommon`Private`selection}, 
                 CachedValue -> PaneBox["", ImageSize -> {Automatic, 100}]], 
                Background -> GrayLevel[0.115], FrameMargins -> None, 
                FrameStyle -> Directive[
                  AbsoluteThickness[1], 
                  GrayLevel[0.8]], ImageSize -> 300, RoundingRadius -> 3], 
               InheritScope -> True]]]], 
           If[AbsoluteCurrentValue[
              EvaluationNotebook[], {WindowSize, 1}] > 600, {Right, Top}, {
            Left, Bottom}], 0, {Left, Top}]), DynamicModuleValues :> {}], {
       Magnification -> Dynamic[
          
          CurrentValue[$FrontEndSession, {
           PrivateFrontEndOptions, "InterfaceSettings", "NotebookToolbar", 
            "Magnification"}, 
           FEPrivate`Switch[
           FEPrivate`$SystemID, "MacOSX-ARM64", 1., "MacOSX-x86-64", 1., 
            Blank[], 0.75]]], "ToolbarMenu" -> None}, False, "System", 
       Dynamic[Toolbar`Private`mouseClickListener$$], 
       Dynamic[Toolbar`Private`timeWhenThisMenuLastClosed$$], 
       Sequence[], 
       Sequence[], "FreezeDynamics" -> True],
     Evaluator->"System",
     Method->"Preemptive"],
    DynamicModuleValues:>{}],
   DynamicBox[
    (FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[#, $Failed], 
      FEPrivate`SameQ[
       FEPrivate`TruncateStringToWidth[#, "", 115], #]], 
     FEPrivate`FrontEndResource["NotebookToolbarStrings", "CellStyleTooltip"], 
     RowBox[{
       FEPrivate`FrontEndResource[
       "NotebookToolbarStrings", "CellStyleTooltip"], "  ", "(", #, ")"}]]& )[
    
     FrontEnd`CurrentValue[
      FrontEnd`NotebookSelection[
       FrontEnd`EvaluationNotebook[]], "CellStyleName"]]],
   TooltipDelay->0.25,
   TooltipStyle->"NotebookToolbarTooltip"],
  Annotation[#, 
   Dynamic[
    RawBoxes[
     (FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[#, $Failed], 
       FEPrivate`SameQ[
        FEPrivate`TruncateStringToWidth[#, "", 115], #]], 
      FEPrivate`FrontEndResource[
      "NotebookToolbarStrings", "CellStyleTooltip"], 
      RowBox[{
        FEPrivate`FrontEndResource[
        "NotebookToolbarStrings", "CellStyleTooltip"], "  ", "(", #, ")"}]]& )[
      FrontEnd`CurrentValue[
       FrontEnd`NotebookSelection[
        FrontEnd`EvaluationNotebook[]], "CellStyleName"]]]], "Tooltip"]& ],

"ToolbarSettingsIcon" ->
  GraphicsBox[{EdgeForm[], FaceForm[GrayLevel[0.5]], GeometricTransformationBox[
    DiskBox[{0, 0}, 0.3], {{{-1, 0}}, {{0, 0}}, {{1, 0}}}]}, PlotRange -> All, 
  AspectRatio -> Automatic, ImageSize -> 11, ImagePadding -> {{0, 1}, {1, 0}}]
}
@|
@@resource NotebookToolbarLocalizedExpressions
{

"ToolbarContextMenu" -> {
	MenuItem["Hide Toolbar",
		KernelExecute[CurrentValue[InputNotebook[], WindowToolbars] =
			DeleteCases[Flatten[{CurrentValue[InputNotebook[], WindowToolbars]}], "MultipurposeBar"]],
		MenuEvaluator -> "System"],
	Delimiter,
	MenuItem["Hide Toolbar in New Notebooks",
		KernelExecute[CurrentValue[$FrontEnd, WindowToolbars] =
			DeleteCases[Flatten[{CurrentValue[$FrontEnd, WindowToolbars]}], "MultipurposeBar"]],
		MenuEvaluator -> "System"],
	MenuItem["Show Toolbar in New Notebooks",
		KernelExecute[CurrentValue[$FrontEnd, WindowToolbars] =
			DeleteDuplicates[Flatten[{CurrentValue[$FrontEnd, WindowToolbars], "MultipurposeBar"}]]],
		MenuEvaluator -> "System"] }

}
@|
@|
@| Uncomment below to add translations
@|
@| @|
@| @@resource NotebookToolbarLocalizedExpressions ChineseSimplified
@| {
@| }
@| @|
@| @|
@| @@resource NotebookToolbarLocalizedExpressions ChineseTraditional
@| {
@| }
@| @|
@| @|
@| @@resource NotebookToolbarLocalizedExpressions Japanese
@| {
@| }
@| @|
@| @|
@| @@resource NotebookToolbarLocalizedExpressions Spanish
@| {
@| }
@| @|
@| @|
@| @@resource NotebookToolbarLocalizedExpressions French
@| {
@| }
@| @|
@| @|
